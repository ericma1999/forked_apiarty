[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_342
[1] INFO main - Java version of the JDK used to run tests: 1.8.0_342
[2] INFO main - The compliance of the JVM is:  8
[4] INFO main - command line arguments: [-mode  jgenprog  -location  /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/  -jvm4testexecution  /usr/lib/jvm/java-8-openjdk-amd64/bin/  -failing  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest  -srcjavafolder  /src/main/java  -srctestfolder  /src/test/java  -binjavafolder  /target/classes  -bintestfolder  /target/test-classes  -maxtime  120  -stopfirst  true  -maxgen  1000000  -seed  0  -scope  local  -population  1  -dependencies  /root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar:/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/astor/lib/gzoltar/com.gzoltar-0.0.3.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.0.1.pom]
[7] INFO AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-11-openjdk-amd64
Source folders: [/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java]
Source Test folders: [/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/test/java]
---- Creating spoon model
Creating model,  Code location from working folder: /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java
building model: /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar, /root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar, /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar, /root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar, /root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, /root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, /root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar, /root/.m2/repository/junit/junit/4.12/junit-4.12.jar, /root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /astor/lib/gzoltar/com.gzoltar-0.0.3.jar]
Problem compiling the model with compliance level 8
The import com.fasterxml.jackson.dataformat.xml.PackageVersion cannot be resolved at /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java:15
Recompiling with compliance level 8
building model: /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar, /root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar, /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar, /root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar, /root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, /root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, /root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar, /root/.m2/repository/junit/junit/4.12/junit-4.12.jar, /root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /astor/lib/gzoltar/com.gzoltar-0.0.3.jar]
Error compiling: The import com.fasterxml.jackson.dataformat.xml.PackageVersion cannot be resolved at /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java:15
Astor continues when model build fails. Classes created: 33
Number of CtTypes created: 33
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 63
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/astor/.', projectPath='/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml', srcJavaDir=[/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/main/java], srcTestDir=[/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/src/test/java], binJavaDir=[/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/target/classes], binTestDir=[/apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/target/test-classes], classpath='/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar:/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/astor/lib/gzoltar/com.gzoltar-0.0.3.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/root/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=7200000, testRunnerJVMArgs='null', threshold=0.1, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[com.fasterxml.jackson.dataformat.xml.ser.TestSerializationOrdering#testOrdering, com.fasterxml.jackson.dataformat.xml.failing.TestDeserialization#testEmptyStringFromElemAndAttr, com.fasterxml.jackson.dataformat.xml.ser.TestSerializerCustom#testIssue42, com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testUnwrappedListBeanDeser, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleNsElem, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2b, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidDoctype, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testEmptyElementToString, com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest#testXmlAttributesWithNextTextValue, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataStringArray, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimplest, com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testSimpleNsAttr, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testWithAttr, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleViaObjectReader, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCustomSerializer, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testLongArrayToX, com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testTwoAttributes, com.fasterxml.jackson.dataformat.xml.lists.ListAsObjectTest#testCollection, com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testOptionalAttr, com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testUntypedEnum, com.fasterxml.jackson.dataformat.xml.adapters.TestIssue47Attribute#testEmptyStringFromElemAndAttr, com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testSimpleUnwrappingRoundtrip, com.fasterxml.jackson.dataformat.xml.ser.TestNamespaces#testRootNamespace, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testIntArrayToX, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListAsProperty, com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testElementWrapper, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testXmlAttributes, com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIdsFromAttributes, com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingWithAttribute, com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testRootName, com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyString162, com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testAttributeAndElement, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrappingWithEmptyLists, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListWithEmptyCData129Test#testListWithEmptyCData, com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testWithTwoAttributes, com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testSimple, com.fasterxml.jackson.dataformat.xml.misc.EmptyPolymorphicTest#testEmpty, com.fasterxml.jackson.dataformat.xml.failing.TestConflictingGetters#testIssue27, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMapSimpleAnnotation, com.fasterxml.jackson.dataformat.xml.incr.IncrementalWritingTest#testSimple, com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperCopy, com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testOptionalsWithMissingType, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testNullXform, com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testNested, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testRootName, com.fasterxml.jackson.dataformat.xml.lists.WrappedListsTest#testEmptyList, com.fasterxml.jackson.dataformat.xml.failing.TestUnwrappedDeserIssue86#testDeserializeUnwrappedListWhenLocalNameForRootElementAndXmlPropertyMatch, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidXmlDecl, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testDeserializeAsText, com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSecondLevelAttribute, com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testRenamedRootItem, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringsWithAttribute, com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testMapper, com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMissingOptionalAttr, com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testPersonAsXml, com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedList, com.fasterxml.jackson.dataformat.xml.failing.TestUntypedListSerialization#testListAsObject, com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testRootEnumIssue121, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testRoundTripWithSample, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested2_1, com.fasterxml.jackson.dataformat.xml.incr.PartialReadTest#testSimpleRead, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testTextOnlyPojo, com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue6, com.fasterxml.jackson.dataformat.xml.deser.TestViews#testNullSuppression, com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testFromAttribute, com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassObject, com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue44, com.fasterxml.jackson.dataformat.xml.jaxb.JAXBObjectId170Test#testPolyIdList178, com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMapWithAttr, com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListBeanDeser, com.fasterxml.jackson.dataformat.xml.failing.TestEmptyContent#testNoContent, com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue117AnySetterAttrs, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMap, com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperSerialization, com.fasterxml.jackson.dataformat.xml.lists.ListDeser191Test#testListDeser, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue66, com.fasterxml.jackson.dataformat.xml.misc.NodeTest#testMixed, com.fasterxml.jackson.dataformat.xml.misc.ObjectId104Test#testSimpleCollectionDeserWithForwardRefs, com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testGood, com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingSubWithAttribute, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test#testNestedUnwrappedLists180, com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testAsTextWithJAXB, com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsClassArray, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testWrappedLists, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testByteArrayFrom, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testListViaObjectReader, com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassProperty, com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testListSerialization, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testArrayIdentityTransforms, com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithAttribute, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringArrayWithAttribute, com.fasterxml.jackson.dataformat.xml.RoundtripContentTest#testRoundtrip, com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testListWithAttributes, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testOptionalsWithMissingType, com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithGetters, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testMultiLevel172, com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml11Declaration, com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testListWithAttrOnlyValues, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testSimpleStringElement, com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsPropertyWithObjectId, com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest#testXmlTextWithSuppressedValue, com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleElement, com.fasterxml.jackson.dataformat.xml.deser.TestBinaryData#testTwoBinaryProps, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleInvalid, com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testNoElementWrapper, com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIssue43, com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testOptionals, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidPI, com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleAttribute, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testNakedMap, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleStringBean, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleIntBean, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttrAndElem, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testMissingString, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap_nonJaxb, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrapping, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleMap, com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testEmptyTags, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleWithEmpty, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation_nonJaxb, com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testStringList, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testShortArrayToX, com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperVersions, com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testSimpleWrappedList, com.fasterxml.jackson.dataformat.xml.ser.TestSerializationManual#testIssue54, com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testSerializeAsAttr, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testSerializeAsText, com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testBad, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testAlternateTextElementName, com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testRootAttributes, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testMap, com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testStringsInList, com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringWithAttribute, com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue7, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty2, com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsWrappedClassArray, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap, com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testEmptyElem, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataString, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidComment, com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidRoot, com.fasterxml.jackson.dataformat.xml.failing.SupportDTDDefaultsTest#testDTDAttempt, com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml10Declaration, com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testArraySerialization, com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation, com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyStringElement, com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testParentListRoundtrip, com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListToIntArray, com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue24, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleNested, com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttribute, com.fasterxml.jackson.dataformat.xml.lists.DeserializePolyList178Test#testPolyIdList178, com.fasterxml.jackson.dataformat.xml.lists.ListAnnotationSharingTest#testAnnotationSharing, com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testUnwrappedLists, com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testRoundTripWithJacksonExample, com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty, com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testForceElementAsArray, com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest#testEmptyList, com.fasterxml.jackson.dataformat.xml.deser.TestEnums#testEnum, com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testAttrAndElem, com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testXmlFactory, com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testWriteToFile, com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue19], jUnit5Tests=[], jacocoIncludes=[], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=OCHIAI, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationOrdering#testOrdering, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestDeserialization#testEmptyStringFromElemAndAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializerCustom#testIssue42, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testUnwrappedListBeanDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleNsElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2b, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidDoctype, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testEmptyElementToString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest#testXmlAttributesWithNextTextValue, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataStringArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimplest, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testSimpleNsAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testWithAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleViaObjectReader, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCustomSerializer, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testLongArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testTwoAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListAsObjectTest#testCollection, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testOptionalAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testUntypedEnum, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.adapters.TestIssue47Attribute#testEmptyStringFromElemAndAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testSimpleUnwrappingRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestNamespaces#testRootNamespace, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testIntArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListAsProperty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testElementWrapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testXmlAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIdsFromAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testRootName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyString162, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testAttributeAndElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrappingWithEmptyLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListWithEmptyCData129Test#testListWithEmptyCData, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testWithTwoAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testSimple, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.EmptyPolymorphicTest#testEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestConflictingGetters#testIssue27, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMapSimpleAnnotation, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.incr.IncrementalWritingTest#testSimple, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperCopy, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testOptionalsWithMissingType, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testNullXform, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testNested, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testRootName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.WrappedListsTest#testEmptyList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestUnwrappedDeserIssue86#testDeserializeUnwrappedListWhenLocalNameForRootElementAndXmlPropertyMatch, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidXmlDecl, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testDeserializeAsText, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSecondLevelAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testRenamedRootItem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringsWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testMapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMissingOptionalAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testPersonAsXml, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestUntypedListSerialization#testListAsObject, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testRootEnumIssue121, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testRoundTripWithSample, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested2_1, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.incr.PartialReadTest#testSimpleRead, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testTextOnlyPojo, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue6, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testNullSuppression, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testFromAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassObject, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue44, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.JAXBObjectId170Test#testPolyIdList178, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMapWithAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListBeanDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEmptyContent#testNoContent, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue117AnySetterAttrs, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperSerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeser191Test#testListDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue66, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.NodeTest#testMixed, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ObjectId104Test#testSimpleCollectionDeserWithForwardRefs, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testGood, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingSubWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test#testNestedUnwrappedLists180, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testAsTextWithJAXB, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsClassArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testWrappedLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testByteArrayFrom, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testListViaObjectReader, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassProperty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testListSerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testArrayIdentityTransforms, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringArrayWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.RoundtripContentTest#testRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testListWithAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testOptionalsWithMissingType, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithGetters, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testMultiLevel172, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml11Declaration, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testListWithAttrOnlyValues, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testSimpleStringElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsPropertyWithObjectId, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest#testXmlTextWithSuppressedValue, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestBinaryData#testTwoBinaryProps, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleInvalid, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testNoElementWrapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIssue43, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testOptionals, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidPI, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testNakedMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleStringBean, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleIntBean, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttrAndElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testMissingString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap_nonJaxb, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrapping, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testEmptyTags, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleWithEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation_nonJaxb, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testStringList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testShortArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperVersions, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testSimpleWrappedList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationManual#testIssue54, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testSerializeAsAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testSerializeAsText, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testBad, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testAlternateTextElementName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testRootAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testStringsInList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue7, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty2, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsWrappedClassArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testEmptyElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidComment, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidRoot, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.SupportDTDDefaultsTest#testDTDAttempt, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml10Declaration, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testArraySerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyStringElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testParentListRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListToIntArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue24, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleNested, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.DeserializePolyList178Test#testPolyIdList178, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListAnnotationSharingTest#testAnnotationSharing, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testUnwrappedLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testRoundTripWithJacksonExample, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testForceElementAsArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest#testEmptyList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestEnums#testEnum, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testAttrAndElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testXmlFactory, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testWriteToFile, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue19], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@77a074b4}
Running TestContext{testMethods=[[Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationOrdering#testOrdering, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestDeserialization#testEmptyStringFromElemAndAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializerCustom#testIssue42, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testUnwrappedListBeanDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleNsElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2b, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidDoctype, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testEmptyElementToString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest#testXmlAttributesWithNextTextValue, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataStringArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimplest, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testSimpleNsAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testWithAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleViaObjectReader, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCustomSerializer, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testLongArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testTwoAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListAsObjectTest#testCollection, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testOptionalAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testUntypedEnum, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.adapters.TestIssue47Attribute#testEmptyStringFromElemAndAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testSimpleUnwrappingRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestNamespaces#testRootNamespace, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testIntArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListAsProperty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testElementWrapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testXmlAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIdsFromAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testRootName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyString162, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.AttributesWithJAXBTest#testAttributeAndElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrappingWithEmptyLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListWithEmptyCData129Test#testListWithEmptyCData, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testWithTwoAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testSimple, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.EmptyPolymorphicTest#testEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestConflictingGetters#testIssue27, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMapSimpleAnnotation, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.incr.IncrementalWritingTest#testSimple, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperCopy, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.Issue101UnwrappedListAttributesTest#testOptionalsWithMissingType, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testNullXform, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testNested, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testRootName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.WrappedListsTest#testEmptyList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestUnwrappedDeserIssue86#testDeserializeUnwrappedListWhenLocalNameForRootElementAndXmlPropertyMatch, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidXmlDecl, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testDeserializeAsText, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSecondLevelAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testRenamedRootItem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringsWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testMapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMissingOptionalAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testPersonAsXml, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestUntypedListSerialization#testListAsObject, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEnums#testRootEnumIssue121, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testRoundTripWithSample, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested2_1, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.incr.PartialReadTest#testSimpleRead, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testTextOnlyPojo, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue6, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testNullSuppression, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testFromAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassObject, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue44, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.JAXBObjectId170Test#testPolyIdList178, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testMapWithAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListBeanDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestEmptyContent#testNoContent, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue117AnySetterAttrs, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testSimpleKeyMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperSerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeser191Test#testListDeser, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue66, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.NodeTest#testMixed, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ObjectId104Test#testSimpleCollectionDeserWithForwardRefs, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testGood, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.UnwrappingWithXMLTest#testUnwrappingSubWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test#testNestedUnwrappedLists180, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testAsTextWithJAXB, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsClassArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testWrappedLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testByteArrayFrom, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testListViaObjectReader, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsClassProperty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testListSerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testArrayIdentityTransforms, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringArrayWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.RoundtripContentTest#testRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testListWithAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testOptionalsWithMissingType, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListDeserializationTest#testWrappedListWithGetters, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testMultiLevel172, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml11Declaration, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testListWithAttrOnlyValues, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testSimpleStringElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest#testAsPropertyWithObjectId, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest#testXmlTextWithSuppressedValue, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestBinaryData#testTwoBinaryProps, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNested1_2, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleInvalid, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.ElementWrapperTest#testNoElementWrapper, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListWithAttributes#testIssue43, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testOptionals, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidPI, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testSimpleAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testNakedMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleStringBean, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleIntBean, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttrAndElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testMissingString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap_nonJaxb, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testDefaultWrapping, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testSimpleMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testEmptyTags, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleWithEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation_nonJaxb, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testStringList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testShortArrayToX, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.VersionInfoTest#testMapperVersions, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListSerializationTest#testSimpleWrappedList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationManual#testIssue54, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.jaxb.WithJAXBAnnotationsTest#testSerializeAsAttr, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testSerializeAsText, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.PolymorphicList97Test#testBad, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testAlternateTextElementName, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlTokenStreamTest#testRootAttributes, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testStringsInList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestStringValues#testStringWithAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestViews#testIssue7, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty2, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestPolymorphic#testAsWrappedClassArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMap, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestIndentation#testEmptyElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testCDataString, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidComment, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.FormatDetectionTest#testSimpleValidRoot, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.SupportDTDDefaultsTest#testDTDAttempt, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestXmlDeclaration#testXml10Declaration, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.RootListHandlingTest#testArraySerialization, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.Issue37AdapterTest#testNeedEncodingKeyMapSimpleAnnotation, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.failing.TestStringValues162#testEmptyStringElement, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListRoundtripTest#testParentListRoundtrip, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.ArrayConversionsTest#testListToIntArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.misc.TextValueTest#testIssue24, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testSimpleNested, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerialization#testSimpleAttribute, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.DeserializePolyList178Test#testPolyIdList178, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.ListAnnotationSharingTest#testAnnotationSharing, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.UnwrappedListsTest#testUnwrappedLists, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestDeserialization#testRoundTripWithJacksonExample, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest#testNestedWithEmpty, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlParserTest#testForceElementAsArray, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest#testEmptyList, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.deser.TestEnums#testEnum, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testAttrAndElem, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestJDKSerializability#testXmlFactory, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.stream.XmlGeneratorTest#testWriteToFile, [Manual]TestMethod=com.fasterxml.jackson.dataformat.xml.ser.TestSerializationAttr#testIssue19], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@77a074b4}
Path to runner Classes: /astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
/astor/target/astor-2.0.0-jar-with-dependencies.jar
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@90
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@68
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@72
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@73
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@74
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@75
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider@-@90
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@120
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@119
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@120
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream@-@228
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream@-@228
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser@-@305
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser@-@305
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@153
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@153
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@119
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@119
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@24
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@18
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@19
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@22
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@23
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.util.StaxUtil@-@24
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@559
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@559
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@431
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@426
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@427
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@428
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@431
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@650
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@557
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@556
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.XmlFactory@-@557
Adding a line where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@120
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@119
Adding a line from the block where an exception was thrown: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer@-@120
Tests found: 164
Tests executed: 164
Suspicious: 1 line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 119, susp 0.7071067811865475
Suspicious: 2 line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 120, susp 0.7071067811865475
Suspicious: 3 line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 18, susp 0.5
Suspicious: 4 line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 19, susp 0.5
Suspicious: 5 line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 22, susp 0.5
Suspicious: 6 line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 23, susp 0.5
Suspicious: 7 line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 24, susp 0.5
Suspicious: 8 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 68, susp 0.5
Suspicious: 9 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 72, susp 0.5
Suspicious: 10 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 73, susp 0.5
Suspicious: 11 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 74, susp 0.5
Suspicious: 12 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 75, susp 0.5
Suspicious: 13 line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 90, susp 0.5
Suspicious: 14 line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 153, susp 0.5
Suspicious: 15 line com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream l: 228, susp 0.5
Suspicious: 16 line com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser l: 305, susp 0.5
Suspicious: 17 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 426, susp 0.5
Suspicious: 18 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 427, susp 0.5
Suspicious: 19 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 428, susp 0.5
Suspicious: 20 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 431, susp 0.5
Suspicious: 21 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 556, susp 0.5
Suspicious: 22 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 557, susp 0.5
Suspicious: 23 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 559, susp 0.5
Suspicious: 24 line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 650, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 119, susp 0.7071067811865475
Suspicious:  line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 120, susp 0.7071067811865475
Suspicious:  line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 18, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 19, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 22, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 23, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.util.StaxUtil l: 24, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 68, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 72, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 73, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 74, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 75, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider l: 90, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer l: 153, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream l: 228, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser l: 305, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 426, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 427, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 428, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 431, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 556, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 557, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 559, susp 0.5
Suspicious:  line com.fasterxml.jackson.dataformat.xml.XmlFactory l: 650, susp 0.5
Executing time Fault localization: 7 sec
Setting up the max to 73420 milliseconds (73 sec)
---- Initial suspicious size: 24
Creating variant 1
--ModifPoint:CtInvocationImpl, suspValue 0.7071067811865475, line 119, file WrapperHandlingDeserializer.java
--ModifPoint:CtReturnImpl, suspValue 0.7071067811865475, line 120, file WrapperHandlingDeserializer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 18, file StaxUtil.java
--ModifPoint:CtWhileImpl, suspValue 0.5, line 19, file StaxUtil.java
--ModifPoint:CtThrowImpl, suspValue 0.5, line 22, file StaxUtil.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 22, file StaxUtil.java
--ModifPoint:CtThrowImpl, suspValue 0.5, line 23, file StaxUtil.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 23, file StaxUtil.java
--ModifPoint:CtThrowImpl, suspValue 0.5, line 24, file StaxUtil.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 68, file XmlSerializerProvider.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 72, file XmlSerializerProvider.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 73, file XmlSerializerProvider.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 74, file XmlSerializerProvider.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 75, file XmlSerializerProvider.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 90, file XmlSerializerProvider.java
--ModifPoint:CtInvocationImpl, suspValue 0.5, line 153, file WrapperHandlingDeserializer.java
--ModifPoint:CtThrowImpl, suspValue 0.5, line 228, file XmlTokenStream.java
--ModifPoint:CtInvocationImpl, suspValue 0.5, line 305, file FromXmlParser.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 426, file XmlFactory.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 427, file XmlFactory.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 428, file XmlFactory.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 431, file XmlFactory.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 556, file XmlFactory.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 557, file XmlFactory.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 559, file XmlFactory.java
--ModifPoint:CtWhileImpl, suspValue 0.5, line 650, file XmlFactory.java
Total suspicious from FL: 24,  26
Total ModPoint created: 26
Creating program variant #1, [Variant id: 1, #gens: 26, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
Initial run of test suite fails
The original fitness is : 1.7976931348623157E308
----------------------------
---Configuration properties
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:workingDirectory= /astor/./output_astor
p:keepcomments= true
p:maxnumvariablesperingredient= 10
p:folderDiff= ./diffSolutions
p:evo_affected_by_op= true
p:clusteringfilename= clustering.csv
p:validation= process
p:modificationpointnavigation= weight
p:transformingredient= false
p:diffcontext= 0
p:evo_buggy_class= true
p:runjava7code= false
p:manipulatesuper= false
p:forceExecuteRegression= false
p:skipfitnessinitialpopulation= false
p:filterfaultlocalization= true
p:population= 1
p:maxtimefactor= 10
p:elementsToMutate= 10
p:parsesourcefromoriginal= true
p:alternativecompliancelevel= 8
p:bugId= 280
p:regressionforfaultlocalization= true
p:max_synthesis_step= 10000
p:failing= com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
p:maxmodificationpoints= 1000
p:projectIdentifier= 
p:savecompletepatched= true
p:synthesis_depth= 3
p:seed= 0
p:applyCrossover= false
p:executorjar= ./lib/jtestex7.jar
p:binjavafolder= /target/classes
p:version-location= ./math-version/
p:tmax1= 10000
p:tmax2= 73420
p:continuewhenmodelfail= true
p:locationGzoltarJar= ./lib/
p:logtestexecution= false
p:processoutputinfile= false
p:gzoltarVersion= 1.7.3
p:javacompliancelevel= 8
p:gzoltarpackagetonotinstrument= junit.framework
p:diff_type= relative
p:cleantemplates= true
p:stopfirst= true
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:testbystep= false
p:maxtime= 120
p:preservelinenumbers= true
p:resetoperations= false
p:forcesubprocesskilling= false
p:jvm4evosuitetestexecution= /usr/lib/jvm/java-11-openjdk-amd64/bin
p:dependenciespath= /root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar:/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar:/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/astor/lib/gzoltar/com.gzoltar-0.0.3.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.0.1.pom
p:pathToMVNRepository= 
p:limitbysuspicious= true
p:faultlocalization= fr.inria.astor.core.faultlocalization.flacoco.FlacocoFaultLocalization
p:maxsuspcandidates= 1000
p:antipattern= false
p:reintroduce= PARENTS:ORIGINAL
p:multipointmodification= false
p:probabilistictransformation= true
p:mutationrate= 1 
p:jvm4testexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin/
p:mode= jgenprog
p:pvariantfoldername= variant-
p:flthreshold= 0.1
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:nrPlaceholders= 1
p:nolog= False
p:saveall= false
p:evoRunOnBuggyClass= true
p:learningdir= 
p:bintestfolder= /target/test-classes
p:evosuiteresultfolder= evosuite
p:operatorspace= irr-statements
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:includeZeros= false
p:allpoints= false
p:collectonlyusedmethod= false
p:maxVarCombination= 1000
p:timezone= America/Los_Angeles
p:skipfaultlocalization= false
p:savesolution= true
p:maxGeneration= 1000000
p:evosuitetimeout= 120
p:packageToInstrument= 
p:uniqueoptogen= false
p:scope= local
p:srcjavafolder= /src/main/java
p:commandTrunk= 50000
p:metid= 0
p:ignoredTestCases= 
p:savespoonmodelondisk= false
p:targetelementprocessor= statements
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:maxCombinationVariableLimit= false
p:jvmversion= 1.8.0_342
p:nomodificationconvergence= 100
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:srctestfolder= /src/test/java
p:outputjsonresult= true
p:gzoltartestpackagetoexclude= junit.framework
p:probagenmutation= false
p:resetmodel= true
p:jsonoutputname= astor_output
p:numberExecutions= 1
p:ignoreflakyinfl= false
p:evoDSE= false
p:duplicateingredientsinspace= false
p:overridemaxtime= true
p:maxnumbersolutions= 1000000
p:logsattemps= true
p:location= /apiarty/data/VUL4J-47/FasterXML/jackson-dataformat-xml/
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 26, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 26, #ops: 0, parent:1]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 15
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2, #gens: 25, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 2
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-2/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1(f=1.7976931348623157E308), 2(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1(f=1.7976931348623157E308), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 26, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 26, #ops: 0, parent:3]
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java426
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 426, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 4, #gens: 27, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 4, errors: [XmlFactory.java:795: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException { 		// note: should NOT move parser if already pointing to START_ELEMENT
	    	^, XmlFactory.java:797: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	 ^, XmlFactory.java:797: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	          ^, XmlFactory.java:797: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                      ^, XmlFactory.java:797: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                  ^, XmlFactory.java:797: error: <identifier> expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                         ^, XmlFactory.java:797: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                          ^, XmlFactory.java:797: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                                      ^, XmlFactory.java:798: error: not a statement
	 * incremental serialization to compose large output by serializing a sequence
	 ^, XmlFactory.java:798: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	              ^, XmlFactory.java:798: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                               ^, XmlFactory.java:798: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                             ^, XmlFactory.java:798: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                       ^, XmlFactory.java:798: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                                     ^, XmlFactory.java:799: error: not a statement
	 * of individual objects.
	 ^, XmlFactory.java:799: error: ';' expected
	 * of individual objects.
	     ^, XmlFactory.java:799: error: ';' expected
	 * of individual objects.
	                        ^, XmlFactory.java:801: error: illegal start of type
	 * @since 2.4
	          ^, XmlFactory.java:802: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException { 		try { 			sw = _initializeXmlWriter(sw);} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);} 		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(sw, false); 		return new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sw);} 	/* /**********************************************************
	    	^, XmlFactory.java:808: error: illegal start of expression
	 */ 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(out, "UTF-8"));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.Writer w) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(w));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected final javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// And just for Sun Stax parser (JDK default), seems that we better define default namespace 		// (Woodstox doesn't care) -- otherwise it'll add unnecessary odd declaration 		sw.setDefaultNamespace(""); 		return sw;} 	protected final javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// for now, nothing to do... except let's find the root element
	    	^, XmlFactory.java:825: error: illegal start of type
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		^, XmlFactory.java:825: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                     ^, XmlFactory.java:825: error: ';' expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                       ^, XmlFactory.java:825: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                           			                                                                      		 ^, XmlFactory.java:826: error: illegal start of type
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		^, XmlFactory.java:826: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		     ^, XmlFactory.java:826: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		                                                                   ^, XmlFactory.java:828: error: illegal start of type
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			^, XmlFactory.java:828: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                         ^, XmlFactory.java:828: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                             ^, XmlFactory.java:828: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                ^, XmlFactory.java:828: error: ';' expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                 ^, XmlFactory.java:828: error: class, interface, or enum expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                     				                                                                      ^, XmlFactory.java:831: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                    ^, XmlFactory.java:831: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			^, XmlFactory.java:831: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                    ^, XmlFactory.java:831: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                   ^, XmlFactory.java:831: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                                                                                              				                                                                                                                                            ^, XmlFactory.java:832: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                   ^, XmlFactory.java:832: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                ^, XmlFactory.java:832: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                  	                     ^, XmlFactory.java:834: error: class, interface, or enum expected
		 */ 		int ch = ((int) (b)) & 0xff; 		if (ch >= 'A') { 			// in theory, colon could be; in practice it should never be valid (wrt namespace) 			// This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...
		    		                             		^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			            ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		             ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                     ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                         ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                  ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                    ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                         ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                     ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				          ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				            			                           				          ^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				            			                           				            			                    			^, XmlFactory.java:835: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;} }}
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				            			                           				            			                    			                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (3(f=1.7976931348623157E308), 4(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (3(f=1.7976931348623157E308), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 26, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 26, #ops: 0, parent:5]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 3 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 4 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [_parsingContext, name]
--> var from patch: _parsingContext spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: name spoon.support.reflect.code.CtVariableReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(name)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(name)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 6, #gens: 26, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 6, errors: [FromXmlParser.java:509: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:509: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:509: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:509: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:509: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:509: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:509: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:510: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:510: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:510: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:510: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:510: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:511: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:511: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:511: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:512: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:512: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:512: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:524: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:543: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					break; 				case START_ARRAY : 					_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 					break; 				case END_OBJECT : 				case END_ARRAY : 					_parsingContext = _parsingContext.getParent(); 					_namesToWrap = _parsingContext.getNamesToWrap(); 					break; 				case FIELD_NAME : 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					break; 				default : 					// VALUE_STRING, VALUE_NULL 					// should be fine as is?} 			return t;} 		int token = _xmlTokens.next(); 		// Need to have a loop just because we may have to eat/convert 		// a start-element that indicates an array element.
	 ^, FromXmlParser.java:550: error: orphaned case
					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 						_currText = _xmlTokens.getText(); 						_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 					_currText = _xmlTokens.getText(); 					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT :
					                  						                    						                                                              						                                  						                                                                    						                                                                        					                                                           					                                                                     				^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                         ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                          ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                              ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                       ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                    ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                     ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                                ^, FromXmlParser.java:697: error: case, default, or '}' expected
	{
	^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		       ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		        ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		         ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		           ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                               ^, FromXmlParser.java:724: error: not a statement
	public java.lang.String getText() throws java.io.IOException 
	                                                ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                                                            ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                              ^, FromXmlParser.java:741: error: not a statement
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                        ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:746: error: not a statement
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                              ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                               ^, FromXmlParser.java:789: error: not a statement
	public char[] getTextCharacters() throws java.io.IOException {
	                                                ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                        ^, FromXmlParser.java:795: error: not a statement
	public int getTextLength() throws java.io.IOException {
	                                         ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                        ^, FromXmlParser.java:801: error: not a statement
	public int getTextOffset() throws java.io.IOException {
	                                         ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:810: error: ';' expected
	public boolean hasTextCharacters() 
	                                ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                         ^, FromXmlParser.java:822: error: not a statement
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                          ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                                      ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                            ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                ^, FromXmlParser.java:828: error: not a statement
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                            ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                              ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:848: error: not a statement
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                  ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                              ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                              ^, FromXmlParser.java:863: error: not a statement
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:869: error: not a statement
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                                        ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                            ^, FromXmlParser.java:875: error: not a statement
	public double getDoubleValue() throws java.io.IOException {
	                                             ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                                                         ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                          ^, FromXmlParser.java:881: error: not a statement
	public float getFloatValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                      ^, FromXmlParser.java:887: error: not a statement
	public int getIntValue() throws java.io.IOException {
	                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                                                   ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                        ^, FromXmlParser.java:893: error: not a statement
	public long getLongValue() throws java.io.IOException {
	                                         ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                     ^, FromXmlParser.java:899: error: not a statement
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                      ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                                  ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                      ^, FromXmlParser.java:905: error: not a statement
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(name)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (5(f=1.7976931348623157E308), 6(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (5(f=1.7976931348623157E308), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 26, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 26, #ops: 0, parent:7]
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtWhileImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 8, #gens: 27, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 8, errors: [StaxUtil.java:24: error: unreachable statement
		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t)); 			while (t.getCause() != null) { 				t = t.getCause();} }
		                                               			                                          			^]
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=1.7976931348623157E308), 8(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (7(f=1.7976931348623157E308), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 26, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 26, #ops: 0, parent:9]
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [_byteArrayBuilder]
--> var from patch: _byteArrayBuilder spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_byteArrayBuilder.reset()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_byteArrayBuilder.reset()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 10, #gens: 26, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 10, errors: [FromXmlParser.java:956: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:956: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:956: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:956: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:956: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:956: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:956: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:957: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:957: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:957: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:957: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:957: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:958: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:958: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:958: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:959: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:959: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:959: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:971: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:990: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					break; 				case START_ARRAY : 					_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 					break; 				case END_OBJECT : 				case END_ARRAY : 					_parsingContext = _parsingContext.getParent(); 					_namesToWrap = _parsingContext.getNamesToWrap(); 					break; 				case FIELD_NAME : 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					break; 				default : 					// VALUE_STRING, VALUE_NULL 					// should be fine as is?} 			return t;} 		int token = _xmlTokens.next(); 		// Need to have a loop just because we may have to eat/convert 		// a start-element that indicates an array element.
	 ^, FromXmlParser.java:997: error: orphaned case
					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 						_currText = _xmlTokens.getText(); 						_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 					_currText = _xmlTokens.getText(); 					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 					_currText = _xmlTokens.getText(); 					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						// One more refinement (pronunced like "hack") is that if 						// we had an empty String (or all white space), and we are 						// deserializing an array, we better hide the empty text. 						// Also: must skip following END_ELEMENT 						_xmlTokens.skipEndElement(); 						if (_parsingContext.inArray()) { 							if (_isEmpty(_currText)) { 								// 06-Jan-2015, tatu: as per [dataformat-xml#180], need to 								// expose as empty Object, not null (or, worse, as used to 								// be done, by swallowing the token) 								_nextToken = com.fasterxml.jackson.core.JsonToken.END_OBJECT; 								_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 								return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;}} 						return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;} else // [dataformat-xml#177]: empty text may also need to be skipped 					// but... [dataformat-xml#191]: looks like we can't short-cut, must 					// loop over again
					                  						                    						                                                              						                                  						                                                                    						                                                                        					                                                           					                                                                     				^, FromXmlParser.java:1004: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                     ^, FromXmlParser.java:1004: error: not a statement
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                                      ^, FromXmlParser.java:1004: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                                                  ^, FromXmlParser.java:1008: error: orphaned case
				if (_mayBeLeaf) { 					_mayBeLeaf = false; 					_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 					_currText = _xmlTokens.getText(); 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					_currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} else { 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					_currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;} 				break; 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				_currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				return _currText = _xmlTokens.getText(); 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 				_currText = _xmlTokens.getText(); 				if (_mayBeLeaf) { 					_mayBeLeaf = false; 					// Also: must skip following END_ELEMENT 					_xmlTokens.skipEndElement(); 					// NOTE: this is different from nextToken() -- NO work-around 					// for otherwise empty List/array 					_currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 					return _currText;} 				// If not a leaf, need to transform into property... 				_parsingContext.setCurrentName(_cfgNameForTextElement); 				_nextToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				_currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				break; 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END : 				_currToken = null;} 		return null;} 	private void _updateState(com.fasterxml.jackson.core.JsonToken t) { 		switch (t) { 			case START_OBJECT : 				_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 				break; 			case START_ARRAY : 				_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 				break; 			case END_OBJECT : 			case END_ARRAY : 				_parsingContext = _parsingContext.getParent(); 				_namesToWrap = _parsingContext.getNamesToWrap(); 				break; 			case FIELD_NAME : 				_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 				break; 			default :}} 	/* /**********************************************************
				                  					                    					                                                              					                                  					                                                                    					                                                                        					                                                           					                                                               				       			^, FromXmlParser.java:1011: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;} 		switch (_currToken) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			default : 				return _currToken.asString();}} 	// @since 2.1 	@java.lang.Override 	public final java.lang.String getValueAsString() throws java.io.IOException { 		return getValueAsString(null);} 	@java.lang.Override 	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException { 		com.fasterxml.jackson.core.JsonToken t = _currToken; 		if (t == null) { 			return null;} 		switch (t) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			case START_OBJECT : 				// the interesting case; may be able to convert certain kinds of 				// elements (specifically, ones with attributes, CDATA only content) 				// into VALUE_STRING
	    	                    	                               ^, FromXmlParser.java:1011: error: not a statement
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;} 		switch (_currToken) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			default : 				return _currToken.asString();}} 	// @since 2.1 	@java.lang.Override 	public final java.lang.String getValueAsString() throws java.io.IOException { 		return getValueAsString(null);} 	@java.lang.Override 	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException { 		com.fasterxml.jackson.core.JsonToken t = _currToken; 		if (t == null) { 			return null;} 		switch (t) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			case START_OBJECT : 				// the interesting case; may be able to convert certain kinds of 				// elements (specifically, ones with attributes, CDATA only content) 				// into VALUE_STRING
	    	                    	                                                ^, FromXmlParser.java:1011: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;} 		switch (_currToken) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			default : 				return _currToken.asString();}} 	// @since 2.1 	@java.lang.Override 	public final java.lang.String getValueAsString() throws java.io.IOException { 		return getValueAsString(null);} 	@java.lang.Override 	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException { 		com.fasterxml.jackson.core.JsonToken t = _currToken; 		if (t == null) { 			return null;} 		switch (t) { 			case FIELD_NAME : 				return getCurrentName(); 			case VALUE_STRING : 				return _currText; 			case START_OBJECT : 				// the interesting case; may be able to convert certain kinds of 				// elements (specifically, ones with attributes, CDATA only content) 				// into VALUE_STRING
	    	                    	                                                            ^, FromXmlParser.java:1013: error: ';' expected
						would follow.
						            ^, FromXmlParser.java:1014: error: orphaned default
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                               ^, FromXmlParser.java:1014: error: not a statement
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                ^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                            ^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                        ^, FromXmlParser.java:1014: error: not a statement
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                                         ^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                                                     ^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                                                        		                                   		                                          	                    	                        ^, FromXmlParser.java:1014: error: not a statement
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                                                        		                                   		                                          	                    	                                         ^, FromXmlParser.java:1014: error: ';' expected
						 */ 						_xmlTokens.skipEndElement(); 						return _currText = str;}} 				return null; 			default : 				if (_currToken.isScalarValue()) { 					return _currToken.asString();}} 		return defValue;} 	@java.lang.Override 	public char[] getTextCharacters() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? null : text.toCharArray();} 	@java.lang.Override 	public int getTextLength() throws java.io.IOException { 		java.lang.String text = getText(); 		return text == null ? 0 : text.length();} 	@java.lang.Override 	public int getTextOffset() throws java.io.IOException { 		return 0;} 	/**
						    						                             						                          				             			          				                                  					                                		                  	                    	                                                               		                                   		                                                  	                    	                                                        		                                   		                                          	                    	                                                     ^, FromXmlParser.java:1017: error: ';' expected
	 */ 	@java.lang.Override 	public boolean hasTextCharacters() { 		return false;} 	/* /**********************************************************
	    	                    	                                ^, FromXmlParser.java:1020: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.Object getEmbeddedObject() throws java.io.IOException { 		// no way to embed POJOs for now...
	    	                    	                                         ^, FromXmlParser.java:1020: error: not a statement
	 */ 	@java.lang.Override 	public java.lang.Object getEmbeddedObject() throws java.io.IOException { 		// no way to embed POJOs for now...
	    	                    	                                                          ^, FromXmlParser.java:1020: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.Object getEmbeddedObject() throws java.io.IOException { 		// no way to embed POJOs for now...
	    	                    	                                                                      ^, FromXmlParser.java:1021: error: ';' expected
		return null;} 	@java.lang.Override 	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		if ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_STRING) && ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT) || (_binaryValue == null))) { 			_reportError(("Current token (" + _currToken) + ") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");} 		/* To ensure that we won't see inconsistent data, better clear up
		              	                    	                            ^, FromXmlParser.java:1021: error: ';' expected
		return null;} 	@java.lang.Override 	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		if ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_STRING) && ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT) || (_binaryValue == null))) { 			_reportError(("Current token (" + _currToken) + ") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");} 		/* To ensure that we won't see inconsistent data, better clear up
		              	                    	                                                                                ^, FromXmlParser.java:1021: error: not a statement
		return null;} 	@java.lang.Override 	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		if ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_STRING) && ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT) || (_binaryValue == null))) { 			_reportError(("Current token (" + _currToken) + ") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");} 		/* To ensure that we won't see inconsistent data, better clear up
		              	                    	                                                                                                ^, FromXmlParser.java:1021: error: ';' expected
		return null;} 	@java.lang.Override 	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		if ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_STRING) && ((_currToken != com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT) || (_binaryValue == null))) { 			_reportError(("Current token (" + _currToken) + ") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");} 		/* To ensure that we won't see inconsistent data, better clear up
		              	                    	                                                                                                            ^, FromXmlParser.java:1024: error: ';' expected
		if (_binaryValue == null) { 			try { 				_binaryValue = _decodeBase64(b64variant);} catch (java.lang.IllegalArgumentException iae) { 				throw _constructError((("Failed to decode VALUE_STRING as base64 (" + b64variant) + "): ") + iae.getMessage());}} 		return _binaryValue;} 	@java.lang.SuppressWarnings("resource") 	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		com.fasterxml.jackson.core.util.ByteArrayBuilder builder = _getByteArrayBuilder(); 		final java.lang.String str = getText(); 		_decodeBase64(str, builder, b64variant); 		return builder.toByteArray();} 	/* /**********************************************************
		                            			      				                                                                                            				                                                                                                                  		                      	                                        	                              ^, FromXmlParser.java:1024: error: ';' expected
		if (_binaryValue == null) { 			try { 				_binaryValue = _decodeBase64(b64variant);} catch (java.lang.IllegalArgumentException iae) { 				throw _constructError((("Failed to decode VALUE_STRING as base64 (" + b64variant) + "): ") + iae.getMessage());}} 		return _binaryValue;} 	@java.lang.SuppressWarnings("resource") 	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		com.fasterxml.jackson.core.util.ByteArrayBuilder builder = _getByteArrayBuilder(); 		final java.lang.String str = getText(); 		_decodeBase64(str, builder, b64variant); 		return builder.toByteArray();} 	/* /**********************************************************
		                            			      				                                                                                            				                                                                                                                  		                      	                                        	                                                                                  ^, FromXmlParser.java:1024: error: not a statement
		if (_binaryValue == null) { 			try { 				_binaryValue = _decodeBase64(b64variant);} catch (java.lang.IllegalArgumentException iae) { 				throw _constructError((("Failed to decode VALUE_STRING as base64 (" + b64variant) + "): ") + iae.getMessage());}} 		return _binaryValue;} 	@java.lang.SuppressWarnings("resource") 	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		com.fasterxml.jackson.core.util.ByteArrayBuilder builder = _getByteArrayBuilder(); 		final java.lang.String str = getText(); 		_decodeBase64(str, builder, b64variant); 		return builder.toByteArray();} 	/* /**********************************************************
		                            			      				                                                                                            				                                                                                                                  		                      	                                        	                                                                                                  ^, FromXmlParser.java:1024: error: ';' expected
		if (_binaryValue == null) { 			try { 				_binaryValue = _decodeBase64(b64variant);} catch (java.lang.IllegalArgumentException iae) { 				throw _constructError((("Failed to decode VALUE_STRING as base64 (" + b64variant) + "): ") + iae.getMessage());}} 		return _binaryValue;} 	@java.lang.SuppressWarnings("resource") 	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException { 		com.fasterxml.jackson.core.util.ByteArrayBuilder builder = _getByteArrayBuilder(); 		final java.lang.String str = getText(); 		_decodeBase64(str, builder, b64variant); 		return builder.toByteArray();} 	/* /**********************************************************
		                            			      				                                                                                            				                                                                                                                  		                      	                                        	                                                                                                              ^, FromXmlParser.java:1027: error: ';' expected
	 */ 	@java.lang.Override 	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException { 		// TODO Auto-generated method stub
	    	                    	                                              ^, FromXmlParser.java:1027: error: not a statement
	 */ 	@java.lang.Override 	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException { 		// TODO Auto-generated method stub
	    	                    	                                                               ^, FromXmlParser.java:1027: error: ';' expected
	 */ 	@java.lang.Override 	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException { 		// TODO Auto-generated method stub
	    	                    	                                                                           ^, FromXmlParser.java:1028: error: ';' expected
		return null;} 	@java.lang.Override 	public java.math.BigDecimal getDecimalValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                           ^, FromXmlParser.java:1028: error: not a statement
		return null;} 	@java.lang.Override 	public java.math.BigDecimal getDecimalValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                                            ^, FromXmlParser.java:1028: error: ';' expected
		return null;} 	@java.lang.Override 	public java.math.BigDecimal getDecimalValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                                                        ^, FromXmlParser.java:1029: error: ';' expected
		return null;} 	@java.lang.Override 	public double getDoubleValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                            ^, FromXmlParser.java:1029: error: not a statement
		return null;} 	@java.lang.Override 	public double getDoubleValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                             ^, FromXmlParser.java:1029: error: ';' expected
		return null;} 	@java.lang.Override 	public double getDoubleValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                                         ^, FromXmlParser.java:1030: error: ';' expected
		return 0;} 	@java.lang.Override 	public float getFloatValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                          ^, FromXmlParser.java:1030: error: not a statement
		return 0;} 	@java.lang.Override 	public float getFloatValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                           ^, FromXmlParser.java:1030: error: ';' expected
		return 0;} 	@java.lang.Override 	public float getFloatValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                       ^, FromXmlParser.java:1031: error: ';' expected
		return 0;} 	@java.lang.Override 	public int getIntValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                      ^, FromXmlParser.java:1031: error: not a statement
		return 0;} 	@java.lang.Override 	public int getIntValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                       ^, FromXmlParser.java:1031: error: ';' expected
		return 0;} 	@java.lang.Override 	public int getIntValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                   ^, FromXmlParser.java:1032: error: ';' expected
		return 0;} 	@java.lang.Override 	public long getLongValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                        ^, FromXmlParser.java:1032: error: not a statement
		return 0;} 	@java.lang.Override 	public long getLongValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                         ^, FromXmlParser.java:1032: error: ';' expected
		return 0;} 	@java.lang.Override 	public long getLongValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                     ^, FromXmlParser.java:1033: error: ';' expected
		return 0;} 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                                     ^, FromXmlParser.java:1033: error: not a statement
		return 0;} 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                                                      ^, FromXmlParser.java:1033: error: ';' expected
		return 0;} 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException { 		// TODO Auto-generated method stub
		           	                    	                                                                                                  ^, FromXmlParser.java:1034: error: ';' expected
		return null;} 	@java.lang.Override 	public java.lang.Number getNumberValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                      ^, FromXmlParser.java:1034: error: not a statement
		return null;} 	@java.lang.Override 	public java.lang.Number getNumberValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                                       ^, FromXmlParser.java:1034: error: ';' expected
		return null;} 	@java.lang.Override 	public java.lang.Number getNumberValue() throws java.io.IOException { 		// TODO Auto-generated method stub
		              	                    	                                                                   ^, FromXmlParser.java:1042: error: ';' expected
	 */ 	@java.lang.Override 	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException { 		if (!_parsingContext.inRoot()) { 			_reportInvalidEOF((((": expected close marker for " + _parsingContext.getTypeDesc()) + " (from ") + _parsingContext.getStartLocation(_ioContext.getSourceReference())) + ")");}} 	/* /**********************************************************
	    	                    	                         ^, FromXmlParser.java:1042: error: not a statement
	 */ 	@java.lang.Override 	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException { 		if (!_parsingContext.inRoot()) { 			_reportInvalidEOF((((": expected close marker for " + _parsingContext.getTypeDesc()) + " (from ") + _parsingContext.getStartLocation(_ioContext.getSourceReference())) + ")");}} 	/* /**********************************************************
	    	                    	                                                             ^, FromXmlParser.java:1042: error: ';' expected
	 */ 	@java.lang.Override 	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException { 		if (!_parsingContext.inRoot()) { 			_reportInvalidEOF((((": expected close marker for " + _parsingContext.getTypeDesc()) + " (from ") + _parsingContext.getStartLocation(_ioContext.getSourceReference())) + ")");}} 	/* /**********************************************************
	    	                    	                                                                                ^, FromXmlParser.java:1048: error: illegal start of expression
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	          ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	               ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                              ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                               ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                 ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                        ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                            ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                             ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                               ^, FromXmlParser.java:1048: error: case, default, or '}' expected
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                                ^, FromXmlParser.java:1048: error: reached end of file while parsing
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                                            ^, FromXmlParser.java:1048: error: reached end of file while parsing
	 */ 	protected void _releaseBuffers() throws java.io.IOException { 		// anything we can/must release? Underlying parser should do all of it, for now?} 	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() { 		if (_byteArrayBuilder == null) { 			_byteArrayBuilder = new com.fasterxml.jackson.core.util.ByteArrayBuilder();} else { 			_byteArrayBuilder.reset();} 		return _byteArrayBuilder;} 	protected boolean _isEmpty(java.lang.String str) { 		int len = (str == null) ? 0 : str.length(); 		if (len > 0) { 			for (int i = 0; i < len; ++i) { 				if (str.charAt(i) > ' ') { 					return false;}}} 		return true;}}
	    	                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_byteArrayBuilder.reset()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (9(f=1.7976931348623157E308), 10(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (9(f=1.7976931348623157E308), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 26, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 26, #ops: 0, parent:11]
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 12
---modifPoint 3 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 4
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [((java.lang.Error) (t))]
--> var from patch: ((java.lang.Error) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 12, #gens: 26, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 12
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-12/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=1.7976931348623157E308), 12(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (11(f=1.7976931348623157E308), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 26, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 26, #ops: 0, parent:13]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [e]
--> var from patch: e spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 14, #gens: 27, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 14, errors: [StaxUtil.java:23: error: variable t is already defined in method <T>throwXmlAsIOException(javax.xml.stream.XMLStreamException)
		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		java.lang.Throwable t = e;
		                                    			                                		                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (13(f=1.7976931348623157E308), 14(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (13(f=1.7976931348623157E308), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 26, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 26, #ops: 0, parent:15]
---analyzing modificationPoint position: 4
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 16, #gens: 26, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 16
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-16/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (15(f=1.7976931348623157E308), 16(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (15(f=1.7976931348623157E308), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 26, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 26, #ops: 0, parent:17]
---analyzing modificationPoint position: 6
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 18, #gens: 26, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 18
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-18/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=1.7976931348623157E308), 18(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (17(f=1.7976931348623157E308), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 26, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 26, #ops: 0, parent:19]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch []
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 27, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 20, errors: [XmlSerializerProvider.java:71: error: unreachable statement
		return; 		if (value == null) { 			_serializeXmlNull(gen); 			return;
		        		^]
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=1.7976931348623157E308), 20(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (19(f=1.7976931348623157E308), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 26, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 26, #ops: 0, parent:21]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 22, #gens: 25, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 22
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-22/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (21(f=1.7976931348623157E308), 22(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (21(f=1.7976931348623157E308), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 26, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 26, #ops: 0, parent:23]
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [sr, javax.xml.stream.XMLStreamConstants.START_ELEMENT]
--> var from patch: sr spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: javax.xml.stream.XMLStreamConstants.START_ELEMENT spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java650
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 650, pointed element: CtWhileImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 24, #gens: 26, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 24
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-24/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (23(f=1.7976931348623157E308), 24(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (23(f=1.7976931348623157E308), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 26, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 26, #ops: 0, parent:25]
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `// default not enough, as we may need to create a new wrapping deserializer // even if delegatee doe[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `// default not enough, as we may need to create a new wrapping deserializer // even if delegatee doe[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 26, #gens: 27, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 26, errors: [WrapperHandlingDeserializer.java:120: error: unreachable statement
		throw new java.lang.IllegalStateException("Internal error: should never get called"); 		_configureParser(jp);
		                                                                                      		^]
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `// default not enough, as we may need to create a new wrapping deserializer // even if delegatee doe[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (25(f=1.7976931348623157E308), 26(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (25(f=1.7976931348623157E308), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 26, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 26, #ops: 0, parent:27]
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 2 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 12
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 3 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 28, #gens: 25, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 28
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-28/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (27(f=1.7976931348623157E308), 28(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (27(f=1.7976931348623157E308), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 26, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 26, #ops: 0, parent:29]
---analyzing modificationPoint position: 22
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 6
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [((java.lang.Error) (t))]
--> var from patch: ((java.lang.Error) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 30, #gens: 26, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 30
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-30/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=1.7976931348623157E308), 30(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (29(f=1.7976931348623157E308), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 26, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 26, #ops: 0, parent:31]
---analyzing modificationPoint position: 13
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 32, #gens: 27, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 32, errors: [StaxUtil.java:25: error: unreachable statement
		throw new java.io.IOException(t);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (31(f=1.7976931348623157E308), 32(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (31(f=1.7976931348623157E308), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 26, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 26, #ops: 0, parent:33]
---analyzing modificationPoint position: 22
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 12
---modifPoint 1 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 6
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 26, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 34
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-34/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=1.7976931348623157E308), 34(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (33(f=1.7976931348623157E308), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 26, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 26, #ops: 0, parent:35]
---analyzing modificationPoint position: 12
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 3 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 11
---modifPoint 4 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 36, #gens: 27, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 36
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-36/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (35(f=1.7976931348623157E308), 36(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (35(f=1.7976931348623157E308), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 26, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 26, #ops: 0, parent:37]
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 1 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 18
---modifPoint 3 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 4 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 38, #gens: 27, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 38, errors: [StaxUtil.java:24: error: unreachable statement
		throw ((java.lang.RuntimeException) (t)); 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));}
		                                          		^]
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=1.7976931348623157E308), 38(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (37(f=1.7976931348623157E308), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 26, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 26, #ops: 0, parent:39]
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java73
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 73, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 40, #gens: 27, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 40, errors: [XmlSerializerProvider.java:265: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:272: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:273: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:273: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:273: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:273: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:274: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:274: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:275: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:276: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=1.7976931348623157E308), 40(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (39(f=1.7976931348623157E308), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 26, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 26, #ops: 0, parent:41]
---analyzing modificationPoint position: 7
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 42, #gens: 25, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 42
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-42/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (41(f=1.7976931348623157E308), 42(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (41(f=1.7976931348623157E308), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 26, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 26, #ops: 0, parent:43]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch [content]
--> var from patch: content spoon.support.reflect.code.CtVariableReadImpl
location: XmlFactory.java426
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `java.io.Reader r = new java.io.StringReader(content)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 426, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `java.io.Reader r = new java.io.StringReader(content)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 44, #gens: 27, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 44, errors: [XmlFactory.java:427: error: variable r is already defined in method createParser(java.lang.String)
		java.io.Reader r = new java.io.StringReader(content); 		java.io.Reader r = new java.io.StringReader(content);
		                                                      		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `java.io.Reader r = new java.io.StringReader(content)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (43(f=1.7976931348623157E308), 44(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (43(f=1.7976931348623157E308), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 26, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 26, #ops: 0, parent:45]
---analyzing modificationPoint position: 11
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch []
location: XmlSerializerProvider.java73
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `javax.xml.namespace.QName rootName = _rootNameFromConfig()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `javax.xml.namespace.QName rootName = _rootNameFromConfig()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 46, #gens: 26, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 46, errors: [XmlSerializerProvider.java:84: error: cannot find symbol
			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(cls);
			^
  symbol:   variable asArray
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:85: error: cannot find symbol
			if (asArray) {
			    ^
  symbol:   variable asArray
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:85: error: illegal parenthesized expression
			if (asArray) {
			   ^, XmlSerializerProvider.java:105: error: cannot find symbol
		asArray) {
		^
  symbol:   variable asArray
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:104: error: illegal parenthesized expression
		if (
		   ^]
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `javax.xml.namespace.QName rootName = _rootNameFromConfig()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=1.7976931348623157E308), 46(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (45(f=1.7976931348623157E308), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 26, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 26, #ops: 0, parent:47]
---analyzing modificationPoint position: 7
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 48, #gens: 25, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 48
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-48/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=1.7976931348623157E308), 48(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (47(f=1.7976931348623157E308), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 26, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 26, #ops: 0, parent:49]
---analyzing modificationPoint position: 10
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 0 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 11
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 1 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 1
---modifPoint 2 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 3 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java427
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `// !!! TODO: add proper handling of 'recycleBuffer'; currently its handling // is always same as if [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 427, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `// !!! TODO: add proper handling of 'recycleBuffer'; currently its handling // is always same as if [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 50, #gens: 27, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 50, errors: [XmlFactory.java:587: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException { 		// note: should NOT move parser if already pointing to START_ELEMENT
	    	^, XmlFactory.java:589: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	 ^, XmlFactory.java:589: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	          ^, XmlFactory.java:589: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                      ^, XmlFactory.java:589: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                  ^, XmlFactory.java:589: error: <identifier> expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                         ^, XmlFactory.java:589: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                          ^, XmlFactory.java:589: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                                      ^, XmlFactory.java:590: error: not a statement
	 * incremental serialization to compose large output by serializing a sequence
	 ^, XmlFactory.java:590: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	              ^, XmlFactory.java:590: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                               ^, XmlFactory.java:590: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                             ^, XmlFactory.java:590: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                       ^, XmlFactory.java:590: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                                     ^, XmlFactory.java:591: error: not a statement
	 * of individual objects.
	 ^, XmlFactory.java:591: error: ';' expected
	 * of individual objects.
	     ^, XmlFactory.java:591: error: ';' expected
	 * of individual objects.
	                        ^, XmlFactory.java:593: error: illegal start of type
	 * @since 2.4
	          ^, XmlFactory.java:594: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException { 		try { 			sw = _initializeXmlWriter(sw);} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);} 		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(sw, false); 		return new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sw);} 	/* /**********************************************************
	    	^, XmlFactory.java:598: error: illegal start of type
		} catch (javax.xml.stream.XMLStreamException e) {
		  ^, XmlFactory.java:598: error: ';' expected
		} catch (javax.xml.stream.XMLStreamException e) {
		                                              ^, XmlFactory.java:603: error: illegal start of type
		if (_cfgNameForTextElement != null) {
		^, XmlFactory.java:603: error: <identifier> expected
		if (_cfgNameForTextElement != null) {
		                          ^, XmlFactory.java:606: error: illegal start of type
		return xp;
		^, XmlFactory.java:606: error: <identifier> expected
		return xp;
		         ^, XmlFactory.java:610: error: class, interface, or enum expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	          ^, XmlFactory.java:613: error: class, interface, or enum expected
		return null;
		^, XmlFactory.java:614: error: class, interface, or enum expected
	}
	^, XmlFactory.java:626: error: class, interface, or enum expected
		} catch (javax.xml.stream.XMLStreamException e) {
		^, XmlFactory.java:628: error: class, interface, or enum expected
		}
		^, XmlFactory.java:635: error: class, interface, or enum expected
		} catch (javax.xml.stream.XMLStreamException e) {
		^, XmlFactory.java:637: error: class, interface, or enum expected
		}
		^, XmlFactory.java:640: error: class, interface, or enum expected
	protected final javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException, javax.xml.stream.XMLStreamException 
	                ^, XmlFactory.java:645: error: class, interface, or enum expected
		return sw;
		^, XmlFactory.java:646: error: class, interface, or enum expected
	}
	^, XmlFactory.java:648: error: class, interface, or enum expected
	protected final javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException, javax.xml.stream.XMLStreamException 
	                ^, XmlFactory.java:655: error: class, interface, or enum expected
	}
	^, XmlFactory.java:663: error: class, interface, or enum expected
	private static final byte UTF8_BOM_1 = ((byte) (0xef));
	                     ^, XmlFactory.java:664: error: class, interface, or enum expected
	private static final byte UTF8_BOM_2 = ((byte) (0xbb));
	                     ^, XmlFactory.java:665: error: class, interface, or enum expected
	private static final byte UTF8_BOM_3 = ((byte) (0xbf));
	                     ^, XmlFactory.java:667: error: class, interface, or enum expected
	private static final byte BYTE_x = ((byte) ('x'));
	                     ^, XmlFactory.java:668: error: class, interface, or enum expected
	private static final byte BYTE_m = ((byte) ('m'));
	                     ^, XmlFactory.java:669: error: class, interface, or enum expected
	private static final byte BYTE_l = ((byte) ('l'));
	                     ^, XmlFactory.java:670: error: class, interface, or enum expected
	private static final byte BYTE_D = ((byte) ('D'));
	                     ^, XmlFactory.java:672: error: class, interface, or enum expected
	private static final byte BYTE_LT = ((byte) ('<'));
	                     ^, XmlFactory.java:673: error: class, interface, or enum expected
	private static final byte BYTE_QMARK = ((byte) ('?'));
	                     ^, XmlFactory.java:674: error: class, interface, or enum expected
	private static final byte BYTE_EXCL = ((byte) ('!'));
	                     ^, XmlFactory.java:675: error: class, interface, or enum expected
	private static final byte BYTE_HYPHEN = ((byte) ('-'));
	                     ^, XmlFactory.java:685: error: class, interface, or enum expected
	public static com.fasterxml.jackson.core.format.MatchStrength hasXMLFormat(com.fasterxml.jackson.core.format.InputAccessor acc) throws java.io.IOException 
	              ^, XmlFactory.java:692: error: class, interface, or enum expected
		}
		^, XmlFactory.java:695: error: class, interface, or enum expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.UTF8_BOM_1) { 			// yes, looks like UTF-8 BOM
		^, XmlFactory.java:698: error: class, interface, or enum expected
			}
			^, XmlFactory.java:701: error: class, interface, or enum expected
			}
			^, XmlFactory.java:704: error: class, interface, or enum expected
			}
			^, XmlFactory.java:707: error: class, interface, or enum expected
			}
			^, XmlFactory.java:710: error: class, interface, or enum expected
			}
			^, XmlFactory.java:712: error: class, interface, or enum expected
		}
		^, XmlFactory.java:715: error: class, interface, or enum expected
		if (!maybeXmlDecl) {
		^, XmlFactory.java:717: error: class, interface, or enum expected
			if (ch < 0) {
			^, XmlFactory.java:719: error: class, interface, or enum expected
			}
			^, XmlFactory.java:722: error: class, interface, or enum expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) {
			^, XmlFactory.java:724: error: class, interface, or enum expected
			}
			^, XmlFactory.java:728: error: class, interface, or enum expected
		}
		^, XmlFactory.java:731: error: class, interface, or enum expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <?
		^, XmlFactory.java:733: error: class, interface, or enum expected
			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) {
			^, XmlFactory.java:738: error: class, interface, or enum expected
						}
						^, XmlFactory.java:743: error: class, interface, or enum expected
			}
			^, XmlFactory.java:747: error: class, interface, or enum expected
			}
			^, XmlFactory.java:754: error: class, interface, or enum expected
			}
			^, XmlFactory.java:756: error: class, interface, or enum expected
			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) {
			^, XmlFactory.java:759: error: class, interface, or enum expected
				}
				^, XmlFactory.java:762: error: class, interface, or enum expected
				}
				^, XmlFactory.java:765: error: class, interface, or enum expected
			}
			^, XmlFactory.java:770: error: class, interface, or enum expected
		}
		^, XmlFactory.java:773: error: class, interface, or enum expected
	}
	^, XmlFactory.java:775: error: class, interface, or enum expected
	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws 
	                     ^, XmlFactory.java:782: error: class, interface, or enum expected
		if (ch >= 'A') { 			// in theory, colon could be; in practice it should never be valid (wrt namespace)
		^, XmlFactory.java:785: error: class, interface, or enum expected
		}
		^, XmlFactory.java:787: error: class, interface, or enum expected
	}
	^, XmlFactory.java:789: error: class, interface, or enum expected
	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws 
	                     ^, XmlFactory.java:792: error: class, interface, or enum expected
		for (int i = 0, len = matchStr.length(); i < len; ++i) {
		                                         ^, XmlFactory.java:792: error: class, interface, or enum expected
		for (int i = 0, len = matchStr.length(); i < len; ++i) {
		                                                  ^, XmlFactory.java:795: error: class, interface, or enum expected
			}
			^, XmlFactory.java:798: error: class, interface, or enum expected
			}
			^, XmlFactory.java:801: error: class, interface, or enum expected
	}
	^, XmlFactory.java:803: error: class, interface, or enum expected
	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException 
	                     ^, XmlFactory.java:807: error: class, interface, or enum expected
			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) {
			^, XmlFactory.java:809: error: class, interface, or enum expected
			}
			^, XmlFactory.java:812: error: class, interface, or enum expected
			}
			^, XmlFactory.java:814: error: class, interface, or enum expected
			ch = ((int) (b)) & 0xff;
			^, XmlFactory.java:815: error: class, interface, or enum expected
		} 
		^]
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `// !!! TODO: add proper handling of 'recycleBuffer'; currently its handling // is always same as if [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (49(f=1.7976931348623157E308), 50(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (49(f=1.7976931348623157E308), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 26, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 26, #ops: 0, parent:51]
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 52, #gens: 25, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 52, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=1.7976931348623157E308), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=1.7976931348623157E308), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 26, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 26, #ops: 0, parent:53]
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [value, gen]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 54, #gens: 26, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 54
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-54/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=1.7976931348623157E308), 54(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (53(f=1.7976931348623157E308), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 26, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 26, #ops: 0, parent:55]
---analyzing modificationPoint position: 7
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 56, #gens: 25, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 56
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-56/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (55(f=1.7976931348623157E308), 56(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (55(f=1.7976931348623157E308), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 26, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 26, #ops: 0, parent:57]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
Attempts Base Ingredients  2 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 58, #gens: 27, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 58
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-58/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (57(f=1.7976931348623157E308), 58(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (57(f=1.7976931348623157E308), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 26, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 26, #ops: 0, parent:59]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 3 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 4 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 12
---modifPoint 5 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 6 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 7 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [((java.lang.Error) (t))]
--> var from patch: ((java.lang.Error) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 60, #gens: 27, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child does NOT compile: 60, errors: [StaxUtil.java:24: error: unreachable statement
		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.Error) (t)); 			throw ((java.lang.RuntimeException) (t));}
		                                               			                               			^]
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=1.7976931348623157E308), 60(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (59(f=1.7976931348623157E308), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 26, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 26, #ops: 0, parent:61]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 8
location: StaxUtil.java24
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 62, #gens: 25, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 62, errors: [StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=1.7976931348623157E308), 62(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (61(f=1.7976931348623157E308), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 26, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 26, #ops: 0, parent:63]
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java559
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 559, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 64, #gens: 27, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 64, errors: [XmlFactory.java:787: error: illegal start of expression
	 */ 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(out, "UTF-8"));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.Writer w) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(w));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected final javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// And just for Sun Stax parser (JDK default), seems that we better define default namespace 		// (Woodstox doesn't care) -- otherwise it'll add unnecessary odd declaration 		sw.setDefaultNamespace(""); 		return sw;} 	protected final javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// for now, nothing to do... except let's find the root element
	    	^, XmlFactory.java:804: error: illegal start of type
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		^, XmlFactory.java:804: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                     ^, XmlFactory.java:804: error: ';' expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                       ^, XmlFactory.java:804: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                           			                                                                      		 ^, XmlFactory.java:805: error: illegal start of type
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		^, XmlFactory.java:805: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		     ^, XmlFactory.java:805: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		                                                                   ^, XmlFactory.java:807: error: illegal start of type
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			^, XmlFactory.java:807: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                         ^, XmlFactory.java:807: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                             ^, XmlFactory.java:807: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                ^, XmlFactory.java:807: error: ';' expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                 ^, XmlFactory.java:807: error: class, interface, or enum expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                     				                                                                      ^, XmlFactory.java:810: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                    ^, XmlFactory.java:810: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			^, XmlFactory.java:810: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                    ^, XmlFactory.java:810: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                   ^, XmlFactory.java:810: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                                                                                              				                                                                                                                                            ^, XmlFactory.java:811: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                   ^, XmlFactory.java:811: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                ^, XmlFactory.java:811: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                  	                     ^, XmlFactory.java:813: error: class, interface, or enum expected
		 */ 		int ch = ((int) (b)) & 0xff; 		if (ch >= 'A') { 			// in theory, colon could be; in practice it should never be valid (wrt namespace) 			// This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...
		    		                             		^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			            ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		             ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                     ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                         ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                  ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                    ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                         ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                     ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				          ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				            			                           				          ^, XmlFactory.java:814: error: class, interface, or enum expected
			return true;} 		return false;} 	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws java.io.IOException { 		for (int i = 0, len = matchStr.length(); i < len; ++i) { 			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			if (acc.nextByte() != matchStr.charAt(i)) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		return fullMatchStrength;} 	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		while (true) { 			int ch = ((int) (b)) & 0xff; 			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) { 				return ch;} 			if (!acc.hasMoreBytes()) { 				return -1;} 			b = acc.nextByte(); 			ch = ((int) (b)) & 0xff;
			              		               	                                                                                                                                                                                                                                                              		                                                         			                           				                                                                      			                                            				                                                                   		                           	                                                                                                                             		               			                             			                                                                          				            			                           				            			                    			^, XmlFactory.java:815: error: class, interface, or enum expected
		} 
		^]
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `// in theory, colon could be; in practice it should never be valid (wrt namespace) // This is where [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (63(f=1.7976931348623157E308), 64(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (63(f=1.7976931348623157E308), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 26, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 26, #ops: 0, parent:65]
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 2 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 21
---modifPoint 3 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 8
location: StaxUtil.java24
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 66, #gens: 25, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 66, errors: [StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=1.7976931348623157E308), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=1.7976931348623157E308), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 26, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 26, #ops: 0, parent:67]
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 68, #gens: 26, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 68
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-68/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (67(f=1.7976931348623157E308), 68(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (67(f=1.7976931348623157E308), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 26, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 26, #ops: 0, parent:69]
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [cls]
--> var from patch: cls spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 70, #gens: 27, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 70
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-70/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=1.7976931348623157E308), 70(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (69(f=1.7976931348623157E308), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 26, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 26, #ops: 0, parent:71]
---analyzing modificationPoint position: 10
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch []
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 72, #gens: 26, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 72, errors: [XmlSerializerProvider.java:74: error: variable asArray is already defined in method serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
		final boolean asArray; 		final boolean asArray;
		                       		              ^, XmlSerializerProvider.java:81: error: cannot find symbol
				rootName = _rootNameLookup.findRootName(cls, _config);
				                                        ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:84: error: cannot find symbol
			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(cls);
			                                                                           ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:91: error: cannot find symbol
		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(cls, true, null);
		                                                                                                     ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider]
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=1.7976931348623157E308), 72(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (71(f=1.7976931348623157E308), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 26, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 26, #ops: 0, parent:73]
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 18
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 21
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java431
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _createParser(r, ctxt) ` -topatch--> `return this` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 431, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _createParser(r, ctxt) ` -topatch--> `return this` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 27, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 74, errors: [XmlFactory.java:431: error: incompatible types: com.fasterxml.jackson.dataformat.xml.XmlFactory cannot be converted to com.fasterxml.jackson.core.JsonParser
		} 		return this;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _createParser(r, ctxt) ` -topatch--> `return this` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=1.7976931348623157E308), 74(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (73(f=1.7976931348623157E308), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 26, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 26, #ops: 0, parent:75]
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 76, #gens: 25, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 76
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-76/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (75(f=1.7976931348623157E308), 76(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (75(f=1.7976931348623157E308), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 26, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 26, #ops: 0, parent:77]
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch [com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT]
--> var from patch: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 78, #gens: 27, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 78, errors: [XmlTokenStream.java:466: error: illegal start of expression
	 */ 	private final int _next() throws javax.xml.stream.XMLStreamException { 		switch (_currentState) { 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				++_nextAttributeIndex; 				// fall through 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT : 				// attributes to return?
	    	^, XmlTokenStream.java:461: error: 'try' without 'catch', 'finally' or resource declarations
		if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) { 			return null;} 		try { 			java.lang.String text = _collectUntilTag(); 			// 23-Dec-2015, tatu: Used to require text not to be null, but as per 			// [dataformat-xml#167], empty tag does count
		                                                                                                                                     			              		^, XmlTokenStream.java:473: error: illegal start of expression
		return _initStartElement();} 	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException { 		java.lang.String text = null; 		while (true) { 			switch (_xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return text; 					// note: SPACE is ignorable (and seldom seen), not to be included 				case javax.xml.stream.XMLStreamConstants.CHARACTERS : 				case javax.xml.stream.XMLStreamConstants.CDATA : 					if (text == null) { 						text = _xmlReader.getText();} else { 						// can be optimized in future, if need be: 						text += _xmlReader.getText();} 					break; 				default : 					// any other type (proc instr, comment etc) is just ignored}} } 	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException { 		while (_xmlReader.hasNext()) { 			int type; 			switch (type = _xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return type; 				default : 					// any other type (proc instr, comment etc) is just ignored}} 		throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input");} 	/* /**********************************************************************
		                             	^, XmlTokenStream.java:476: error: illegal start of expression
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	        ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	              ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                  ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                   ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                    ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                             ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                  ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                   ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                       ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                             ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                              ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                 ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		          ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		           ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		               ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                       ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                          ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                            ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                       ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                       ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                        ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		          ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		           ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		               ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                       ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                 ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                   ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                             ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                              ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                          ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                           ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                            ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                  ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                            ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                             ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                              ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                               ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                    ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                      ^, XmlTokenStream.java:476: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                       ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		   ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		    ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                    ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                       ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                           ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                             ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			   ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			    ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                   ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                    ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                  ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                   ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                            ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                              ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                 ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                   ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                  ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                 ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                  ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                     ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                      ^, XmlTokenStream.java:481: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                       ^, XmlTokenStream.java:482: error: illegal start of expression
	 * Method called to handle details of repeating "virtual"
	 ^, XmlTokenStream.java:482: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	         ^, XmlTokenStream.java:482: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                   ^, XmlTokenStream.java:482: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                  ^, XmlTokenStream.java:482: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                               ^, XmlTokenStream.java:483: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	        ^, XmlTokenStream.java:483: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	            ^, XmlTokenStream.java:483: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	             ^, XmlTokenStream.java:483: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                     ^, XmlTokenStream.java:483: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                       ^, XmlTokenStream.java:483: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                             ^, XmlTokenStream.java:483: error: '(' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                 ^, XmlTokenStream.java:483: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                           ^, XmlTokenStream.java:483: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                  ^, XmlTokenStream.java:483: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (77(f=1.7976931348623157E308), 78(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (77(f=1.7976931348623157E308), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 26, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 26, #ops: 0, parent:79]
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 80, #gens: 25, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 80, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (79(f=1.7976931348623157E308), 80(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (79(f=1.7976931348623157E308), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 26, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 26, #ops: 0, parent:81]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 21
---modifPoint 1 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 82, #gens: 25, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 82
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-82/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (81(f=1.7976931348623157E308), 82(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (81(f=1.7976931348623157E308), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 26, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 26, #ops: 0, parent:83]
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 84, #gens: 25, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 84, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (83(f=1.7976931348623157E308), 84(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (83(f=1.7976931348623157E308), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 26, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 26, #ops: 0, parent:85]
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 22
location: XmlFactory.java556
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _xmlInputFactory.createXMLStreamReader(r) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 86, #gens: 25, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 86, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _xmlInputFactory.createXMLStreamReader(r) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=1.7976931348623157E308), 86(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (85(f=1.7976931348623157E308), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 26, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 26, #ops: 0, parent:87]
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 88, #gens: 26, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 88
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-88/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=1.7976931348623157E308), 88(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (87(f=1.7976931348623157E308), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 26, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 26, #ops: 0, parent:89]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 90, #gens: 25, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-90/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (89(f=1.7976931348623157E308), 90(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (89(f=1.7976931348623157E308), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 26, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 26, #ops: 0, parent:91]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 92, #gens: 25, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 92
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-92/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=1.7976931348623157E308), 92(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (91(f=1.7976931348623157E308), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 26, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 26, #ops: 0, parent:93]
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 94, #gens: 25, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 94, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (93(f=1.7976931348623157E308), 94(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (93(f=1.7976931348623157E308), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 26, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 26, #ops: 0, parent:95]
---analyzing modificationPoint position: 10
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 96, #gens: 26, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 96, errors: [XmlSerializerProvider.java:75: error: variable xgen is already defined in method serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen);
		                                                                                           		                       		                                                              ^, XmlSerializerProvider.java:81: error: cannot find symbol
				rootName = _rootNameLookup.findRootName(cls, _config);
				                                        ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:84: error: cannot find symbol
			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(cls);
			                                                                           ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, XmlSerializerProvider.java:91: error: cannot find symbol
		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(cls, true, null);
		                                                                                                     ^
  symbol:   variable cls
  location: class com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider]
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (95(f=1.7976931348623157E308), 96(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (95(f=1.7976931348623157E308), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 26, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 26, #ops: 0, parent:97]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 98, #gens: 25, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 98
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-98/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=1.7976931348623157E308), 98(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (97(f=1.7976931348623157E308), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 26, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 26, #ops: 0, parent:99]
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtWhileImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 100, #gens: 27, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 100, errors: [StaxUtil.java:25: error: unreachable statement
		throw new java.io.IOException(t); 		while (t.getCause() != null) { 			t = t.getCause();} 
		                                  		^, StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (99(f=1.7976931348623157E308), 100(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (99(f=1.7976931348623157E308), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 26, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 26, #ops: 0, parent:101]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT, _currentState]
--> var from patch: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: _currentState spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 102, #gens: 26, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 102, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (101(f=1.7976931348623157E308), 102(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (101(f=1.7976931348623157E308), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 26, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 26, #ops: 0, parent:103]
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 104, #gens: 25, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 104
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-104/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=1.7976931348623157E308), 104(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (103(f=1.7976931348623157E308), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 26, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 26, #ops: 0, parent:105]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch [_xmlReader]
--> var from patch: _xmlReader spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `final java.lang.String ns = _xmlReader.getNamespaceURI()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `final java.lang.String ns = _xmlReader.getNamespaceURI()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 106, #gens: 27, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 106, errors: [XmlTokenStream.java:414: error: illegal start of expression
	 */ 	private final int _next() throws javax.xml.stream.XMLStreamException { 		switch (_currentState) { 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				++_nextAttributeIndex; 				// fall through 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT : 				// attributes to return?
	    	^, XmlTokenStream.java:409: error: 'try' without 'catch', 'finally' or resource declarations
		if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) { 			return null;} 		try { 			java.lang.String text = _collectUntilTag(); 			// 23-Dec-2015, tatu: Used to require text not to be null, but as per 			// [dataformat-xml#167], empty tag does count
		                                                                                                                                     			              		^, XmlTokenStream.java:421: error: illegal start of expression
		return _initStartElement();} 	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException { 		java.lang.String text = null; 		while (true) { 			switch (_xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return text; 					// note: SPACE is ignorable (and seldom seen), not to be included 				case javax.xml.stream.XMLStreamConstants.CHARACTERS : 				case javax.xml.stream.XMLStreamConstants.CDATA : 					if (text == null) { 						text = _xmlReader.getText();} else { 						// can be optimized in future, if need be: 						text += _xmlReader.getText();} 					break; 				default : 					// any other type (proc instr, comment etc) is just ignored}} } 	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException { 		while (_xmlReader.hasNext()) { 			int type; 			switch (type = _xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return type; 				default : 					// any other type (proc instr, comment etc) is just ignored}} 		throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input");} 	/* /**********************************************************************
		                             	^, XmlTokenStream.java:424: error: illegal start of expression
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	        ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	              ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                  ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                   ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                    ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                             ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                  ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                   ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                       ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                             ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                              ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                 ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		          ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		           ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		               ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                       ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                          ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                            ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                       ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                       ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                        ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		          ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		           ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		               ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                       ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                 ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                   ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                             ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                              ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                          ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                           ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                            ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                  ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                            ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                             ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                              ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                               ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                    ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                      ^, XmlTokenStream.java:424: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                       ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		   ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		    ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                    ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                       ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                           ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                             ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			   ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			    ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                   ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                    ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                  ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                   ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                            ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                              ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                 ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                   ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                  ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                 ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                  ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                                     ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                                      ^, XmlTokenStream.java:429: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                                       ^, XmlTokenStream.java:434: error: illegal start of expression
	protected int _handleRepeatElement() throws java.io.IOException 
	^, XmlTokenStream.java:429: error: 'else' without 'if'
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;}
		                               			                                                     				                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `final java.lang.String ns = _xmlReader.getNamespaceURI()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (105(f=1.7976931348623157E308), 106(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (105(f=1.7976931348623157E308), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 26, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 26, #ops: 0, parent:107]
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 108, #gens: 25, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 108, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (107(f=1.7976931348623157E308), 108(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (107(f=1.7976931348623157E308), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 26, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 26, #ops: 0, parent:109]
---analyzing modificationPoint position: 24
location: XmlFactory.java559
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 110, #gens: 25, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 110, errors: [XmlFactory.java:563: error: variable sr might not have been initialized
		_objectCodec, sr);
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=1.7976931348623157E308), 110(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (109(f=1.7976931348623157E308), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 26, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 26, #ops: 0, parent:111]
---analyzing modificationPoint position: 19
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 112, #gens: 25, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 112
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-112/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=1.7976931348623157E308), 112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (111(f=1.7976931348623157E308), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 26, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 26, #ops: 0, parent:113]
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch [_xmlOutputFactory]
--> var from patch: _xmlOutputFactory spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java650
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `return _xmlOutputFactory` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 650, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `return _xmlOutputFactory` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 114, #gens: 27, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 114, errors: [XmlFactory.java:653: error: incompatible types: javax.xml.stream.XMLOutputFactory cannot be converted to javax.xml.stream.XMLStreamReader
		} 		return _xmlOutputFactory;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `return _xmlOutputFactory` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=1.7976931348623157E308), 114(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (113(f=1.7976931348623157E308), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 26, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 26, #ops: 0, parent:115]
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 22
location: XmlFactory.java556
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _xmlInputFactory.createXMLStreamReader(r) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 116, #gens: 25, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 116, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _xmlInputFactory.createXMLStreamReader(r) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (115(f=1.7976931348623157E308), 116(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (115(f=1.7976931348623157E308), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 26, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 26, #ops: 0, parent:117]
---analyzing modificationPoint position: 14
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 0 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
---modifPoint 2 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 3 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 4 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 8
location: StaxUtil.java24
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 118, #gens: 25, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 118, errors: [StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (117(f=1.7976931348623157E308), 118(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (117(f=1.7976931348623157E308), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 26, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 26, #ops: 0, parent:119]
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 120, #gens: 25, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 120
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-120/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=1.7976931348623157E308), 120(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (119(f=1.7976931348623157E308), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 26, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 26, #ops: 0, parent:121]
---analyzing modificationPoint position: 18
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 16
location: XmlTokenStream.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 122, #gens: 25, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 122, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=1.7976931348623157E308), 122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (121(f=1.7976931348623157E308), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 26, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 26, #ops: 0, parent:123]
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 124, #gens: 25, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 124, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=1.7976931348623157E308), 124(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (123(f=1.7976931348623157E308), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 26, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 26, #ops: 0, parent:125]
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)), _namesToWrap]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 126, #gens: 27, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 126
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-126/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (125(f=1.7976931348623157E308), 126(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (125(f=1.7976931348623157E308), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 26, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 26, #ops: 0, parent:127]
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 128, #gens: 25, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 128
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-128/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (127(f=1.7976931348623157E308), 128(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (127(f=1.7976931348623157E308), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 26, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 26, #ops: 0, parent:129]
---analyzing modificationPoint position: 9
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 130, #gens: 25, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 130
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-130/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (129(f=1.7976931348623157E308), 130(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (129(f=1.7976931348623157E308), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 26, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 26, #ops: 0, parent:131]
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtWhileImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 27, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 132, errors: [StaxUtil.java:23: error: unreachable statement
		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t)); 			while (t.getCause() != null) { 				t = t.getCause();} }
		                                    			                               			^]
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=1.7976931348623157E308), 132(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (131(f=1.7976931348623157E308), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 26, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 26, #ops: 0, parent:133]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 134, #gens: 27, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 134, errors: [StaxUtil.java:25: error: unreachable statement
			throw new java.io.IOException(t); 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);
			                                  			^]
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=1.7976931348623157E308), 134(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (133(f=1.7976931348623157E308), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 26, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 26, #ops: 0, parent:135]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 136, #gens: 25, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 136, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (135(f=1.7976931348623157E308), 136(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (135(f=1.7976931348623157E308), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 26, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 26, #ops: 0, parent:137]
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 18
---modifPoint 2 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 138, #gens: 25, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 138
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-138/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (137(f=1.7976931348623157E308), 138(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (137(f=1.7976931348623157E308), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 26, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 26, #ops: 0, parent:139]
---analyzing modificationPoint position: 21
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `_serializeXmlNull(gen)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `_serializeXmlNull(gen)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 140, #gens: 27, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 140
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-140/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `_serializeXmlNull(gen)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (139(f=1.7976931348623157E308), 140(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (139(f=1.7976931348623157E308), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 26, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 26, #ops: 0, parent:141]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)), _namesToWrap]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 142, #gens: 26, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 142
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-142/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=1.7976931348623157E308), 142(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (141(f=1.7976931348623157E308), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 26, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 26, #ops: 0, parent:143]
---analyzing modificationPoint position: 2
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 144, #gens: 26, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 144
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-144/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=1.7976931348623157E308), 144(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (143(f=1.7976931348623157E308), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 26, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 26, #ops: 0, parent:145]
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 9
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 146, #gens: 25, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 146
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-146/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=1.7976931348623157E308), 146(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (145(f=1.7976931348623157E308), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 26, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 26, #ops: 0, parent:147]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
vars from patch [jp]
--> var from patch: jp spoon.support.reflect.code.CtVariableReadImpl
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 148, #gens: 26, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-148/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (147(f=1.7976931348623157E308), 148(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (147(f=1.7976931348623157E308), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 26, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 26, #ops: 0, parent:149]
---analyzing modificationPoint position: 22
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 2
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [e]
--> var from patch: e spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java18
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 18, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 150, #gens: 26, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 150
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-150/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (149(f=1.7976931348623157E308), 150(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (149(f=1.7976931348623157E308), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 26, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 26, #ops: 0, parent:151]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 19
---modifPoint 1 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 8
location: StaxUtil.java24
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 152, #gens: 25, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 152, errors: [StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (151(f=1.7976931348623157E308), 152(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (151(f=1.7976931348623157E308), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 26, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 26, #ops: 0, parent:153]
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 13
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 154, #gens: 25, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 154, errors: [XmlSerializerProvider.java:105: error: variable asArray might not have been initialized
		asArray) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=1.7976931348623157E308), 154(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (153(f=1.7976931348623157E308), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 26, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 26, #ops: 0, parent:155]
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 156, #gens: 25, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 156
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-156/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (155(f=1.7976931348623157E308), 156(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (155(f=1.7976931348623157E308), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 26, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 26, #ops: 0, parent:157]
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
---modifPoint 0 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 158, #gens: 25, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 158
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-158/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (157(f=1.7976931348623157E308), 158(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (157(f=1.7976931348623157E308), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 26, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 26, #ops: 0, parent:159]
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch []
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 160, #gens: 27, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 160, errors: [XmlTokenStream.java:304: error: illegal start of expression
	private final int _next() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=1.7976931348623157E308), 160(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (159(f=1.7976931348623157E308), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 26, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 26, #ops: 0, parent:161]
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 162, #gens: 27, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 162, errors: [XmlSerializerProvider.java:267: error: illegal start of type
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:267: error: ';' expected
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			                                        ^, XmlSerializerProvider.java:274: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:275: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:275: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:275: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:275: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:275: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:275: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:276: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:276: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:277: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:278: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=1.7976931348623157E308), 162(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (161(f=1.7976931348623157E308), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 26, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 26, #ops: 0, parent:163]
---analyzing modificationPoint position: 14
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 22
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 3
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java19
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 19, pointed element: CtWhileImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 164, #gens: 26, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 164
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-164/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (163(f=1.7976931348623157E308), 164(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (163(f=1.7976931348623157E308), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 26, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 26, #ops: 0, parent:165]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 166, #gens: 25, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 166
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-166/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (165(f=1.7976931348623157E308), 166(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (165(f=1.7976931348623157E308), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 26, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 26, #ops: 0, parent:167]
---analyzing modificationPoint position: 15
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 168, #gens: 25, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 168
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-168/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=1.7976931348623157E308), 168(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (167(f=1.7976931348623157E308), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 26, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 26, #ops: 0, parent:169]
---analyzing modificationPoint position: 13
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 170, #gens: 25, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 170, errors: [XmlSerializerProvider.java:105: error: variable asArray might not have been initialized
		asArray) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (169(f=1.7976931348623157E308), 170(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (169(f=1.7976931348623157E308), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 26, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 26, #ops: 0, parent:171]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 2 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 3 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 4
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 172, #gens: 25, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 172
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-172/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=1.7976931348623157E308), 172(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (171(f=1.7976931348623157E308), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 26, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 26, #ops: 0, parent:173]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 21
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 3 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch []
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 174, #gens: 27, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 174, errors: [XmlSerializerProvider.java:75: error: variable asArray is already defined in method serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		final boolean asArray;
		                                                                                           		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `final boolean asArray` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (173(f=1.7976931348623157E308), 174(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (173(f=1.7976931348623157E308), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 26, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 26, #ops: 0, parent:175]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 22
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 3 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [value, gen]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 176, #gens: 27, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-176/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=1.7976931348623157E308), 176(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (175(f=1.7976931348623157E308), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 26, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 26, #ops: 0, parent:177]
---analyzing modificationPoint position: 7
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 178, #gens: 27, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 178, errors: [StaxUtil.java:25: error: unreachable statement
			throw new java.io.IOException(t);} 		throw new java.io.IOException(t);
			^]
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `throw new java.io.IOException(t)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (177(f=1.7976931348623157E308), 178(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (177(f=1.7976931348623157E308), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 26, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 26, #ops: 0, parent:179]
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 180, #gens: 25, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 180
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-180/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (179(f=1.7976931348623157E308), 180(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (179(f=1.7976931348623157E308), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 26, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 26, #ops: 0, parent:181]
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 182, #gens: 25, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 182, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (181(f=1.7976931348623157E308), 182(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (181(f=1.7976931348623157E308), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 26, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 26, #ops: 0, parent:183]
---analyzing modificationPoint position: 22
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 14
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 19
---modifPoint 2 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch []
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 184, #gens: 27, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 184, errors: [XmlSerializerProvider.java:247: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:248: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:254: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:255: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:255: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:255: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:255: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:255: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:255: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:256: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:256: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:257: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:258: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=1.7976931348623157E308), 184(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (183(f=1.7976931348623157E308), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 26, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 26, #ops: 0, parent:185]
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 19
---modifPoint 1 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 3 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 186, #gens: 25, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 186
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-186/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (185(f=1.7976931348623157E308), 186(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (185(f=1.7976931348623157E308), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 26, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 26, #ops: 0, parent:187]
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 21
---modifPoint 1 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 16
location: XmlTokenStream.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 188, #gens: 25, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 188, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (187(f=1.7976931348623157E308), 188(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (187(f=1.7976931348623157E308), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 26, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 26, #ops: 0, parent:189]
---analyzing modificationPoint position: 2
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 23
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 1 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
---modifPoint 2 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 3 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 22
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 4 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 5 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 190, #gens: 27, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 190, errors: [XmlSerializerProvider.java:267: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:268: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:268: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:268: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:268: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:268: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:268: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:274: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:275: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:275: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:275: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:275: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:275: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:275: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:275: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:276: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:276: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:276: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:277: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:278: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `// [Issue#71]: When converting, we actually get TokenBuffer, which is fine if (!(gen instanceof com.[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (189(f=1.7976931348623157E308), 190(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (189(f=1.7976931348623157E308), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 26, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 26, #ops: 0, parent:191]
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
vars from patch [_xmlTokens]
--> var from patch: _xmlTokens spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_xmlTokens.closeCompletely()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_xmlTokens.closeCompletely()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 192, #gens: 27, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 192, errors: [FromXmlParser.java:368: error: class, interface, or enum expected
	}
	^, FromXmlParser.java:371: error: class, interface, or enum expected
	public boolean isClosed() { 		return _closed;}
	       ^, FromXmlParser.java:371: error: class, interface, or enum expected
	public boolean isClosed() { 		return _closed;}
	                            		               ^, FromXmlParser.java:374: error: class, interface, or enum expected
	public com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParsingContext() {
	       ^, FromXmlParser.java:376: error: class, interface, or enum expected
	}
	^, FromXmlParser.java:384: error: class, interface, or enum expected
	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() {
	       ^, FromXmlParser.java:386: error: class, interface, or enum expected
	}
	^, FromXmlParser.java:393: error: class, interface, or enum expected
	public com.fasterxml.jackson.core.JsonLocation getCurrentLocation() {
	       ^, FromXmlParser.java:395: error: class, interface, or enum expected
	}
	^, FromXmlParser.java:405: error: class, interface, or enum expected
	public boolean isExpectedStartArrayToken() 
	       ^, FromXmlParser.java:408: error: class, interface, or enum expected
		if (t == com.fasterxml.jackson.core.JsonToken.START_OBJECT) {
		^, FromXmlParser.java:411: error: class, interface, or enum expected
			_parsingContext.convertToArray();
			^, FromXmlParser.java:415: error: class, interface, or enum expected
			if (_nextToken == com.fasterxml.jackson.core.JsonToken.END_OBJECT) {
			^, FromXmlParser.java:417: error: class, interface, or enum expected
			} else {
			^, FromXmlParser.java:419: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:422: error: class, interface, or enum expected
			return true;
			^, FromXmlParser.java:423: error: class, interface, or enum expected
		}
		^, FromXmlParser.java:426: error: class, interface, or enum expected
	}
	^, FromXmlParser.java:454: error: class, interface, or enum expected
	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException 
	       ^, FromXmlParser.java:457: error: class, interface, or enum expected
		if (_nextToken != null) {
		^, FromXmlParser.java:459: error: class, interface, or enum expected
			_currToken = t;
			^, FromXmlParser.java:460: error: class, interface, or enum expected
			_nextToken = null;
			^, FromXmlParser.java:461: error: class, interface, or enum expected
			switch (t) {
			^, FromXmlParser.java:464: error: class, interface, or enum expected
					break;
					^, FromXmlParser.java:465: error: class, interface, or enum expected
				case START_ARRAY :
				^, FromXmlParser.java:467: error: class, interface, or enum expected
					break;
					^, FromXmlParser.java:468: error: class, interface, or enum expected
				case END_OBJECT :
				^, FromXmlParser.java:471: error: class, interface, or enum expected
					_namesToWrap = _parsingContext.getNamesToWrap();
					^, FromXmlParser.java:472: error: class, interface, or enum expected
					break;
					^, FromXmlParser.java:473: error: class, interface, or enum expected
				case FIELD_NAME :
				^, FromXmlParser.java:475: error: class, interface, or enum expected
					break;
					^, FromXmlParser.java:476: error: class, interface, or enum expected
				default : 					// VALUE_STRING, VALUE_NULL
				        ^, FromXmlParser.java:480: error: class, interface, or enum expected
		}
		^, FromXmlParser.java:485: error: class, interface, or enum expected
		while (token == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {
		^, FromXmlParser.java:490: error: class, interface, or enum expected
				_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
				^, FromXmlParser.java:491: error: class, interface, or enum expected
				return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;
				^, FromXmlParser.java:492: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:497: error: class, interface, or enum expected
				_mayBeLeaf = true;
				^, FromXmlParser.java:498: error: class, interface, or enum expected
				continue;
				^, FromXmlParser.java:499: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:501: error: class, interface, or enum expected
			_parsingContext.setCurrentName(name);
			^, FromXmlParser.java:505: error: class, interface, or enum expected
			if ((_namesToWrap != null) && _namesToWrap.contains(name)) {
			^, FromXmlParser.java:507: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:512: error: class, interface, or enum expected
			return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;
			^, FromXmlParser.java:513: error: class, interface, or enum expected
		} 
		^, FromXmlParser.java:522: error: class, interface, or enum expected
						if (_parsingContext.inArray()) {
						^, FromXmlParser.java:526: error: class, interface, or enum expected
							_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
							^, FromXmlParser.java:527: error: class, interface, or enum expected
							return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;
							^, FromXmlParser.java:528: error: class, interface, or enum expected
						}
						^, FromXmlParser.java:530: error: class, interface, or enum expected
					}
					^, FromXmlParser.java:532: error: class, interface, or enum expected
					_parsingContext = _parsingContext.getParent();
					^, FromXmlParser.java:533: error: class, interface, or enum expected
					_namesToWrap = _parsingContext.getNamesToWrap();
					^, FromXmlParser.java:534: error: class, interface, or enum expected
					return _currToken;
					^, FromXmlParser.java:536: error: class, interface, or enum expected
				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME :
				^, FromXmlParser.java:540: error: class, interface, or enum expected
						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;
						^, FromXmlParser.java:541: error: class, interface, or enum expected
						_currText = _xmlTokens.getText();
						^, FromXmlParser.java:542: error: class, interface, or enum expected
						_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
						^, FromXmlParser.java:543: error: class, interface, or enum expected
						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;
						^, FromXmlParser.java:544: error: class, interface, or enum expected
					}
					^, FromXmlParser.java:546: error: class, interface, or enum expected
					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;
					^, FromXmlParser.java:547: error: class, interface, or enum expected
				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE :
				^, FromXmlParser.java:549: error: class, interface, or enum expected
					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;
					^, FromXmlParser.java:550: error: class, interface, or enum expected
				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT :
				^, FromXmlParser.java:552: error: class, interface, or enum expected
					if (_mayBeLeaf) {
					^, FromXmlParser.java:558: error: class, interface, or enum expected
						_xmlTokens.skipEndElement();
						^, FromXmlParser.java:559: error: class, interface, or enum expected
						if (_parsingContext.inArray()) {
						^, FromXmlParser.java:565: error: class, interface, or enum expected
								_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
								^, FromXmlParser.java:566: error: class, interface, or enum expected
								return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;
								^, FromXmlParser.java:567: error: class, interface, or enum expected
							}
							^, FromXmlParser.java:570: error: class, interface, or enum expected
					} else 
					^, FromXmlParser.java:577: error: class, interface, or enum expected
							continue;
							^, FromXmlParser.java:578: error: class, interface, or enum expected
						}
						^, FromXmlParser.java:583: error: class, interface, or enum expected
					_nextToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;
					^, FromXmlParser.java:584: error: class, interface, or enum expected
					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;
					^, FromXmlParser.java:585: error: class, interface, or enum expected
				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END :
				^, FromXmlParser.java:586: error: class, interface, or enum expected
					return _currToken = null;}
					                         ^, FromXmlParser.java:602: error: class, interface, or enum expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	       ^, FromXmlParser.java:605: error: class, interface, or enum expected
		if (_nextToken != null) {
		^, FromXmlParser.java:607: error: class, interface, or enum expected
			_currToken = t;
			^, FromXmlParser.java:608: error: class, interface, or enum expected
			_nextToken = null;
			^, FromXmlParser.java:611: error: class, interface, or enum expected
			if (t == com.fasterxml.jackson.core.JsonToken.VALUE_STRING) {
			^, FromXmlParser.java:613: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:615: error: class, interface, or enum expected
			return null;
			^, FromXmlParser.java:616: error: class, interface, or enum expected
		}
		^, FromXmlParser.java:621: error: class, interface, or enum expected
		while (token == com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT) {
		^, FromXmlParser.java:624: error: class, interface, or enum expected
				_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
				^, FromXmlParser.java:625: error: class, interface, or enum expected
				_currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;
				^, FromXmlParser.java:626: error: class, interface, or enum expected
				return null;
				^, FromXmlParser.java:627: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:630: error: class, interface, or enum expected
				_mayBeLeaf = true;
				^, FromXmlParser.java:631: error: class, interface, or enum expected
				continue;
				^, FromXmlParser.java:632: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:634: error: class, interface, or enum expected
			_parsingContext.setCurrentName(name);
			^, FromXmlParser.java:635: error: class, interface, or enum expected
			if ((_namesToWrap != null) && _namesToWrap.contains(name)) {
			^, FromXmlParser.java:637: error: class, interface, or enum expected
			}
			^, FromXmlParser.java:639: error: class, interface, or enum expected
			_currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;
			^, FromXmlParser.java:640: error: class, interface, or enum expected
			return null;
			^, FromXmlParser.java:641: error: class, interface, or enum expected
		} 
		^, FromXmlParser.java:649: error: class, interface, or enum expected
					_currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;
					^, FromXmlParser.java:650: error: class, interface, or enum expected
					return _currText = "";
					^]
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_xmlTokens.closeCompletely()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (191(f=1.7976931348623157E308), 192(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (191(f=1.7976931348623157E308), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 26, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 26, #ops: 0, parent:193]
---analyzing modificationPoint position: 21
---modifPoint 0 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 7
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 2 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
Attempts Base Ingredients  4 total 4
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 4
---modifPoint 3 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 14
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 4 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch [_xmlInputFactory]
--> var from patch: _xmlInputFactory spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java557
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return _xmlInputFactory` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 557, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return _xmlInputFactory` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 194, #gens: 27, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 194, errors: [XmlFactory.java:557: error: incompatible types: javax.xml.stream.XMLInputFactory cannot be converted to com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser
			sr = _xmlInputFactory.createXMLStreamReader(r); 			return _xmlInputFactory;
			                                                			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return _xmlInputFactory` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (193(f=1.7976931348623157E308), 194(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (193(f=1.7976931348623157E308), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 26, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 26, #ops: 0, parent:195]
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 196, #gens: 27, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 196
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-196/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=1.7976931348623157E308), 196(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (195(f=1.7976931348623157E308), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 26, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 26, #ops: 0, parent:197]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 198, #gens: 27, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-198/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (197(f=1.7976931348623157E308), 198(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (197(f=1.7976931348623157E308), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 26, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 26, #ops: 0, parent:199]
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
vars from patch [_currText, _xmlTokens]
--> var from patch: _currText spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: _xmlTokens spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_currText = _xmlTokens.getText()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_currText = _xmlTokens.getText()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 200, #gens: 27, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 200, errors: [FromXmlParser.java:549: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:549: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:549: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:549: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:549: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:549: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:549: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:550: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:550: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:550: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:550: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:550: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:551: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:551: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:551: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:552: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:552: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:552: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:564: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:583: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					break; 				case START_ARRAY : 					_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 					break; 				case END_OBJECT : 				case END_ARRAY : 					_parsingContext = _parsingContext.getParent(); 					_namesToWrap = _parsingContext.getNamesToWrap(); 					break; 				case FIELD_NAME : 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					break; 				default : 					// VALUE_STRING, VALUE_NULL 					// should be fine as is?} 			return t;} 		int token = _xmlTokens.next(); 		// Need to have a loop just because we may have to eat/convert 		// a start-element that indicates an array element.
	 ^, FromXmlParser.java:590: error: orphaned case
					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 						_currText = _xmlTokens.getText(); 						_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 					_currText = _xmlTokens.getText(); 					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 					_currText = _xmlTokens.getText(); 					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						// One more refinement (pronunced like "hack") is that if 						// we had an empty String (or all white space), and we are 						// deserializing an array, we better hide the empty text. 						// Also: must skip following END_ELEMENT 						_xmlTokens.skipEndElement(); 						if (_parsingContext.inArray()) { 							if (_isEmpty(_currText)) { 								// 06-Jan-2015, tatu: as per [dataformat-xml#180], need to 								// expose as empty Object, not null (or, worse, as used to 								// be done, by swallowing the token) 								_nextToken = com.fasterxml.jackson.core.JsonToken.END_OBJECT; 								_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 								return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;}} 						return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;} else // [dataformat-xml#177]: empty text may also need to be skipped 					// but... [dataformat-xml#191]: looks like we can't short-cut, must 					// loop over again
					                  						                    						                                                              						                                  						                                                                    						                                                                        					                                                           					                                                                     				^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                         ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                          ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                              ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                       ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                    ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                     ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                                ^, FromXmlParser.java:697: error: case, default, or '}' expected
	{
	^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		       ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		        ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		         ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		           ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                               ^, FromXmlParser.java:724: error: not a statement
	public java.lang.String getText() throws java.io.IOException 
	                                                ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                                                            ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                              ^, FromXmlParser.java:741: error: not a statement
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                        ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:746: error: not a statement
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                              ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                               ^, FromXmlParser.java:789: error: not a statement
	public char[] getTextCharacters() throws java.io.IOException {
	                                                ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                        ^, FromXmlParser.java:795: error: not a statement
	public int getTextLength() throws java.io.IOException {
	                                         ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                        ^, FromXmlParser.java:801: error: not a statement
	public int getTextOffset() throws java.io.IOException {
	                                         ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:810: error: ';' expected
	public boolean hasTextCharacters() 
	                                ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                         ^, FromXmlParser.java:822: error: not a statement
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                          ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                                      ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                            ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                ^, FromXmlParser.java:828: error: not a statement
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                            ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                              ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:848: error: not a statement
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                  ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                              ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                              ^, FromXmlParser.java:863: error: not a statement
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:869: error: not a statement
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                                        ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                            ^, FromXmlParser.java:875: error: not a statement
	public double getDoubleValue() throws java.io.IOException {
	                                             ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                                                         ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                          ^, FromXmlParser.java:881: error: not a statement
	public float getFloatValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                      ^, FromXmlParser.java:887: error: not a statement
	public int getIntValue() throws java.io.IOException {
	                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                                                   ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                        ^, FromXmlParser.java:893: error: not a statement
	public long getLongValue() throws java.io.IOException {
	                                         ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                     ^, FromXmlParser.java:899: error: not a statement
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                      ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                                  ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                      ^, FromXmlParser.java:905: error: not a statement
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_currText = _xmlTokens.getText()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=1.7976931348623157E308), 200(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (199(f=1.7976931348623157E308), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 26, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 26, #ops: 0, parent:201]
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen)) spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 202, #gens: 27, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 202, errors: [XmlSerializerProvider.java:268: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:275: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:276: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:276: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:276: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:276: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:277: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:277: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:278: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:279: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (201(f=1.7976931348623157E308), 202(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (201(f=1.7976931348623157E308), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 26, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 26, #ops: 0, parent:203]
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 204, #gens: 25, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 204, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=1.7976931348623157E308), 204(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (203(f=1.7976931348623157E308), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 26, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 26, #ops: 0, parent:205]
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 206, #gens: 25, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 206, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=1.7976931348623157E308), 206(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (205(f=1.7976931348623157E308), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 26, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 26, #ops: 0, parent:207]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java18
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 18, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 208, #gens: 27, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 208, errors: [StaxUtil.java:55: error: continue outside of loop
		continue; 		java.lang.Throwable t = e; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		^]
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=1.7976931348623157E308), 208(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (207(f=1.7976931348623157E308), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 26, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 26, #ops: 0, parent:209]
---analyzing modificationPoint position: 24
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 18
---modifPoint 1 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 210, #gens: 25, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 210
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-210/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=1.7976931348623157E308), 210(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (209(f=1.7976931348623157E308), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 26, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 26, #ops: 0, parent:211]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 13
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 2
---modifPoint 2 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 212, #gens: 25, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 212
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-212/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (211(f=1.7976931348623157E308), 212(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (211(f=1.7976931348623157E308), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 26, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 26, #ops: 0, parent:213]
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [((java.lang.Error) (t))]
--> var from patch: ((java.lang.Error) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 214, #gens: 26, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-214/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (213(f=1.7976931348623157E308), 214(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (213(f=1.7976931348623157E308), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 26, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 26, #ops: 0, parent:215]
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
---modifPoint 1 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch [_currentWrapper, w, _repeatElement, com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END, _localName, _namespaceURI]
--> var from patch: _currentWrapper spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: w spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _repeatElement spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: _localName spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: _namespaceURI spoon.support.reflect.code.CtFieldWriteImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `if (_currentWrapper != null) { 	com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper w = _curre[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `if (_currentWrapper != null) { 	com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper w = _curre[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 216, #gens: 27, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 216, errors: [XmlTokenStream.java:498: error: illegal start of expression
	 */ 	private final int _next() throws javax.xml.stream.XMLStreamException { 		switch (_currentState) { 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				++_nextAttributeIndex; 				// fall through 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT : 				// attributes to return?
	    	^, XmlTokenStream.java:493: error: 'try' without 'catch', 'finally' or resource declarations
		if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) { 			return null;} 		try { 			java.lang.String text = _collectUntilTag(); 			// 23-Dec-2015, tatu: Used to require text not to be null, but as per 			// [dataformat-xml#167], empty tag does count
		                                                                                                                                     			              		^, XmlTokenStream.java:505: error: illegal start of expression
		return _initStartElement();} 	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException { 		java.lang.String text = null; 		while (true) { 			switch (_xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return text; 					// note: SPACE is ignorable (and seldom seen), not to be included 				case javax.xml.stream.XMLStreamConstants.CHARACTERS : 				case javax.xml.stream.XMLStreamConstants.CDATA : 					if (text == null) { 						text = _xmlReader.getText();} else { 						// can be optimized in future, if need be: 						text += _xmlReader.getText();} 					break; 				default : 					// any other type (proc instr, comment etc) is just ignored}} } 	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException { 		while (_xmlReader.hasNext()) { 			int type; 			switch (type = _xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return type; 				default : 					// any other type (proc instr, comment etc) is just ignored}} 		throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input");} 	/* /**********************************************************************
		                             	^, XmlTokenStream.java:508: error: illegal start of expression
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	        ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	              ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                  ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                   ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                    ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                             ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                  ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                   ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                       ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                             ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                              ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                 ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		          ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		           ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		               ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                       ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                          ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                            ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                       ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                       ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                        ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		          ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		           ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		               ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                       ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                 ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                   ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                             ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                              ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                          ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                           ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                            ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                  ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                            ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                             ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                              ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                               ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                    ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                      ^, XmlTokenStream.java:508: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                       ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		   ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		    ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                    ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                       ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                           ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                             ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			   ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			    ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                   ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                    ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                  ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                   ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                            ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                              ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                 ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                   ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                  ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                 ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                  ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                     ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                      ^, XmlTokenStream.java:513: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                       ^, XmlTokenStream.java:514: error: illegal start of expression
	 * Method called to handle details of repeating "virtual"
	 ^, XmlTokenStream.java:514: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	         ^, XmlTokenStream.java:514: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                   ^, XmlTokenStream.java:514: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                  ^, XmlTokenStream.java:514: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                               ^, XmlTokenStream.java:515: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	        ^, XmlTokenStream.java:515: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	            ^, XmlTokenStream.java:515: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	             ^, XmlTokenStream.java:515: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                     ^, XmlTokenStream.java:515: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                       ^, XmlTokenStream.java:515: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                             ^, XmlTokenStream.java:515: error: '(' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                 ^, XmlTokenStream.java:515: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                           ^, XmlTokenStream.java:515: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                  ^, XmlTokenStream.java:515: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `if (_currentWrapper != null) { 	com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper w = _curre[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (215(f=1.7976931348623157E308), 216(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (215(f=1.7976931348623157E308), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 26, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 26, #ops: 0, parent:217]
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 218, #gens: 25, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 218
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-218/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=1.7976931348623157E308), 218(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (217(f=1.7976931348623157E308), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 26, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 26, #ops: 0, parent:219]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
---modifPoint 1 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 2 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 3 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 4 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 220, #gens: 25, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 220, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=1.7976931348623157E308), 220(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (219(f=1.7976931348623157E308), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 26, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 26, #ops: 0, parent:221]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
Attempts Base Ingredients  2 total 19
vars from patch [_parsingContext, _xmlTokens]
--> var from patch: _parsingContext spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: _xmlTokens spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(_xmlTokens.getLocalName())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(_xmlTokens.getLocalName())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 222, #gens: 26, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 222, errors: [FromXmlParser.java:673: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:673: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:673: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:673: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:673: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:673: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:673: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:674: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:674: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:674: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:674: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:674: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:675: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:675: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:675: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:676: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:676: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:676: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:688: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:707: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					break; 				case START_ARRAY : 					_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 					break; 				case END_OBJECT : 				case END_ARRAY : 					_parsingContext = _parsingContext.getParent(); 					_namesToWrap = _parsingContext.getNamesToWrap(); 					break; 				case FIELD_NAME : 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					break; 				default : 					// VALUE_STRING, VALUE_NULL 					// should be fine as is?} 			return t;} 		int token = _xmlTokens.next(); 		// Need to have a loop just because we may have to eat/convert 		// a start-element that indicates an array element.
	 ^, FromXmlParser.java:714: error: orphaned case
					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 						_currText = _xmlTokens.getText(); 						_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 					_currText = _xmlTokens.getText(); 					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 					_currText = _xmlTokens.getText(); 					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						// One more refinement (pronunced like "hack") is that if 						// we had an empty String (or all white space), and we are 						// deserializing an array, we better hide the empty text. 						// Also: must skip following END_ELEMENT 						_xmlTokens.skipEndElement(); 						if (_parsingContext.inArray()) { 							if (_isEmpty(_currText)) { 								// 06-Jan-2015, tatu: as per [dataformat-xml#180], need to 								// expose as empty Object, not null (or, worse, as used to 								// be done, by swallowing the token) 								_nextToken = com.fasterxml.jackson.core.JsonToken.END_OBJECT; 								_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 								return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;}} 						return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING;} else // [dataformat-xml#177]: empty text may also need to be skipped 					// but... [dataformat-xml#191]: looks like we can't short-cut, must 					// loop over again
					                  						                    						                                                              						                                  						                                                                    						                                                                        					                                                           					                                                                     				^, FromXmlParser.java:721: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                     ^, FromXmlParser.java:721: error: not a statement
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                                      ^, FromXmlParser.java:721: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String nextTextValue() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			// expected case; yes, got a String
	    	                    	                                                                  ^, FromXmlParser.java:725: error: orphaned case
				if (_mayBeLeaf) { 					_mayBeLeaf = false; 					_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 					_currText = _xmlTokens.getText(); 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					_currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} else { 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					_currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME;} 				break; 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				_currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				return _currText = _xmlTokens.getText(); 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 				_currText = _xmlTokens.getText(); 				if (_mayBeLeaf) { 					_mayBeLeaf = false; 					// Also: must skip following END_ELEMENT 					_xmlTokens.skipEndElement(); 					// NOTE: this is different from nextToken() -- NO work-around 					// for otherwise empty List/array 					_currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 					return _currText;} 				// If not a leaf, need to transform into property... 				_parsingContext.setCurrentName(_cfgNameForTextElement); 				_nextToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				_currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				break; 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END : 				_currToken = null;} 		return null;} 	private void _updateState(com.fasterxml.jackson.core.JsonToken t) { 		switch (t) { 			case START_OBJECT : 				_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 				break; 			case START_ARRAY : 				_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 				break; 			case END_OBJECT : 			case END_ARRAY : 				_parsingContext = _parsingContext.getParent(); 				_namesToWrap = _parsingContext.getNamesToWrap(); 				break; 			case FIELD_NAME : 				_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 				break; 			default :}} 	/* /**********************************************************
				                  					                    					                                                              					                                  					                                                                    					                                                                        					                                                           					                                                               				       			^, FromXmlParser.java:728: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;}
	    	                    	                               ^, FromXmlParser.java:728: error: not a statement
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;}
	    	                    	                                                ^, FromXmlParser.java:728: error: ';' expected
	 */ 	@java.lang.Override 	public java.lang.String getText() throws java.io.IOException { 		if (_currToken == null) { 			return null;}
	    	                    	                                                            ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                              ^, FromXmlParser.java:741: error: not a statement
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                        ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:746: error: not a statement
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                              ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                               ^, FromXmlParser.java:789: error: not a statement
	public char[] getTextCharacters() throws java.io.IOException {
	                                                ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                        ^, FromXmlParser.java:795: error: not a statement
	public int getTextLength() throws java.io.IOException {
	                                         ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                        ^, FromXmlParser.java:801: error: not a statement
	public int getTextOffset() throws java.io.IOException {
	                                         ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:810: error: ';' expected
	public boolean hasTextCharacters() 
	                                ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                         ^, FromXmlParser.java:822: error: not a statement
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                          ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                                      ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                            ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                ^, FromXmlParser.java:828: error: not a statement
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                            ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                              ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:848: error: not a statement
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                  ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                              ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                              ^, FromXmlParser.java:863: error: not a statement
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:869: error: not a statement
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                                        ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                            ^, FromXmlParser.java:875: error: not a statement
	public double getDoubleValue() throws java.io.IOException {
	                                             ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                                                         ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                          ^, FromXmlParser.java:881: error: not a statement
	public float getFloatValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                      ^, FromXmlParser.java:887: error: not a statement
	public int getIntValue() throws java.io.IOException {
	                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                                                   ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                        ^, FromXmlParser.java:893: error: not a statement
	public long getLongValue() throws java.io.IOException {
	                                         ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                     ^, FromXmlParser.java:899: error: not a statement
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                      ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                                  ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                      ^, FromXmlParser.java:905: error: not a statement
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                                   ^, FromXmlParser.java:922: error: ';' expected
	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException 
	                         ^, FromXmlParser.java:922: error: not a statement
	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException 
	                                                             ^, FromXmlParser.java:922: error: ';' expected
	protected void _handleEOF() throws com.fasterxml.jackson.core.JsonParseException 
	                                                                                ^, FromXmlParser.java:939: error: illegal start of expression
	protected void _releaseBuffers() throws java.io.IOException {
	^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	          ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	               ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                              ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                               ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                 ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                        ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                            ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                             ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                               ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                                ^, FromXmlParser.java:939: error: case, default, or '}' expected
	protected void _releaseBuffers() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:943: error: illegal start of expression
	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() 
	^, FromXmlParser.java:943: error: case, default, or '}' expected
	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() 
	          ^, FromXmlParser.java:943: error: case, default, or '}' expected
	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() 
	             ^, FromXmlParser.java:943: error: case, default, or '}' expected
	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() 
	              ^, FromXmlParser.java:943: error: case, default, or '}' expected
	protected com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() 
	                       ^]
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_parsingContext.setCurrentName(_xmlTokens.getLocalName())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=1.7976931348623157E308), 222(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (221(f=1.7976931348623157E308), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 26, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 26, #ops: 0, parent:223]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT, _currentState]
--> var from patch: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: _currentState spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NA[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NA[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 224, #gens: 26, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 224, errors: [XmlTokenStream.java:304: error: illegal start of expression
	private final int _next() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NA[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (223(f=1.7976931348623157E308), 224(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (223(f=1.7976931348623157E308), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 26, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 26, #ops: 0, parent:225]
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: WrapperHandlingDeserializer.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _delegatee.deserialize(jp, ctxt) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 120, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _delegatee.deserialize(jp, ctxt) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 226, #gens: 27, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 226, errors: [WrapperHandlingDeserializer.java:120: error: continue outside of loop
		_configureParser(jp); 		continue;
		                      		^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return _delegatee.deserialize(jp, ctxt) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=1.7976931348623157E308), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=1.7976931348623157E308), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 26, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 26, #ops: 0, parent:227]
---analyzing modificationPoint position: 7
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 228, #gens: 25, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 228
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-228/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(114): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (227(f=1.7976931348623157E308), 228(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (227(f=1.7976931348623157E308), )
----------Running generation: 115, population size: 1

***** Generation 115 : 0
**Parent Variant: [Variant id: 229, #gens: 26, #ops: 0, parent:-]

--Child created id: 230
--Creating new operations for variant [Variant id: 230, #gens: 26, #ops: 0, parent:229]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 18
---modifPoint 3 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 0
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 4 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 14
---modifPoint 5 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 23
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 6 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 12
---modifPoint 7 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 230, #gens: 25, #ops: 1, parent:229] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 230
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-230/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(115): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (229(f=1.7976931348623157E308), 230(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (229(f=1.7976931348623157E308), )
----------Running generation: 116, population size: 1

***** Generation 116 : 0
**Parent Variant: [Variant id: 231, #gens: 26, #ops: 0, parent:-]

--Child created id: 232
--Creating new operations for variant [Variant id: 232, #gens: 26, #ops: 0, parent:231]
---analyzing modificationPoint position: 16
location: XmlTokenStream.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 232, #gens: 25, #ops: 1, parent:231] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 232, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(116): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (231(f=1.7976931348623157E308), 232(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (231(f=1.7976931348623157E308), )
----------Running generation: 117, population size: 1

***** Generation 117 : 0
**Parent Variant: [Variant id: 233, #gens: 26, #ops: 0, parent:-]

--Child created id: 234
--Creating new operations for variant [Variant id: 234, #gens: 26, #ops: 0, parent:233]
---analyzing modificationPoint position: 3
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 4
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 234, #gens: 26, #ops: 1, parent:233] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 234
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-234/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(117): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.Error) (t)) ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (233(f=1.7976931348623157E308), 234(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (233(f=1.7976931348623157E308), )
----------Running generation: 118, population size: 1

***** Generation 118 : 0
**Parent Variant: [Variant id: 235, #gens: 26, #ops: 0, parent:-]

--Child created id: 236
--Creating new operations for variant [Variant id: 236, #gens: 26, #ops: 0, parent:235]
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 236, #gens: 25, #ops: 1, parent:235] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 236
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-236/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(118): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (235(f=1.7976931348623157E308), 236(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (235(f=1.7976931348623157E308), )
----------Running generation: 119, population size: 1

***** Generation 119 : 0
**Parent Variant: [Variant id: 237, #gens: 26, #ops: 0, parent:-]

--Child created id: 238
--Creating new operations for variant [Variant id: 238, #gens: 26, #ops: 0, parent:237]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 23
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 1 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 18
---modifPoint 2 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 238, #gens: 25, #ops: 1, parent:237] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 238
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-238/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(119): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (237(f=1.7976931348623157E308), 238(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (237(f=1.7976931348623157E308), )
----------Running generation: 120, population size: 1

***** Generation 120 : 0
**Parent Variant: [Variant id: 239, #gens: 26, #ops: 0, parent:-]

--Child created id: 240
--Creating new operations for variant [Variant id: 240, #gens: 26, #ops: 0, parent:239]
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
vars from patch [_namesToWrap, name, _xmlTokens]
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: name spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _xmlTokens spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// Ok: virtual wrapping can be done by simply repeating current START_ELEMENT. // Couple of ways to [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// Ok: virtual wrapping can be done by simply repeating current START_ELEMENT. // Couple of ways to [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 240, #gens: 27, #ops: 1, parent:239] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 240, errors: [FromXmlParser.java:515: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:515: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:515: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:515: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:515: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:515: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:515: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:516: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:516: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:516: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:516: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:516: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:517: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:517: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:517: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:518: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:518: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:518: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:530: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:549: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 					break; 				case START_ARRAY : 					_parsingContext = _parsingContext.createChildArrayContext(-1, -1); 					break; 				case END_OBJECT : 				case END_ARRAY : 					_parsingContext = _parsingContext.getParent(); 					_namesToWrap = _parsingContext.getNamesToWrap(); 					break; 				case FIELD_NAME : 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					break; 				default : 					// VALUE_STRING, VALUE_NULL 					// should be fine as is?} 			return t;} 		int token = _xmlTokens.next(); 		// Need to have a loop just because we may have to eat/convert 		// a start-element that indicates an array element.
	 ^, FromXmlParser.java:556: error: orphaned case
					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						_nextToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 						_currText = _xmlTokens.getText(); 						_parsingContext = _parsingContext.createChildObjectContext(-1, -1); 						return _currToken = com.fasterxml.jackson.core.JsonToken.START_OBJECT;} 					_parsingContext.setCurrentName(_xmlTokens.getLocalName()); 					return _currToken = com.fasterxml.jackson.core.JsonToken.FIELD_NAME; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 					_currText = _xmlTokens.getText(); 					return _currToken = com.fasterxml.jackson.core.JsonToken.VALUE_STRING; 				case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_TEXT : 					_currText = _xmlTokens.getText(); 					if (_mayBeLeaf) { 						_mayBeLeaf = false; 						// One more refinement (pronunced like "hack") is that if 						// we had an empty String (or all white space), and we are 						// deserializing an array, we better hide the empty text.
					                  						                    						                                                              						                                  						                                                                    						                                                                        					                                                           					                                                                     				^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                         ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                          ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                             ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                              ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                       ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                        ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                    ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                     ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                               ^, FromXmlParser.java:696: error: case, default, or '}' expected
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	                                                                ^, FromXmlParser.java:697: error: case, default, or '}' expected
	{
	^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		       ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		        ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		         ^, FromXmlParser.java:698: error: case, default, or '}' expected
		switch (t) {
		           ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                               ^, FromXmlParser.java:724: error: not a statement
	public java.lang.String getText() throws java.io.IOException 
	                                                ^, FromXmlParser.java:724: error: ';' expected
	public java.lang.String getText() throws java.io.IOException 
	                                                            ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                              ^, FromXmlParser.java:741: error: not a statement
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:741: error: ';' expected
	public final java.lang.String getValueAsString() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                        ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:746: error: not a statement
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:746: error: ';' expected
	public java.lang.String getValueAsString(java.lang.String defValue) throws java.io.IOException 
	                                                                                              ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                               ^, FromXmlParser.java:789: error: not a statement
	public char[] getTextCharacters() throws java.io.IOException {
	                                                ^, FromXmlParser.java:789: error: ';' expected
	public char[] getTextCharacters() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                        ^, FromXmlParser.java:795: error: not a statement
	public int getTextLength() throws java.io.IOException {
	                                         ^, FromXmlParser.java:795: error: ';' expected
	public int getTextLength() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                        ^, FromXmlParser.java:801: error: not a statement
	public int getTextOffset() throws java.io.IOException {
	                                         ^, FromXmlParser.java:801: error: ';' expected
	public int getTextOffset() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:810: error: ';' expected
	public boolean hasTextCharacters() 
	                                ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                         ^, FromXmlParser.java:822: error: not a statement
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                          ^, FromXmlParser.java:822: error: ';' expected
	public java.lang.Object getEmbeddedObject() throws java.io.IOException {
	                                                                      ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                            ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                ^, FromXmlParser.java:828: error: not a statement
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                ^, FromXmlParser.java:828: error: ';' expected
	public byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                            ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                              ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                  ^, FromXmlParser.java:848: error: not a statement
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                  ^, FromXmlParser.java:848: error: ';' expected
	protected byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant) throws java.io.IOException 
	                                                                                                              ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                              ^, FromXmlParser.java:863: error: not a statement
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                               ^, FromXmlParser.java:863: error: ';' expected
	public java.math.BigInteger getBigIntegerValue() throws java.io.IOException {
	                                                                           ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:869: error: not a statement
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                            ^, FromXmlParser.java:869: error: ';' expected
	public java.math.BigDecimal getDecimalValue() throws java.io.IOException {
	                                                                        ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                            ^, FromXmlParser.java:875: error: not a statement
	public double getDoubleValue() throws java.io.IOException {
	                                             ^, FromXmlParser.java:875: error: ';' expected
	public double getDoubleValue() throws java.io.IOException {
	                                                         ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                          ^, FromXmlParser.java:881: error: not a statement
	public float getFloatValue() throws java.io.IOException {
	                                           ^, FromXmlParser.java:881: error: ';' expected
	public float getFloatValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                      ^, FromXmlParser.java:887: error: not a statement
	public int getIntValue() throws java.io.IOException {
	                                       ^, FromXmlParser.java:887: error: ';' expected
	public int getIntValue() throws java.io.IOException {
	                                                   ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                        ^, FromXmlParser.java:893: error: not a statement
	public long getLongValue() throws java.io.IOException {
	                                         ^, FromXmlParser.java:893: error: ';' expected
	public long getLongValue() throws java.io.IOException {
	                                                     ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                     ^, FromXmlParser.java:899: error: not a statement
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                      ^, FromXmlParser.java:899: error: ';' expected
	public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() throws java.io.IOException {
	                                                                                                  ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                      ^, FromXmlParser.java:905: error: not a statement
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                       ^, FromXmlParser.java:905: error: ';' expected
	public java.lang.Number getNumberValue() throws java.io.IOException {
	                                                                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(120): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// Ok: virtual wrapping can be done by simply repeating current START_ELEMENT. // Couple of ways to [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (239(f=1.7976931348623157E308), 240(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (239(f=1.7976931348623157E308), )
----------Running generation: 121, population size: 1

***** Generation 121 : 0
**Parent Variant: [Variant id: 241, #gens: 26, #ops: 0, parent:-]

--Child created id: 242
--Creating new operations for variant [Variant id: 242, #gens: 26, #ops: 0, parent:241]
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen)) spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java73
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 73, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 242, #gens: 27, #ops: 1, parent:241] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 242, errors: [XmlSerializerProvider.java:268: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:275: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:276: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:276: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:276: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:276: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:277: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:277: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:278: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:279: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(121): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean asArray ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (241(f=1.7976931348623157E308), 242(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (241(f=1.7976931348623157E308), )
----------Running generation: 122, population size: 1

***** Generation 122 : 0
**Parent Variant: [Variant id: 243, #gens: 26, #ops: 0, parent:-]

--Child created id: 244
--Creating new operations for variant [Variant id: 244, #gens: 26, #ops: 0, parent:243]
---analyzing modificationPoint position: 15
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 244, #gens: 25, #ops: 1, parent:243] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 244
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-244/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(122): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (243(f=1.7976931348623157E308), 244(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (243(f=1.7976931348623157E308), )
----------Running generation: 123, population size: 1

***** Generation 123 : 0
**Parent Variant: [Variant id: 245, #gens: 26, #ops: 0, parent:-]

--Child created id: 246
--Creating new operations for variant [Variant id: 246, #gens: 26, #ops: 0, parent:245]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 2 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 6
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 3 not mutation generated in  throw ((java.lang.RuntimeException) (t))
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 4 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 5 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 23
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 6 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 7 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 7
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 8 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 9 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
vars from patch [_cfgNameForTextElement, name]
--> var from patch: _cfgNameForTextElement spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: name spoon.support.reflect.code.CtVariableReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_cfgNameForTextElement = name` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_cfgNameForTextElement = name` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 246, #gens: 27, #ops: 1, parent:245] gen mutated: 1 , gen not mut: 10, gen not applied  0
-The child does NOT compile: 246, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(123): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `_cfgNameForTextElement = name` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (245(f=1.7976931348623157E308), 246(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (245(f=1.7976931348623157E308), )
----------Running generation: 124, population size: 1

***** Generation 124 : 0
**Parent Variant: [Variant id: 247, #gens: 26, #ops: 0, parent:-]

--Child created id: 248
--Creating new operations for variant [Variant id: 248, #gens: 26, #ops: 0, parent:247]
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 248, #gens: 25, #ops: 1, parent:247] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 248
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-248/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(124): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (247(f=1.7976931348623157E308), 248(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (247(f=1.7976931348623157E308), )
----------Running generation: 125, population size: 1

***** Generation 125 : 0
**Parent Variant: [Variant id: 249, #gens: 26, #ops: 0, parent:-]

--Child created id: 250
--Creating new operations for variant [Variant id: 250, #gens: 26, #ops: 0, parent:249]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 250, #gens: 27, #ops: 1, parent:249] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 250, errors: [WrapperHandlingDeserializer.java:119: error: continue outside of loop
	{ 		continue;
	  		^]
Ingredient counter is Zero
---Undoing: gnrtn(125): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (249(f=1.7976931348623157E308), 250(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (249(f=1.7976931348623157E308), )
----------Running generation: 126, population size: 1

***** Generation 126 : 0
**Parent Variant: [Variant id: 251, #gens: 26, #ops: 0, parent:-]

--Child created id: 252
--Creating new operations for variant [Variant id: 252, #gens: 26, #ops: 0, parent:251]
---analyzing modificationPoint position: 22
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 0
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
---modifPoint 1 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
vars from patch []
location: XmlTokenStream.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 252, #gens: 26, #ops: 1, parent:251] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 252, errors: [XmlTokenStream.java:403: error: illegal start of expression
	 */ 	private final int _next() throws javax.xml.stream.XMLStreamException { 		switch (_currentState) { 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				++_nextAttributeIndex; 				// fall through 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT : 				// attributes to return?
	    	^, XmlTokenStream.java:398: error: 'try' without 'catch', 'finally' or resource declarations
		if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) { 			return null;} 		try { 			java.lang.String text = _collectUntilTag(); 			// 23-Dec-2015, tatu: Used to require text not to be null, but as per 			// [dataformat-xml#167], empty tag does count
		                                                                                                                                     			              		^, XmlTokenStream.java:410: error: illegal start of expression
		return _initStartElement();} 	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException { 		java.lang.String text = null; 		while (true) { 			switch (_xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return text; 					// note: SPACE is ignorable (and seldom seen), not to be included 				case javax.xml.stream.XMLStreamConstants.CHARACTERS : 				case javax.xml.stream.XMLStreamConstants.CDATA : 					if (text == null) { 						text = _xmlReader.getText();} else { 						// can be optimized in future, if need be: 						text += _xmlReader.getText();} 					break; 				default : 					// any other type (proc instr, comment etc) is just ignored}} } 	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException { 		while (_xmlReader.hasNext()) { 			int type; 			switch (type = _xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return type; 				default : 					// any other type (proc instr, comment etc) is just ignored}} 		throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input");} 	/* /**********************************************************************
		                             	^, XmlTokenStream.java:413: error: illegal start of expression
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	        ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	              ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                  ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                   ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                    ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                             ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                  ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                   ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                       ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                             ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                              ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                 ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		          ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		           ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		               ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                       ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                          ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                            ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                       ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                       ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                        ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		          ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		           ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		               ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                       ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                 ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                   ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                             ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                              ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                          ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                           ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                            ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                  ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                            ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                             ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                              ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                               ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                    ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                      ^, XmlTokenStream.java:413: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                       ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		   ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		    ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                    ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                       ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                           ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                             ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			   ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			    ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                   ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                    ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                  ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                   ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                            ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                              ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                 ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                   ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                  ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                 ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                  ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                                     ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                                      ^, XmlTokenStream.java:418: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                                       ^, XmlTokenStream.java:418: error: 'else' without 'if'
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so:
		                               			                                                     				                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(126): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (251(f=1.7976931348623157E308), 252(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (251(f=1.7976931348623157E308), )
----------Running generation: 127, population size: 1

***** Generation 127 : 0
**Parent Variant: [Variant id: 253, #gens: 26, #ops: 0, parent:-]

--Child created id: 254
--Creating new operations for variant [Variant id: 254, #gens: 26, #ops: 0, parent:253]
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
---modifPoint 0 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 3 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 10
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
---modifPoint 4 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 5 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 6 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
Attempts Base Ingredients  2 total 57
---modifPoint 7 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
vars from patch [jp, _namesToWrap]
--> var from patch: jp spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 254, #gens: 27, #ops: 1, parent:253] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 254
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-254/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(127): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (253(f=1.7976931348623157E308), 254(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (253(f=1.7976931348623157E308), )
----------Running generation: 128, population size: 1

***** Generation 128 : 0
**Parent Variant: [Variant id: 255, #gens: 26, #ops: 0, parent:-]

--Child created id: 256
--Creating new operations for variant [Variant id: 256, #gens: 26, #ops: 0, parent:255]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 256, #gens: 25, #ops: 1, parent:255] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 256
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-256/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(128): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (255(f=1.7976931348623157E308), 256(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (255(f=1.7976931348623157E308), )
----------Running generation: 129, population size: 1

***** Generation 129 : 0
**Parent Variant: [Variant id: 257, #gens: 26, #ops: 0, parent:-]

--Child created id: 258
--Creating new operations for variant [Variant id: 258, #gens: 26, #ops: 0, parent:257]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java19
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 19, pointed element: CtWhileImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 258, #gens: 27, #ops: 1, parent:257] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 258
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-258/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(129): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `while (t.getCause() != null) { 	t = t.getCause(); } ` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (257(f=1.7976931348623157E308), 258(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (257(f=1.7976931348623157E308), )
----------Running generation: 130, population size: 1

***** Generation 130 : 0
**Parent Variant: [Variant id: 259, #gens: 26, #ops: 0, parent:-]

--Child created id: 260
--Creating new operations for variant [Variant id: 260, #gens: 26, #ops: 0, parent:259]
---analyzing modificationPoint position: 2
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch []
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _next()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _next()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 260, #gens: 27, #ops: 1, parent:259] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 260, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(130): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _next()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (259(f=1.7976931348623157E308), 260(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (259(f=1.7976931348623157E308), )
----------Running generation: 131, population size: 1

***** Generation 131 : 0
**Parent Variant: [Variant id: 261, #gens: 26, #ops: 0, parent:-]

--Child created id: 262
--Creating new operations for variant [Variant id: 262, #gens: 26, #ops: 0, parent:261]
---analyzing modificationPoint position: 14
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [asArray, gen]
--> var from patch: asArray spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java90
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 90, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 262, #gens: 27, #ops: 1, parent:261] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 262, errors: [XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                          ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                             ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                    ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                                                                 ^, XmlSerializerProvider.java:113: error: not a statement
	java.io.IOException 
	       ^, XmlSerializerProvider.java:113: error: ';' expected
	java.io.IOException 
	                   ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                          ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                             ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                                                    ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                   ^, XmlSerializerProvider.java:159: error: not a statement
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                               ^, XmlSerializerProvider.java:201: error: illegal start of expression
	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(131): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (261(f=1.7976931348623157E308), 262(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (261(f=1.7976931348623157E308), )
----------Running generation: 132, population size: 1

***** Generation 132 : 0
**Parent Variant: [Variant id: 263, #gens: 26, #ops: 0, parent:-]

--Child created id: 264
--Creating new operations for variant [Variant id: 264, #gens: 26, #ops: 0, parent:263]
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 264, #gens: 25, #ops: 1, parent:263] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 264
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-264/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(132): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (263(f=1.7976931348623157E308), 264(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (263(f=1.7976931348623157E308), )
----------Running generation: 133, population size: 1

***** Generation 133 : 0
**Parent Variant: [Variant id: 265, #gens: 26, #ops: 0, parent:-]

--Child created id: 266
--Creating new operations for variant [Variant id: 266, #gens: 26, #ops: 0, parent:265]
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `throw com.fasterxml.jackson.databind.JsonMappingException.from(gen,  "XmlMapper does not with genera[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `throw com.fasterxml.jackson.databind.JsonMappingException.from(gen,  "XmlMapper does not with genera[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 266, #gens: 27, #ops: 1, parent:265] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 266, errors: [XmlSerializerProvider.java:264: error: illegal start of type
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:264: error: ';' expected
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			                                        ^, XmlSerializerProvider.java:271: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:272: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:272: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:272: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:272: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:272: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:272: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:272: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:272: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:272: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:273: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:273: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:273: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:273: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:273: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:274: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:275: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(133): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `throw com.fasterxml.jackson.databind.JsonMappingException.from(gen,  "XmlMapper does not with genera[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (265(f=1.7976931348623157E308), 266(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (265(f=1.7976931348623157E308), )
----------Running generation: 134, population size: 1

***** Generation 134 : 0
**Parent Variant: [Variant id: 267, #gens: 26, #ops: 0, parent:-]

--Child created id: 268
--Creating new operations for variant [Variant id: 268, #gens: 26, #ops: 0, parent:267]
---analyzing modificationPoint position: 0
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
vars from patch [jp]
--> var from patch: jp spoon.support.reflect.code.CtVariableReadImpl
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 268, #gens: 26, #ops: 1, parent:267] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 268
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-268/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(134): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (267(f=1.7976931348623157E308), 268(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (267(f=1.7976931348623157E308), )
----------Running generation: 135, population size: 1

***** Generation 135 : 0
**Parent Variant: [Variant id: 269, #gens: 26, #ops: 0, parent:-]

--Child created id: 270
--Creating new operations for variant [Variant id: 270, #gens: 26, #ops: 0, parent:269]
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  sr = _initializeXmlReader(sr)
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 270, #gens: 25, #ops: 1, parent:269] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 270
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-270/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(135): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (269(f=1.7976931348623157E308), 270(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (269(f=1.7976931348623157E308), )
----------Running generation: 136, population size: 1

***** Generation 136 : 0
**Parent Variant: [Variant id: 271, #gens: 26, #ops: 0, parent:-]

--Child created id: 272
--Creating new operations for variant [Variant id: 272, #gens: 26, #ops: 0, parent:271]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [e]
--> var from patch: e spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 272, #gens: 27, #ops: 1, parent:271] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 272, errors: [StaxUtil.java:24: error: variable t is already defined in method <T>throwXmlAsIOException(javax.xml.stream.XMLStreamException)
		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		java.lang.Throwable t = e;
		                                               			                                           		                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(136): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `java.lang.Throwable t = e` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (271(f=1.7976931348623157E308), 272(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (271(f=1.7976931348623157E308), )
----------Running generation: 137, population size: 1

***** Generation 137 : 0
**Parent Variant: [Variant id: 273, #gens: 26, #ops: 0, parent:-]

--Child created id: 274
--Creating new operations for variant [Variant id: 274, #gens: 26, #ops: 0, parent:273]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 12
---modifPoint 1 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 2
---modifPoint 2 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 21
---modifPoint 3 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 4 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 274, #gens: 25, #ops: 1, parent:273] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 274, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(137): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (273(f=1.7976931348623157E308), 274(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (273(f=1.7976931348623157E308), )
----------Running generation: 138, population size: 1

***** Generation 138 : 0
**Parent Variant: [Variant id: 275, #gens: 26, #ops: 0, parent:-]

--Child created id: 276
--Creating new operations for variant [Variant id: 276, #gens: 26, #ops: 0, parent:275]
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 276, #gens: 25, #ops: 1, parent:275] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 276
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-276/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(138): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (275(f=1.7976931348623157E308), 276(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (275(f=1.7976931348623157E308), )
----------Running generation: 139, population size: 1

***** Generation 139 : 0
**Parent Variant: [Variant id: 277, #gens: 26, #ops: 0, parent:-]

--Child created id: 278
--Creating new operations for variant [Variant id: 278, #gens: 26, #ops: 0, parent:277]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 9
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 278, #gens: 25, #ops: 1, parent:277] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 278
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-278/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(139): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (277(f=1.7976931348623157E308), 278(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (277(f=1.7976931348623157E308), )
----------Running generation: 140, population size: 1

***** Generation 140 : 0
**Parent Variant: [Variant id: 279, #gens: 26, #ops: 0, parent:-]

--Child created id: 280
--Creating new operations for variant [Variant id: 280, #gens: 26, #ops: 0, parent:279]
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 24
location: XmlFactory.java559
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 280, #gens: 25, #ops: 1, parent:279] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 280, errors: [XmlFactory.java:563: error: variable sr might not have been initialized
		_objectCodec, sr);
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(140): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (279(f=1.7976931348623157E308), 280(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (279(f=1.7976931348623157E308), )
----------Running generation: 141, population size: 1

***** Generation 141 : 0
**Parent Variant: [Variant id: 281, #gens: 26, #ops: 0, parent:-]

--Child created id: 282
--Creating new operations for variant [Variant id: 282, #gens: 26, #ops: 0, parent:281]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [value, gen]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java74
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 74, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 282, #gens: 27, #ops: 1, parent:281] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 282
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-282/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(141): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (281(f=1.7976931348623157E308), 282(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (281(f=1.7976931348623157E308), )
----------Running generation: 142, population size: 1

***** Generation 142 : 0
**Parent Variant: [Variant id: 283, #gens: 26, #ops: 0, parent:-]

--Child created id: 284
--Creating new operations for variant [Variant id: 284, #gens: 26, #ops: 0, parent:283]
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 284, #gens: 25, #ops: 1, parent:283] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 284
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-284/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(142): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (283(f=1.7976931348623157E308), 284(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (283(f=1.7976931348623157E308), )
----------Running generation: 143, population size: 1

***** Generation 143 : 0
**Parent Variant: [Variant id: 285, #gens: 26, #ops: 0, parent:-]

--Child created id: 286
--Creating new operations for variant [Variant id: 286, #gens: 26, #ops: 0, parent:285]
---analyzing modificationPoint position: 13
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 286, #gens: 25, #ops: 1, parent:285] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 286, errors: [XmlSerializerProvider.java:105: error: variable asArray might not have been initialized
		asArray) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(143): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (285(f=1.7976931348623157E308), 286(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (285(f=1.7976931348623157E308), )
----------Running generation: 144, population size: 1

***** Generation 144 : 0
**Parent Variant: [Variant id: 287, #gens: 26, #ops: 0, parent:-]

--Child created id: 288
--Creating new operations for variant [Variant id: 288, #gens: 26, #ops: 0, parent:287]
---analyzing modificationPoint position: 21
---modifPoint 0 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 3 not mutation generated in  final java.lang.Class<?> cls = value.getClass()
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java24
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 288, #gens: 27, #ops: 1, parent:287] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 288
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-288/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(144): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (287(f=1.7976931348623157E308), 288(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (287(f=1.7976931348623157E308), )
----------Running generation: 145, population size: 1

***** Generation 145 : 0
**Parent Variant: [Variant id: 289, #gens: 26, #ops: 0, parent:-]

--Child created id: 290
--Creating new operations for variant [Variant id: 290, #gens: 26, #ops: 0, parent:289]
---analyzing modificationPoint position: 17
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [_xmlTokens]
--> var from patch: _xmlTokens spoon.support.reflect.code.CtFieldReadImpl
location: FromXmlParser.java305
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// and last thing, [dataformat-xml#33], better ignore attributes _xmlTokens.skipAttributes()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// and last thing, [dataformat-xml#33], better ignore attributes _xmlTokens.skipAttributes()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 290, #gens: 26, #ops: 1, parent:289] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 290, errors: [FromXmlParser.java:429: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	 ^, FromXmlParser.java:429: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	         ^, FromXmlParser.java:429: error: not a statement
	 * Method that return the <b>starting</b> location of the current
	          ^, FromXmlParser.java:429: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	              ^, FromXmlParser.java:429: error: illegal start of expression
	 * Method that return the <b>starting</b> location of the current
	                                      ^, FromXmlParser.java:429: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                  ^, FromXmlParser.java:429: error: ';' expected
	 * Method that return the <b>starting</b> location of the current
	                                                         ^, FromXmlParser.java:430: error: not a statement
	 * token; that is, position of the first character from input
	 ^, FromXmlParser.java:430: error: ';' expected
	 * token; that is, position of the first character from input
	                           ^, FromXmlParser.java:430: error: ';' expected
	 * token; that is, position of the first character from input
	                                  ^, FromXmlParser.java:430: error: ';' expected
	 * token; that is, position of the first character from input
	                                                  ^, FromXmlParser.java:430: error: ';' expected
	 * token; that is, position of the first character from input
	                                                             ^, FromXmlParser.java:431: error: ';' expected
	 * that starts the current token.
	              ^, FromXmlParser.java:431: error: ';' expected
	 * that starts the current token.
	                          ^, FromXmlParser.java:431: error: <identifier> expected
	 * that starts the current token.
	                                 ^, FromXmlParser.java:432: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	  ^, FromXmlParser.java:432: error: illegal start of expression
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                    	^, FromXmlParser.java:432: error: ';' expected
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonLocation getTokenLocation() { 		return _xmlTokens.getTokenLocation();} 	/**
	    	                   ^, FromXmlParser.java:444: error: illegal start of expression
	public JsonToken nextToken() throws IOException
	^, FromXmlParser.java:463: error: illegal start of type
	 */ 	@java.lang.Override 	public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException { 		_binaryValue = null; 		if (_nextToken != null) { 			com.fasterxml.jackson.core.JsonToken t = _nextToken; 			_currToken = t; 			_nextToken = null; 			switch (t) { 				case START_OBJECT : 					_parsingContext = _parsingContext.createChildObjectContext(-1, -1);
	 ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(145): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `// and last thing, [dataformat-xml#33], better ignore attributes _xmlTokens.skipAttributes()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (289(f=1.7976931348623157E308), 290(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (289(f=1.7976931348623157E308), )
----------Running generation: 146, population size: 1

***** Generation 146 : 0
**Parent Variant: [Variant id: 291, #gens: 26, #ops: 0, parent:-]

--Child created id: 292
--Creating new operations for variant [Variant id: 292, #gens: 26, #ops: 0, parent:291]
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
Attempts Base Ingredients  2 total 33
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 292, #gens: 25, #ops: 1, parent:291] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 292
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-292/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(146): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (291(f=1.7976931348623157E308), 292(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (291(f=1.7976931348623157E308), )
----------Running generation: 147, population size: 1

***** Generation 147 : 0
**Parent Variant: [Variant id: 293, #gens: 26, #ops: 0, parent:-]

--Child created id: 294
--Creating new operations for variant [Variant id: 294, #gens: 26, #ops: 0, parent:293]
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 294, #gens: 25, #ops: 1, parent:293] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 294
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-294/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(147): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (293(f=1.7976931348623157E308), 294(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (293(f=1.7976931348623157E308), )
----------Running generation: 148, population size: 1

***** Generation 148 : 0
**Parent Variant: [Variant id: 295, #gens: 26, #ops: 0, parent:-]

--Child created id: 296
--Creating new operations for variant [Variant id: 296, #gens: 26, #ops: 0, parent:295]
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java559
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `this(null, null, null)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 559, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `this(null, null, null)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 296, #gens: 27, #ops: 1, parent:295] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 296, errors: [XmlFactory.java:559: error: call to this must be first statement in constructor
		} catch (javax.xml.stream.XMLStreamException e) { 			this(null, null, null);
		                                                  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(148): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `this(null, null, null)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (295(f=1.7976931348623157E308), 296(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (295(f=1.7976931348623157E308), )
----------Running generation: 149, population size: 1

***** Generation 149 : 0
**Parent Variant: [Variant id: 297, #gens: 26, #ops: 0, parent:-]

--Child created id: 298
--Creating new operations for variant [Variant id: 298, #gens: 26, #ops: 0, parent:297]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java24
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 298, #gens: 27, #ops: 1, parent:297] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 298
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-298/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(149): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `java.lang.StringBuilder sb` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (297(f=1.7976931348623157E308), 298(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (297(f=1.7976931348623157E308), )
----------Running generation: 150, population size: 1

***** Generation 150 : 0
**Parent Variant: [Variant id: 299, #gens: 26, #ops: 0, parent:-]

--Child created id: 300
--Creating new operations for variant [Variant id: 300, #gens: 26, #ops: 0, parent:299]
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 300, #gens: 25, #ops: 1, parent:299] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 300
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-300/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(150): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (299(f=1.7976931348623157E308), 300(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (299(f=1.7976931348623157E308), )
----------Running generation: 151, population size: 1

***** Generation 151 : 0
**Parent Variant: [Variant id: 301, #gens: 26, #ops: 0, parent:-]

--Child created id: 302
--Creating new operations for variant [Variant id: 302, #gens: 26, #ops: 0, parent:301]
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch []
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 302, #gens: 27, #ops: 1, parent:301] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 302, errors: [XmlSerializerProvider.java:247: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:248: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:248: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:254: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:255: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:255: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:255: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:255: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:255: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:255: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:255: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:256: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:256: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:256: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:257: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:258: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(151): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (301(f=1.7976931348623157E308), 302(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (301(f=1.7976931348623157E308), )
----------Running generation: 152, population size: 1

***** Generation 152 : 0
**Parent Variant: [Variant id: 303, #gens: 26, #ops: 0, parent:-]

--Child created id: 304
--Creating new operations for variant [Variant id: 304, #gens: 26, #ops: 0, parent:303]
---analyzing modificationPoint position: 2
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 0
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
vars from patch [((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)), _namesToWrap]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 304, #gens: 26, #ops: 1, parent:303] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 304
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-304/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(152): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (303(f=1.7976931348623157E308), 304(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (303(f=1.7976931348623157E308), )
----------Running generation: 153, population size: 1

***** Generation 153 : 0
**Parent Variant: [Variant id: 305, #gens: 26, #ops: 0, parent:-]

--Child created id: 306
--Creating new operations for variant [Variant id: 306, #gens: 26, #ops: 0, parent:305]
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 306, #gens: 25, #ops: 1, parent:305] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 306
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-306/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(153): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (305(f=1.7976931348623157E308), 306(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (305(f=1.7976931348623157E308), )
----------Running generation: 154, population size: 1

***** Generation 154 : 0
**Parent Variant: [Variant id: 307, #gens: 26, #ops: 0, parent:-]

--Child created id: 308
--Creating new operations for variant [Variant id: 308, #gens: 26, #ops: 0, parent:307]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
Attempts Base Ingredients  2 total 33
vars from patch [((java.lang.RuntimeException) (t))]
--> var from patch: ((java.lang.RuntimeException) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java19
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 19, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 308, #gens: 27, #ops: 1, parent:307] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 308, errors: [StaxUtil.java:24: error: unreachable statement
		throw ((java.lang.RuntimeException) (t)); 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));}
		                                          		^]
Ingredient counter is Zero
---Undoing: gnrtn(154): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `throw ((java.lang.RuntimeException) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (307(f=1.7976931348623157E308), 308(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (307(f=1.7976931348623157E308), )
----------Running generation: 155, population size: 1

***** Generation 155 : 0
**Parent Variant: [Variant id: 309, #gens: 26, #ops: 0, parent:-]

--Child created id: 310
--Creating new operations for variant [Variant id: 310, #gens: 26, #ops: 0, parent:309]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 10
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))]
--> var from patch: ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen)) spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java72
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 72, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 310, #gens: 27, #ops: 1, parent:309] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 310, errors: [XmlSerializerProvider.java:268: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:269: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:275: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:276: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:276: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:276: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:276: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:276: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:276: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:277: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:277: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:277: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:278: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:279: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(155): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Class<?> cls = value.getClass() ` -topatch--> `return ((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (gen))` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (309(f=1.7976931348623157E308), 310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (309(f=1.7976931348623157E308), )
----------Running generation: 156, population size: 1

***** Generation 156 : 0
**Parent Variant: [Variant id: 311, #gens: 26, #ops: 0, parent:-]

--Child created id: 312
--Creating new operations for variant [Variant id: 312, #gens: 26, #ops: 0, parent:311]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 3 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 1
---modifPoint 4 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 6
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 312, #gens: 27, #ops: 1, parent:311] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 312, errors: [StaxUtil.java:55: error: continue outside of loop
			continue;} 		throw new java.io.IOException(t);} 	/**
			^]
Ingredient counter is Zero
---Undoing: gnrtn(156): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (311(f=1.7976931348623157E308), 312(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (311(f=1.7976931348623157E308), )
----------Running generation: 157, population size: 1

***** Generation 157 : 0
**Parent Variant: [Variant id: 313, #gens: 26, #ops: 0, parent:-]

--Child created id: 314
--Creating new operations for variant [Variant id: 314, #gens: 26, #ops: 0, parent:313]
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 0 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 314, #gens: 27, #ops: 1, parent:313] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 314
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-314/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(157): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (313(f=1.7976931348623157E308), 314(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (313(f=1.7976931348623157E308), )
----------Running generation: 158, population size: 1

***** Generation 158 : 0
**Parent Variant: [Variant id: 315, #gens: 26, #ops: 0, parent:-]

--Child created id: 316
--Creating new operations for variant [Variant id: 316, #gens: 26, #ops: 0, parent:315]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 4
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 2 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [((java.lang.Error) (t))]
--> var from patch: ((java.lang.Error) (t)) spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java23
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 23, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 316, #gens: 27, #ops: 1, parent:315] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 316, errors: [StaxUtil.java:24: error: unreachable statement
		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));}
		^]
Ingredient counter is Zero
---Undoing: gnrtn(158): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `throw ((java.lang.Error) (t))` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (315(f=1.7976931348623157E308), 316(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (315(f=1.7976931348623157E308), )
----------Running generation: 159, population size: 1

***** Generation 159 : 0
**Parent Variant: [Variant id: 317, #gens: 26, #ops: 0, parent:-]

--Child created id: 318
--Creating new operations for variant [Variant id: 318, #gens: 26, #ops: 0, parent:317]
---analyzing modificationPoint position: 2
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
vars from patch []
location: StaxUtil.java18
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 18, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 318, #gens: 26, #ops: 1, parent:317] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 318, errors: [StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		       ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			    ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		    ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                          ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: illegal parenthesized expression
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                         ^, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                                		    ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                                		                                               			                                     ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil, StaxUtil.java:36: error: illegal parenthesized expression
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                                		                                               			                                    ^, StaxUtil.java:36: error: cannot find symbol
		int changes = 0; 		while (t.getCause() != null) { 			t = t.getCause();} 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		                 		                               			                   		                                    			                                		                                               			                                           		                              ^
  symbol:   variable t
  location: class com.fasterxml.jackson.dataformat.xml.util.StaxUtil]
Ingredient counter is Zero
---Undoing: gnrtn(159): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (317(f=1.7976931348623157E308), 318(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (317(f=1.7976931348623157E308), )
----------Running generation: 160, population size: 1

***** Generation 160 : 0
**Parent Variant: [Variant id: 319, #gens: 26, #ops: 0, parent:-]

--Child created id: 320
--Creating new operations for variant [Variant id: 320, #gens: 26, #ops: 0, parent:319]
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 320, #gens: 25, #ops: 1, parent:319] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 320, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(160): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (319(f=1.7976931348623157E308), 320(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (319(f=1.7976931348623157E308), )
----------Running generation: 161, population size: 1

***** Generation 161 : 0
**Parent Variant: [Variant id: 321, #gens: 26, #ops: 0, parent:-]

--Child created id: 322
--Creating new operations for variant [Variant id: 322, #gens: 26, #ops: 0, parent:321]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  // From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `gen.writeEndObject()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `gen.writeEndObject()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 322, #gens: 27, #ops: 1, parent:321] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 322, errors: [XmlSerializerProvider.java:107: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                          ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                             ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                    ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                                                                 ^, XmlSerializerProvider.java:113: error: not a statement
	java.io.IOException 
	       ^, XmlSerializerProvider.java:113: error: ';' expected
	java.io.IOException 
	                   ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                          ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                             ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                                                    ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                   ^, XmlSerializerProvider.java:159: error: not a statement
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                               ^, XmlSerializerProvider.java:201: error: illegal start of expression
	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(161): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `gen.writeEndObject()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (321(f=1.7976931348623157E308), 322(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (321(f=1.7976931348623157E308), )
----------Running generation: 162, population size: 1

***** Generation 162 : 0
**Parent Variant: [Variant id: 323, #gens: 26, #ops: 0, parent:-]

--Child created id: 324
--Creating new operations for variant [Variant id: 324, #gens: 26, #ops: 0, parent:323]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
Attempts Base Ingredients  2 total 33
vars from patch []
location: StaxUtil.java24
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 24, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 324, #gens: 27, #ops: 1, parent:323] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 324, errors: [StaxUtil.java:55: error: continue outside of loop
		continue; 		throw new java.io.IOException(t);} 	/**
		^]
Ingredient counter is Zero
---Undoing: gnrtn(162): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (323(f=1.7976931348623157E308), 324(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (323(f=1.7976931348623157E308), )
----------Running generation: 163, population size: 1

***** Generation 163 : 0
**Parent Variant: [Variant id: 325, #gens: 26, #ops: 0, parent:-]

--Child created id: 326
--Creating new operations for variant [Variant id: 326, #gens: 26, #ops: 0, parent:325]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 19
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 22
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 3 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 24
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 4 not mutation generated in  return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e)
---analyzing modificationPoint position: 16
location: XmlTokenStream.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 326, #gens: 25, #ops: 1, parent:325] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 326, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(163): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (325(f=1.7976931348623157E308), 326(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (325(f=1.7976931348623157E308), )
----------Running generation: 164, population size: 1

***** Generation 164 : 0
**Parent Variant: [Variant id: 327, #gens: 26, #ops: 0, parent:-]

--Child created id: 328
--Creating new operations for variant [Variant id: 328, #gens: 26, #ops: 0, parent:327]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 8
location: StaxUtil.java24
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 328, #gens: 25, #ops: 1, parent:327] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 328, errors: [StaxUtil.java:26: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(164): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (327(f=1.7976931348623157E308), 328(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (327(f=1.7976931348623157E308), )
----------Running generation: 165, population size: 1

***** Generation 165 : 0
**Parent Variant: [Variant id: 329, #gens: 26, #ops: 0, parent:-]

--Child created id: 330
--Creating new operations for variant [Variant id: 330, #gens: 26, #ops: 0, parent:329]
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 330, #gens: 25, #ops: 1, parent:329] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 330
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-330/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(165): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (329(f=1.7976931348623157E308), 330(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (329(f=1.7976931348623157E308), )
----------Running generation: 166, population size: 1

***** Generation 166 : 0
**Parent Variant: [Variant id: 331, #gens: 26, #ops: 0, parent:-]

--Child created id: 332
--Creating new operations for variant [Variant id: 332, #gens: 26, #ops: 0, parent:331]
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
---modifPoint 0 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...]
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 332, #gens: 25, #ops: 1, parent:331] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 332
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-332/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(166): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (331(f=1.7976931348623157E308), 332(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (331(f=1.7976931348623157E308), )
----------Running generation: 167, population size: 1

***** Generation 167 : 0
**Parent Variant: [Variant id: 333, #gens: 26, #ops: 0, parent:-]

--Child created id: 334
--Creating new operations for variant [Variant id: 334, #gens: 26, #ops: 0, parent:333]
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 334, #gens: 25, #ops: 1, parent:333] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 334
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-334/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(167): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (333(f=1.7976931348623157E308), 334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (333(f=1.7976931348623157E308), )
----------Running generation: 168, population size: 1

***** Generation 168 : 0
**Parent Variant: [Variant id: 335, #gens: 26, #ops: 0, parent:-]

--Child created id: 336
--Creating new operations for variant [Variant id: 336, #gens: 26, #ops: 0, parent:335]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch []
location: XmlSerializerProvider.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 74, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 336, #gens: 27, #ops: 1, parent:335] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 336, errors: [XmlSerializerProvider.java:75: error: unreachable statement
		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen);
		                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(168): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (335(f=1.7976931348623157E308), 336(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (335(f=1.7976931348623157E308), )
----------Running generation: 169, population size: 1

***** Generation 169 : 0
**Parent Variant: [Variant id: 337, #gens: 26, #ops: 0, parent:-]

--Child created id: 338
--Creating new operations for variant [Variant id: 338, #gens: 26, #ops: 0, parent:337]
---analyzing modificationPoint position: 1
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 338, #gens: 25, #ops: 1, parent:337] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 338
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-338/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(169): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (337(f=1.7976931348623157E308), 338(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (337(f=1.7976931348623157E308), )
----------Running generation: 170, population size: 1

***** Generation 170 : 0
**Parent Variant: [Variant id: 339, #gens: 26, #ops: 0, parent:-]

--Child created id: 340
--Creating new operations for variant [Variant id: 340, #gens: 26, #ops: 0, parent:339]
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch [_xmlReader]
--> var from patch: _xmlReader spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _xmlReader` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _xmlReader` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 340, #gens: 27, #ops: 1, parent:339] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 340, errors: [XmlTokenStream.java:351: error: illegal start of expression
	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:375: error: illegal start of expression
	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException 
	^, XmlTokenStream.java:397: error: illegal start of expression
	private final int _initStartElement() throws javax.xml.stream.XMLStreamException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(170): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `return _xmlReader` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (339(f=1.7976931348623157E308), 340(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (339(f=1.7976931348623157E308), )
----------Running generation: 171, population size: 1

***** Generation 171 : 0
**Parent Variant: [Variant id: 341, #gens: 26, #ops: 0, parent:-]

--Child created id: 342
--Creating new operations for variant [Variant id: 342, #gens: 26, #ops: 0, parent:341]
---analyzing modificationPoint position: 24
location: XmlFactory.java559
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 342, #gens: 25, #ops: 1, parent:341] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 342, errors: [XmlFactory.java:563: error: variable sr might not have been initialized
		_objectCodec, sr);
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(171): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (341(f=1.7976931348623157E308), 342(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (341(f=1.7976931348623157E308), )
----------Running generation: 172, population size: 1

***** Generation 172 : 0
**Parent Variant: [Variant id: 343, #gens: 26, #ops: 0, parent:-]

--Child created id: 344
--Creating new operations for variant [Variant id: 344, #gens: 26, #ops: 0, parent:343]
---analyzing modificationPoint position: 16
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Attempts Base Ingredients  3 total 30
vars from patch [jp]
--> var from patch: jp spoon.support.reflect.code.CtVariableReadImpl
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 119, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 344, #gens: 27, #ops: 1, parent:343] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 344
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-344/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(172): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `_configureParser(jp)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (343(f=1.7976931348623157E308), 344(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (343(f=1.7976931348623157E308), )
----------Running generation: 173, population size: 1

***** Generation 173 : 0
**Parent Variant: [Variant id: 345, #gens: 26, #ops: 0, parent:-]

--Child created id: 346
--Creating new operations for variant [Variant id: 346, #gens: 26, #ops: 0, parent:345]
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 18
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [_jdkXmlInFactory]
--> var from patch: _jdkXmlInFactory spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java426
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 426, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 346, #gens: 26, #ops: 1, parent:345] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 346, errors: [XmlFactory.java:428: error: cannot find symbol
		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true);
		                                                              ^
  symbol:   variable r
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory, XmlFactory.java:430: error: cannot find symbol
			r = _inputDecorator.decorate(ctxt, r);
			^
  symbol:   variable r
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory, XmlFactory.java:430: error: cannot find symbol
			r = _inputDecorator.decorate(ctxt, r);
			                                   ^
  symbol:   variable r
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory, XmlFactory.java:432: error: cannot find symbol
		return _createParser(r, ctxt);
		                     ^
  symbol:   variable r
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory]
Ingredient counter is Zero
---Undoing: gnrtn(173): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (345(f=1.7976931348623157E308), 346(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (345(f=1.7976931348623157E308), )
----------Running generation: 174, population size: 1

***** Generation 174 : 0
**Parent Variant: [Variant id: 347, #gens: 26, #ops: 0, parent:-]

--Child created id: 348
--Creating new operations for variant [Variant id: 348, #gens: 26, #ops: 0, parent:347]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch [com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH]
--> var from patch: com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java426
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 426, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 348, #gens: 27, #ops: 1, parent:347] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 348, errors: [XmlFactory.java:748: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException { 		// note: should NOT move parser if already pointing to START_ELEMENT
	    	^, XmlFactory.java:750: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	 ^, XmlFactory.java:750: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	          ^, XmlFactory.java:750: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                      ^, XmlFactory.java:750: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                  ^, XmlFactory.java:750: error: <identifier> expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                         ^, XmlFactory.java:750: error: illegal start of expression
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                          ^, XmlFactory.java:750: error: ';' expected
	 * Factory method that wraps given {@link XMLStreamWriter}, usually to allow
	                                                                      ^, XmlFactory.java:751: error: not a statement
	 * incremental serialization to compose large output by serializing a sequence
	 ^, XmlFactory.java:751: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	              ^, XmlFactory.java:751: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                               ^, XmlFactory.java:751: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                             ^, XmlFactory.java:751: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                       ^, XmlFactory.java:751: error: ';' expected
	 * incremental serialization to compose large output by serializing a sequence
	                                                                     ^, XmlFactory.java:752: error: not a statement
	 * of individual objects.
	 ^, XmlFactory.java:752: error: ';' expected
	 * of individual objects.
	     ^, XmlFactory.java:752: error: ';' expected
	 * of individual objects.
	                        ^, XmlFactory.java:754: error: illegal start of type
	 * @since 2.4
	          ^, XmlFactory.java:755: error: illegal start of expression
	 */ 	public com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException { 		try { 			sw = _initializeXmlWriter(sw);} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);} 		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(sw, false); 		return new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sw);} 	/* /**********************************************************
	    	^, XmlFactory.java:761: error: illegal start of expression
	 */ 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(out, "UTF-8"));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.Writer w) throws java.io.IOException { 		try { 			return _initializeXmlWriter(_xmlOutputFactory.createXMLStreamWriter(w));} catch (javax.xml.stream.XMLStreamException e) { 			return com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwXmlAsIOException(e);}} 	protected final javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter sw) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// And just for Sun Stax parser (JDK default), seems that we better define default namespace 		// (Woodstox doesn't care) -- otherwise it'll add unnecessary odd declaration 		sw.setDefaultNamespace(""); 		return sw;} 	protected final javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader sr) throws java.io.IOException, javax.xml.stream.XMLStreamException { 		// for now, nothing to do... except let's find the root element
	    	^, XmlFactory.java:778: error: illegal start of type
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		^, XmlFactory.java:778: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                     ^, XmlFactory.java:778: error: ';' expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                       ^, XmlFactory.java:778: error: <identifier> expected
			if (b != com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_LT) { 				return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;}} 		if (!acc.hasMoreBytes()) { 			return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 		b = acc.nextByte(); 		// Couple of choices here
			                                                                    				                                                                   		                           			                                                                      		 ^, XmlFactory.java:779: error: illegal start of type
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		^, XmlFactory.java:779: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		     ^, XmlFactory.java:779: error: <identifier> expected
		if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_QMARK) { 			// <? 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_x) { 				if (maybeXmlDecl) { 					if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_m)) { 						if (acc.hasMoreBytes() && (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_l)) { 							return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH;}}} 				// but even with just partial match, we ought to be fine
		                                                                   ^, XmlFactory.java:781: error: illegal start of type
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			^, XmlFactory.java:781: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                         ^, XmlFactory.java:781: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                             ^, XmlFactory.java:781: error: <identifier> expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                ^, XmlFactory.java:781: error: ';' expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                 ^, XmlFactory.java:781: error: class, interface, or enum expected
			if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 				return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_EXCL) { 			/* must be <!-- comment --> or <!DOCTYPE ...>, since
			                                                                                     				                                                                      ^, XmlFactory.java:784: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                    ^, XmlFactory.java:784: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			^, XmlFactory.java:784: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                    ^, XmlFactory.java:784: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                   ^, XmlFactory.java:784: error: class, interface, or enum expected
			if (!acc.hasMoreBytes()) { 				return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 			b = acc.nextByte(); 			if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 				if (!acc.hasMoreBytes()) { 					return com.fasterxml.jackson.core.format.MatchStrength.INCONCLUSIVE;} 				if (acc.nextByte() == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_HYPHEN) { 					return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;}} else if (b == com.fasterxml.jackson.dataformat.xml.XmlFactory.BYTE_D) { 				return com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(acc, "OCTYPE", com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH);}} else // maybe root element? Just needs to match first char.
			                           				                                                                      			                    			                                                                        				                           					                                                                      				                                                                                     					                                                                                                                                              				                                                                                                                                            ^, XmlFactory.java:785: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                   ^, XmlFactory.java:785: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                ^, XmlFactory.java:785: error: class, interface, or enum expected
		if (com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(acc, b)) { 			return com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH;} 		return com.fasterxml.jackson.core.format.MatchStrength.NO_MATCH;} 	private static final boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException { 		/* Can make it actual real XML check in future; for now we do just crude
		                                                                                     			                                                                     		                                                                  	                     ^, XmlFactory.java:787: error: class, interface, or enum expected
		 */ 		int ch = ((int) (b)) & 0xff; 		if (ch >= 'A') { 			// in theory, colon could be; in practice it should never be valid (wrt namespace) 			// This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...
		    		                             		^, XmlFactory.java:788: error: class, interface, or enum expected
			return true;} 		return false;}
			            ^, XmlFactory.java:788: error: class, interface, or enum expected
			return true;} 		return false;}
			              		             ^, XmlFactory.java:789: error: class, interface, or enum expected
	private static final com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor acc, java.lang.String matchStr, com.fasterxml.jackson.core.format.MatchStrength fullMatchStrength) throws 
	                     ^, XmlFactory.java:792: error: class, interface, or enum expected
		for (int i = 0, len = matchStr.length(); i < len; ++i) {
		                                         ^, XmlFactory.java:792: error: class, interface, or enum expected
		for (int i = 0, len = matchStr.length(); i < len; ++i) {
		                                                  ^, XmlFactory.java:795: error: class, interface, or enum expected
			}
			^, XmlFactory.java:798: error: class, interface, or enum expected
			}
			^, XmlFactory.java:801: error: class, interface, or enum expected
	}
	^, XmlFactory.java:803: error: class, interface, or enum expected
	private static final int skipSpace(com.fasterxml.jackson.core.format.InputAccessor acc, byte b) throws java.io.IOException 
	                     ^, XmlFactory.java:807: error: class, interface, or enum expected
			if (!((((ch == ' ') || (ch == '\r')) || (ch == '\n')) || (ch == '\t'))) {
			^, XmlFactory.java:809: error: class, interface, or enum expected
			}
			^, XmlFactory.java:812: error: class, interface, or enum expected
			}
			^, XmlFactory.java:814: error: class, interface, or enum expected
			ch = ((int) (b)) & 0xff;
			^, XmlFactory.java:815: error: class, interface, or enum expected
		} 
		^]
Ingredient counter is Zero
---Undoing: gnrtn(174): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.io.Reader r = new java.io.StringReader(content) ` -topatch--> `return com.fasterxml.jackson.core.format.MatchStrength.FULL_MATCH` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (347(f=1.7976931348623157E308), 348(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (347(f=1.7976931348623157E308), )
----------Running generation: 175, population size: 1

***** Generation 175 : 0
**Parent Variant: [Variant id: 349, #gens: 26, #ops: 0, parent:-]

--Child created id: 350
--Creating new operations for variant [Variant id: 350, #gens: 26, #ops: 0, parent:349]
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 350, #gens: 26, #ops: 1, parent:349] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 350, errors: [XmlSerializerProvider.java:265: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:272: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:273: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:273: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:273: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:273: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:274: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:274: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:275: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:276: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(175): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (349(f=1.7976931348623157E308), 350(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (349(f=1.7976931348623157E308), )
----------Running generation: 176, population size: 1

***** Generation 176 : 0
**Parent Variant: [Variant id: 351, #gens: 26, #ops: 0, parent:-]

--Child created id: 352
--Creating new operations for variant [Variant id: 352, #gens: 26, #ops: 0, parent:351]
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
---modifPoint 0 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 352, #gens: 25, #ops: 1, parent:351] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 352
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-352/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(176): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (351(f=1.7976931348623157E308), 352(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (351(f=1.7976931348623157E308), )
----------Running generation: 177, population size: 1

***** Generation 177 : 0
**Parent Variant: [Variant id: 353, #gens: 26, #ops: 0, parent:-]

--Child created id: 354
--Creating new operations for variant [Variant id: 354, #gens: 26, #ops: 0, parent:353]
---analyzing modificationPoint position: 5
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 22
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 2 not mutation generated in  sr = _xmlInputFactory.createXMLStreamReader(r)
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 354, #gens: 25, #ops: 1, parent:353] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 354
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-354/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(177): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (353(f=1.7976931348623157E308), 354(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (353(f=1.7976931348623157E308), )
----------Running generation: 178, population size: 1

***** Generation 178 : 0
**Parent Variant: [Variant id: 355, #gens: 26, #ops: 0, parent:-]

--Child created id: 356
--Creating new operations for variant [Variant id: 356, #gens: 26, #ops: 0, parent:355]
---analyzing modificationPoint position: 7
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 356, #gens: 25, #ops: 1, parent:355] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 356
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-356/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(178): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (355(f=1.7976931348623157E308), 356(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (355(f=1.7976931348623157E308), )
----------Running generation: 179, population size: 1

***** Generation 179 : 0
**Parent Variant: [Variant id: 357, #gens: 26, #ops: 0, parent:-]

--Child created id: 358
--Creating new operations for variant [Variant id: 358, #gens: 26, #ops: 0, parent:357]
---analyzing modificationPoint position: 14
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [asArray, gen]
--> var from patch: asArray spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java90
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 90, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 358, #gens: 27, #ops: 1, parent:357] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 358, errors: [XmlSerializerProvider.java:108: error: illegal start of type
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:108: error: ';' expected
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(179): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...] ` -topatch--> `// end of super-class implementation if ( asArray) { 	gen.writeEndObject(); }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (357(f=1.7976931348623157E308), 358(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (357(f=1.7976931348623157E308), )
----------Running generation: 180, population size: 1

***** Generation 180 : 0
**Parent Variant: [Variant id: 359, #gens: 26, #ops: 0, parent:-]

--Child created id: 360
--Creating new operations for variant [Variant id: 360, #gens: 26, #ops: 0, parent:359]
---analyzing modificationPoint position: 25
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 12
---modifPoint 2 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 360, #gens: 27, #ops: 1, parent:359] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 360
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-360/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(180): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (359(f=1.7976931348623157E308), 360(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (359(f=1.7976931348623157E308), )
----------Running generation: 181, population size: 1

***** Generation 181 : 0
**Parent Variant: [Variant id: 361, #gens: 26, #ops: 0, parent:-]

--Child created id: 362
--Creating new operations for variant [Variant id: 362, #gens: 26, #ops: 0, parent:361]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch [_jdkXmlInFactory]
--> var from patch: _jdkXmlInFactory spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java428
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 428, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 362, #gens: 27, #ops: 1, parent:361] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 362, errors: [XmlFactory.java:428: error: unreported exception java.lang.ClassNotFoundException; must be caught or declared to be thrown
		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true); 		javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName(_jdkXmlInFactory).newInstance()));
		                                                                        		                                                                                                   ^, XmlFactory.java:428: error: unreported exception java.lang.InstantiationException; must be caught or declared to be thrown
		com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true); 		javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName(_jdkXmlInFactory).newInstance()));
		                                                                        		                                                                                                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(181): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (361(f=1.7976931348623157E308), 362(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (361(f=1.7976931348623157E308), )
----------Running generation: 182, population size: 1

***** Generation 182 : 0
**Parent Variant: [Variant id: 363, #gens: 26, #ops: 0, parent:-]

--Child created id: 364
--Creating new operations for variant [Variant id: 364, #gens: 26, #ops: 0, parent:363]
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 8
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 17
location: FromXmlParser.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 364, #gens: 25, #ops: 1, parent:363] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 364, errors: [FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                     ^, FromXmlParser.java:602: error: not a statement
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                      ^, FromXmlParser.java:602: error: ';' expected
	public java.lang.String nextTextValue() throws java.io.IOException 
	                                                                  ^, FromXmlParser.java:696: error: illegal start of expression
	private void _updateState(com.fasterxml.jackson.core.JsonToken t) 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(182): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_xmlTokens.repeatStartElement() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (363(f=1.7976931348623157E308), 364(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (363(f=1.7976931348623157E308), )
----------Running generation: 183, population size: 1

***** Generation 183 : 0
**Parent Variant: [Variant id: 365, #gens: 26, #ops: 0, parent:-]

--Child created id: 366
--Creating new operations for variant [Variant id: 366, #gens: 26, #ops: 0, parent:365]
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 366, #gens: 25, #ops: 1, parent:365] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 366
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-366/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(183): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (365(f=1.7976931348623157E308), 366(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (365(f=1.7976931348623157E308), )
----------Running generation: 184, population size: 1

***** Generation 184 : 0
**Parent Variant: [Variant id: 367, #gens: 26, #ops: 0, parent:-]

--Child created id: 368
--Creating new operations for variant [Variant id: 368, #gens: 26, #ops: 0, parent:367]
---analyzing modificationPoint position: 13
Templates availables57
Attempts Base Ingredients  1 total 57
Attempts Base Ingredients  2 total 57
vars from patch [value, gen]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 75, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 368, #gens: 27, #ops: 1, parent:367] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 368
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-368/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(184): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `if (value == null) { 	_serializeXmlNull(gen); 	return; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (367(f=1.7976931348623157E308), 368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (367(f=1.7976931348623157E308), )
----------Running generation: 185, population size: 1

***** Generation 185 : 0
**Parent Variant: [Variant id: 369, #gens: 26, #ops: 0, parent:-]

--Child created id: 370
--Creating new operations for variant [Variant id: 370, #gens: 26, #ops: 0, parent:369]
---analyzing modificationPoint position: 18
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 19
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [_jdkXmlInFactory]
--> var from patch: _jdkXmlInFactory spoon.support.reflect.code.CtFieldReadImpl
location: XmlFactory.java427
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 427, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 370, #gens: 26, #ops: 1, parent:369] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 370, errors: [XmlFactory.java:430: error: cannot find symbol
			r = _inputDecorator.decorate(ctxt, r);
			                             ^
  symbol:   variable ctxt
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory, XmlFactory.java:432: error: cannot find symbol
		return _createParser(r, ctxt);
		                        ^
  symbol:   variable ctxt
  location: class com.fasterxml.jackson.dataformat.xml.XmlFactory]
Ingredient counter is Zero
---Undoing: gnrtn(185): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true) ` -topatch--> `javax.xml.stream.XMLInputFactory inf = ((javax.xml.stream.XMLInputFactory) (java.lang.Class.forName([...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (369(f=1.7976931348623157E308), 370(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (369(f=1.7976931348623157E308), )
----------Running generation: 186, population size: 1

***** Generation 186 : 0
**Parent Variant: [Variant id: 371, #gens: 26, #ops: 0, parent:-]

--Child created id: 372
--Creating new operations for variant [Variant id: 372, #gens: 26, #ops: 0, parent:371]
---analyzing modificationPoint position: 6
location: StaxUtil.java23
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 372, #gens: 25, #ops: 1, parent:371] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 372
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-372/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(186): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw ((java.lang.RuntimeException) (t)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (371(f=1.7976931348623157E308), 372(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (371(f=1.7976931348623157E308), )
----------Running generation: 187, population size: 1

***** Generation 187 : 0
**Parent Variant: [Variant id: 373, #gens: 26, #ops: 0, parent:-]

--Child created id: 374
--Creating new operations for variant [Variant id: 374, #gens: 26, #ops: 0, parent:373]
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 374, #gens: 25, #ops: 1, parent:373] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 374
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-374/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(187): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (373(f=1.7976931348623157E308), 374(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (373(f=1.7976931348623157E308), )
----------Running generation: 188, population size: 1

***** Generation 188 : 0
**Parent Variant: [Variant id: 375, #gens: 26, #ops: 0, parent:-]

--Child created id: 376
--Creating new operations for variant [Variant id: 376, #gens: 26, #ops: 0, parent:375]
---analyzing modificationPoint position: 1
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 13
location: XmlSerializerProvider.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 376, #gens: 25, #ops: 1, parent:375] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 376, errors: [XmlSerializerProvider.java:105: error: variable asArray might not have been initialized
		asArray) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(188): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xgen == null) { 	// called by convertValue() 	asArray = false; } else { 	javax.xml.namespace.QNa[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (375(f=1.7976931348623157E308), 376(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (375(f=1.7976931348623157E308), )
----------Running generation: 189, population size: 1

***** Generation 189 : 0
**Parent Variant: [Variant id: 377, #gens: 26, #ops: 0, parent:-]

--Child created id: 378
--Creating new operations for variant [Variant id: 378, #gens: 26, #ops: 0, parent:377]
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 12
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [cls]
--> var from patch: cls spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 74, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 378, #gens: 27, #ops: 1, parent:377] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 378, errors: [XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                          ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                             ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                    ^, XmlSerializerProvider.java:112: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws 
	                                                                                                                                                 ^, XmlSerializerProvider.java:113: error: not a statement
	java.io.IOException 
	       ^, XmlSerializerProvider.java:113: error: ';' expected
	java.io.IOException 
	                   ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                          ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                             ^, XmlSerializerProvider.java:158: error: ';' expected
	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType, 
	                                                                                                    ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                   ^, XmlSerializerProvider.java:159: error: not a statement
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                   ^, XmlSerializerProvider.java:159: error: ';' expected
	com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser) throws java.io.IOException 
	                                                                                               ^, XmlSerializerProvider.java:201: error: illegal start of expression
	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(189): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen) ` -topatch--> `// From super-class implementation final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Obj[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (377(f=1.7976931348623157E308), 378(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (377(f=1.7976931348623157E308), )
----------Running generation: 190, population size: 1

***** Generation 190 : 0
**Parent Variant: [Variant id: 379, #gens: 26, #ops: 0, parent:-]

--Child created id: 380
--Creating new operations for variant [Variant id: 380, #gens: 26, #ops: 0, parent:379]
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
vars from patch [gen]
--> var from patch: gen spoon.support.reflect.code.CtVariableReadImpl
location: XmlSerializerProvider.java68
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider line: 68, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 380, #gens: 27, #ops: 1, parent:379] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 380, errors: [XmlSerializerProvider.java:265: error: 'catch' without 'try'
			throw ioe;} catch (java.lang.Exception e) { 			// but wrap RuntimeExceptions, to get path information 			java.lang.String msg = e.getMessage(); 			if (msg == null) { 				msg = ("[no message for " + e.getClass().getName()) + "]";} 			throw com.fasterxml.jackson.databind.JsonMappingException.from(gen, msg, e);} 		// end of super-class implementation
			            ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                          ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                             ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                    ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: not a statement
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                 ^, XmlSerializerProvider.java:266: error: ';' expected
		if (asArray) { 			gen.writeEndObject();}} 	@java.lang.SuppressWarnings("resource") 	@java.lang.Override 	public void serializeValue(com.fasterxml.jackson.core.JsonGenerator gen, java.lang.Object value, com.fasterxml.jackson.databind.JavaType rootType) throws java.io.IOException { 		if (value == null) { 			_serializeXmlNull(gen); 			return;} 		final boolean asArray; 		final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen); 		if (xgen == null) { 			// called by convertValue() 			asArray = false;} else { 			javax.xml.namespace.QName rootName = _rootNameFromConfig(); 			if (rootName == null) { 				rootName = _rootNameLookup.findRootName(rootType, _config);} 			_initWithRootName(xgen, rootName); 			asArray = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(rootType); 			if (asArray) { 				_startRootArray(xgen, rootName);}} 		final com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = findTypedValueSerializer(rootType, true, null); 		// From super-class implementation
		               			                        	                                        	                    	                                                                                                                                                                             ^, XmlSerializerProvider.java:272: error: illegal start of expression
		if (asArray) { 			gen.writeEndObject();}} 	protected void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator jgen) throws java.io.IOException { 		if (jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) 			_initWithRootName(((com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) (jgen)), com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL); 		super.serializeValue(jgen, null);} 	protected void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		xgen.writeStartObject(); 		// Could repeat root name, but what's the point? How to customize? 		xgen.writeFieldName("item");} 	protected void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen, javax.xml.namespace.QName rootName) throws java.io.IOException { 		/* 28-Nov-2012, tatu: We should only initialize the root
		               			                        	^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		     ^, XmlSerializerProvider.java:273: error: '(' expected
		 name if no name has been set, as per [dataformat-xml#42],
		        ^, XmlSerializerProvider.java:273: error: ')' expected
		 name if no name has been set, as per [dataformat-xml#42],
		           ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                    ^, XmlSerializerProvider.java:273: error: variable declaration not allowed here
		 name if no name has been set, as per [dataformat-xml#42],
		                 ^, XmlSerializerProvider.java:273: error: ';' expected
		 name if no name has been set, as per [dataformat-xml#42],
		                                 ^, XmlSerializerProvider.java:273: error: illegal character: '#'
		 name if no name has been set, as per [dataformat-xml#42],
		                                                     ^, XmlSerializerProvider.java:273: error: not a statement
		 name if no name has been set, as per [dataformat-xml#42],
		                                      ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		         ^, XmlSerializerProvider.java:274: error: '(' expected
		 to allow for custom serializers to work.
		             ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                ^, XmlSerializerProvider.java:274: error: ';' expected
		 to allow for custom serializers to work.
		                                   ^, XmlSerializerProvider.java:274: error: <identifier> expected
		 to allow for custom serializers to work.
		                                         ^, XmlSerializerProvider.java:275: error: illegal start of expression
		 */
		  ^, XmlSerializerProvider.java:276: error: illegal start of expression
		if (!xgen.setNextNameIfMissing(rootName)) { 			// however, if we are root, we... insist
		^]
Ingredient counter is Zero
---Undoing: gnrtn(190): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	_serializeXmlNull(gen); 	return; } ` -topatch--> `// but verify if (!(gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer)) { 	throw com.fa[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (379(f=1.7976931348623157E308), 380(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (379(f=1.7976931348623157E308), )
----------Running generation: 191, population size: 1

***** Generation 191 : 0
**Parent Variant: [Variant id: 381, #gens: 26, #ops: 0, parent:-]

--Child created id: 382
--Creating new operations for variant [Variant id: 382, #gens: 26, #ops: 0, parent:381]
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java22
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 22, pointed element: CtContinueImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 

--Summary Creation: for variant [Variant id: 382, #gens: 27, #ops: 1, parent:381] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 382, errors: [StaxUtil.java:55: error: continue outside of loop
		continue; 		if (t instanceof java.lang.Error) { 			throw ((java.lang.Error) (t));} 		if (t instanceof java.lang.RuntimeException) { 			throw ((java.lang.RuntimeException) (t));} 		throw new java.io.IOException(t);} 	/**
		^]
Ingredient counter is Zero
---Undoing: gnrtn(191): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `continue` (spoon.support.reflect.code.CtContinueImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (381(f=1.7976931348623157E308), 382(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (381(f=1.7976931348623157E308), )
----------Running generation: 192, population size: 1

***** Generation 192 : 0
**Parent Variant: [Variant id: 383, #gens: 26, #ops: 0, parent:-]

--Child created id: 384
--Creating new operations for variant [Variant id: 384, #gens: 26, #ops: 0, parent:383]
---analyzing modificationPoint position: 23
Templates availables143
Attempts Base Ingredients  1 total 143
vars from patch []
location: XmlFactory.java557
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return new com.fasterxml.jackson.dataformat.xml.XmlFactory(this, null)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.XmlFactory line: 557, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return new com.fasterxml.jackson.dataformat.xml.XmlFactory(this, null)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 384, #gens: 27, #ops: 1, parent:383] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 384, errors: [XmlFactory.java:558: error: incompatible types: com.fasterxml.jackson.dataformat.xml.XmlFactory cannot be converted to com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser
			sr = _initializeXmlReader(sr); 			return new com.fasterxml.jackson.dataformat.xml.XmlFactory(this, null);
			                               			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(192): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `return new com.fasterxml.jackson.dataformat.xml.XmlFactory(this, null)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (383(f=1.7976931348623157E308), 384(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (383(f=1.7976931348623157E308), )
----------Running generation: 193, population size: 1

***** Generation 193 : 0
**Parent Variant: [Variant id: 385, #gens: 26, #ops: 0, parent:-]

--Child created id: 386
--Creating new operations for variant [Variant id: 386, #gens: 26, #ops: 0, parent:385]
---analyzing modificationPoint position: 2
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java18
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 18, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 386, #gens: 27, #ops: 1, parent:385] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 386
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-386/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(193): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.Throwable t = e ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (385(f=1.7976931348623157E308), 386(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (385(f=1.7976931348623157E308), )
----------Running generation: 194, population size: 1

***** Generation 194 : 0
**Parent Variant: [Variant id: 387, #gens: 26, #ops: 0, parent:-]

--Child created id: 388
--Creating new operations for variant [Variant id: 388, #gens: 26, #ops: 0, parent:387]
---analyzing modificationPoint position: 18
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 21
---modifPoint 1 not mutation generated in  return _createParser(r, ctxt)
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 9
Templates availables57
Attempts Base Ingredients  1 total 57
Attempts Base Ingredients  2 total 57
---modifPoint 3 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 2
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
---modifPoint 4 not mutation generated in  java.lang.Throwable t = e
---analyzing modificationPoint position: 25
location: XmlFactory.java650
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 388, #gens: 25, #ops: 1, parent:387] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 388
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-388/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(194): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `// for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (387(f=1.7976931348623157E308), 388(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (387(f=1.7976931348623157E308), )
----------Running generation: 195, population size: 1

***** Generation 195 : 0
**Parent Variant: [Variant id: 389, #gens: 26, #ops: 0, parent:-]

--Child created id: 390
--Creating new operations for variant [Variant id: 390, #gens: 26, #ops: 0, parent:389]
---analyzing modificationPoint position: 4
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 1
---modifPoint 1 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 18
---modifPoint 2 not mutation generated in  java.io.Reader r = new java.io.StringReader(content)
---analyzing modificationPoint position: 8
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 3 not mutation generated in  throw new java.io.IOException(t)
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 390, #gens: 25, #ops: 1, parent:389] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 390
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-390/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(195): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (389(f=1.7976931348623157E308), 390(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (389(f=1.7976931348623157E308), )
----------Running generation: 196, population size: 1

***** Generation 196 : 0
**Parent Variant: [Variant id: 391, #gens: 26, #ops: 0, parent:-]

--Child created id: 392
--Creating new operations for variant [Variant id: 392, #gens: 26, #ops: 0, parent:391]
---analyzing modificationPoint position: 3
location: StaxUtil.java19
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 392, #gens: 25, #ops: 1, parent:391] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 392
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-392/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(196): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (391(f=1.7976931348623157E308), 392(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (391(f=1.7976931348623157E308), )
----------Running generation: 197, population size: 1

***** Generation 197 : 0
**Parent Variant: [Variant id: 393, #gens: 26, #ops: 0, parent:-]

--Child created id: 394
--Creating new operations for variant [Variant id: 394, #gens: 26, #ops: 0, parent:393]
---analyzing modificationPoint position: 23
location: XmlFactory.java557
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 394, #gens: 25, #ops: 1, parent:393] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 394, errors: [XmlFactory.java:556: error: '{' expected
		try 
		   ^, XmlFactory.java:559: error: 'catch' without 'try'
		 catch (javax.xml.stream.XMLStreamException e) {
		 ^, XmlFactory.java:556: error: 'try' without 'catch', 'finally' or resource declarations
		try 
		^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                             ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                         ^, XmlFactory.java:571: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                      ^, XmlFactory.java:571: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt, 
	                                                                                                                                                                ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                     ^, XmlFactory.java:572: error: not a statement
	boolean recycleBuffer) throws java.io.IOException 
	                                     ^, XmlFactory.java:572: error: ';' expected
	boolean recycleBuffer) throws java.io.IOException 
	                                                 ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                             ^, XmlFactory.java:592: error: <identifier> expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                         ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                      ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                               ^, XmlFactory.java:592: error: not a statement
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                               ^, XmlFactory.java:592: error: ';' expected
	protected com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[] data, int offset, int len, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException 
	                                                                                                                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                   ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                           ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                    ^, XmlFactory.java:610: error: not a statement
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                    ^, XmlFactory.java:610: error: ';' expected
	protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer out, com.fasterxml.jackson.core.io.IOContext ctxt) throws java.io.IOException {
	                                                                                                                                                                ^, XmlFactory.java:622: error: illegal start of expression
	protected javax.xml.stream.XMLStreamWriter _createXmlWriter(java.io.OutputStream out) throws java.io.IOException 
	^]
Ingredient counter is Zero
---Undoing: gnrtn(197): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sr = _initializeXmlReader(sr) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (393(f=1.7976931348623157E308), 394(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (393(f=1.7976931348623157E308), )
----------Running generation: 198, population size: 1

***** Generation 198 : 0
**Parent Variant: [Variant id: 395, #gens: 26, #ops: 0, parent:-]

--Child created id: 396
--Creating new operations for variant [Variant id: 396, #gens: 26, #ops: 0, parent:395]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 15
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [jp, _namesToWrap]
--> var from patch: jp spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: _namesToWrap spoon.support.reflect.code.CtFieldReadImpl
location: WrapperHandlingDeserializer.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer line: 153, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 396, #gens: 27, #ops: 1, parent:395] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 396
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-396/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(198): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap) ` -topatch--> `/* 19-Aug-2013, tatu: Although we should not usually get called with parser of other types, there ar[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (395(f=1.7976931348623157E308), 396(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (395(f=1.7976931348623157E308), )
----------Running generation: 199, population size: 1

***** Generation 199 : 0
**Parent Variant: [Variant id: 397, #gens: 26, #ops: 0, parent:-]

--Child created id: 398
--Creating new operations for variant [Variant id: 398, #gens: 26, #ops: 0, parent:397]
---analyzing modificationPoint position: 0
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  _configureParser(jp)
---analyzing modificationPoint position: 3
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: StaxUtil.java19
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.util.StaxUtil line: 19, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 398, #gens: 27, #ops: 1, parent:397] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 398
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-398/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(199): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (t.getCause() != null) { 	t = t.getCause(); }  ` -topatch--> `int changes = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (397(f=1.7976931348623157E308), 398(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (397(f=1.7976931348623157E308), )
----------Running generation: 200, population size: 1

***** Generation 200 : 0
**Parent Variant: [Variant id: 399, #gens: 26, #ops: 0, parent:-]

--Child created id: 400
--Creating new operations for variant [Variant id: 400, #gens: 26, #ops: 0, parent:399]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  if (t instanceof java.lang.RuntimeException) { 	throw ((java.lang.RuntimeException) (t));}
---analyzing modificationPoint position: 20
Templates availables143
Attempts Base Ingredients  1 total 143
Attempts Base Ingredients  2 total 143
---modifPoint 1 not mutation generated in  if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); }
---analyzing modificationPoint position: 5
location: StaxUtil.java22
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 400, #gens: 25, #ops: 1, parent:399] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 400
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-400/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(200): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));} ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (399(f=1.7976931348623157E308), 400(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (399(f=1.7976931348623157E308), )
----------Running generation: 201, population size: 1

***** Generation 201 : 0
**Parent Variant: [Variant id: 401, #gens: 26, #ops: 0, parent:-]

--Child created id: 402
--Creating new operations for variant [Variant id: 402, #gens: 26, #ops: 0, parent:401]
---analyzing modificationPoint position: 17
Templates availables155
Attempts Base Ingredients  1 total 155
---modifPoint 0 not mutation generated in  _xmlTokens.repeatStartElement()
---analyzing modificationPoint position: 9
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  if (value == null) { 	_serializeXmlNull(gen); 	return; }
---analyzing modificationPoint position: 19
---modifPoint 2 not mutation generated in  com.fasterxml.jackson.core.io.IOContext ctxt = _createContext(r, true)
---analyzing modificationPoint position: 15
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
Attempts Base Ingredients  4 total 4
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 4
---modifPoint 3 not mutation generated in  ((com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) (jp)).addVirtualWrapping(_namesToWrap)
---analyzing modificationPoint position: 25
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 2
---modifPoint 4 not mutation generated in  // for now, nothing to do... except let's find the root element while (sr.next() != javax.xml.stream[...]
---analyzing modificationPoint position: 12
---modifPoint 5 not mutation generated in  final com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator xgen = _asXmlGenerator(gen)
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
Attempts Base Ingredients  2 total 33
---modifPoint 6 not mutation generated in  if (t instanceof java.lang.Error) { 	throw ((java.lang.Error) (t));}
---analyzing modificationPoint position: 11
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 7 not mutation generated in  final boolean asArray
---analyzing modificationPoint position: 3
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtWhileImpl@1, search space size: 1
---modifPoint 8 not mutation generated in  while (t.getCause() != null) { 	t = t.getCause(); } 
---analyzing modificationPoint position: 1
---modifPoint 9 not mutation generated in  return _delegatee.deserialize(jp, ctxt)
---analyzing modificationPoint position: 4
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 10 not mutation generated in  throw ((java.lang.Error) (t))
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 402, #gens: 25, #ops: 1, parent:401] gen mutated: 1 , gen not mut: 11, gen not applied  0
-The child compiles: id 402
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-402/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(201): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (401(f=1.7976931348623157E308), 402(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (401(f=1.7976931348623157E308), )
----------Running generation: 202, population size: 1

***** Generation 202 : 0
**Parent Variant: [Variant id: 403, #gens: 26, #ops: 0, parent:-]

--Child created id: 404
--Creating new operations for variant [Variant id: 404, #gens: 26, #ops: 0, parent:403]
---analyzing modificationPoint position: 0
location: WrapperHandlingDeserializer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 404, #gens: 25, #ops: 1, parent:403] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 404
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-404/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(202): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `_configureParser(jp) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (403(f=1.7976931348623157E308), 404(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (403(f=1.7976931348623157E308), )
----------Running generation: 203, population size: 1

***** Generation 203 : 0
**Parent Variant: [Variant id: 405, #gens: 26, #ops: 0, parent:-]

--Child created id: 406
--Creating new operations for variant [Variant id: 406, #gens: 26, #ops: 0, parent:405]
---analyzing modificationPoint position: 20
location: XmlFactory.java428
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 406, #gens: 25, #ops: 1, parent:405] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 406
-Running first validation
Executing process: (timeout10secs) 
/usr/lib/jvm/java-8-openjdk-amd64/bin//java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/variant-406/":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.8/jackson-core-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar":"/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.8/jackson-databind-2.7.8.jar":"/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.7.8/jackson-module-jaxb-annotations-2.7.8.jar":"/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar":"/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar":"/root/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.2/woodstox-core-5.0.2.jar":"/root/.m2/repository/junit/junit/4.12/junit-4.12.jar":"/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar":"/astor/lib/gzoltar/com.gzoltar-0.0.3.jar":"/astor/./output_astor/AstorMain-jackson-dataformat-xml/bin/default/":"/astor/lib/jtestex7.jar":"/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  com.fasterxml.jackson.dataformat.xml.SupportDTDDefaultsTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(203): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (_inputDecorator != null) { 	r = _inputDecorator.decorate(ctxt, r); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (405(f=1.7976931348623157E308), 406(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (405(f=1.7976931348623157E308), )
----------Running generation: 204, population size: 1

***** Generation 204 : 0
**Parent Variant: [Variant id: 407, #gens: 26, #ops: 0, parent:-]

--Child created id: 408
--Creating new operations for variant [Variant id: 408, #gens: 26, #ops: 0, parent:407]
---analyzing modificationPoint position: 16
Templates availables124
Attempts Base Ingredients  1 total 124
vars from patch [_repeatElement, com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END]
--> var from patch: _repeatElement spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END spoon.support.reflect.code.CtFieldReadImpl
location: XmlTokenStream.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream line: 228, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 408, #gens: 27, #ops: 1, parent:407] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 408, errors: [XmlTokenStream.java:490: error: illegal start of expression
	 */ 	private final int _next() throws javax.xml.stream.XMLStreamException { 		switch (_currentState) { 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_VALUE : 				++_nextAttributeIndex; 				// fall through 			case com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT : 				// attributes to return?
	    	^, XmlTokenStream.java:485: error: 'try' without 'catch', 'finally' or resource declarations
		if ((_currentState != com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_ATTRIBUTE_NAME) || (_nextAttributeIndex != 0)) { 			return null;} 		try { 			java.lang.String text = _collectUntilTag(); 			// 23-Dec-2015, tatu: Used to require text not to be null, but as per 			// [dataformat-xml#167], empty tag does count
		                                                                                                                                     			              		^, XmlTokenStream.java:497: error: illegal start of expression
		return _initStartElement();} 	private final java.lang.String _collectUntilTag() throws javax.xml.stream.XMLStreamException { 		java.lang.String text = null; 		while (true) { 			switch (_xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return text; 					// note: SPACE is ignorable (and seldom seen), not to be included 				case javax.xml.stream.XMLStreamConstants.CHARACTERS : 				case javax.xml.stream.XMLStreamConstants.CDATA : 					if (text == null) { 						text = _xmlReader.getText();} else { 						// can be optimized in future, if need be: 						text += _xmlReader.getText();} 					break; 				default : 					// any other type (proc instr, comment etc) is just ignored}} } 	private final int _skipUntilTag() throws javax.xml.stream.XMLStreamException { 		while (_xmlReader.hasNext()) { 			int type; 			switch (type = _xmlReader.next()) { 				case javax.xml.stream.XMLStreamConstants.START_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_ELEMENT : 				case javax.xml.stream.XMLStreamConstants.END_DOCUMENT : 					return type; 				default : 					// any other type (proc instr, comment etc) is just ignored}} 		throw new java.lang.IllegalStateException("Expected to find a tag, instead reached end of input");} 	/* /**********************************************************************
		                             	^, XmlTokenStream.java:500: error: illegal start of expression
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	        ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	              ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                  ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                   ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                    ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                             ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                  ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                   ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                       ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                             ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                              ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                 ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		          ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		           ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		               ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                       ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                          ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                            ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                       ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                       ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                        ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		          ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		           ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		               ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                       ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                 ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                   ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                             ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                              ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                          ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                           ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                            ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                  ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                            ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                             ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                              ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                               ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                    ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                      ^, XmlTokenStream.java:500: error: case, default, or '}' expected
	 */ 	private final int _initStartElement() throws javax.xml.stream.XMLStreamException { 		final java.lang.String ns = _xmlReader.getNamespaceURI(); 		final java.lang.String localName = _xmlReader.getLocalName(); 		_attributeCount = _xmlReader.getAttributeCount(); 		_nextAttributeIndex = 0; 		/* Support for virtual wrapping: in wrapping, may either
	    	                                                                                   		                                                          		                                                              		                                                  		                       ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		   ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		    ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                    ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                       ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                           ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                             ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			   ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			    ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                   ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                    ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                  ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                   ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                            ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                              ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                 ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                   ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                  ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                 ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                  ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                     ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                      ^, XmlTokenStream.java:505: error: case, default, or '}' expected
		if (_currentWrapper != null) { 			if (_currentWrapper.matchesWrapper(localName, ns)) { 				_currentWrapper = _currentWrapper.intermediateWrapper();} else { 				// implicit end is more interesting: 				_localName = _currentWrapper.getWrapperLocalName(); 				_namespaceURI = _currentWrapper.getWrapperNamespace(); 				_currentWrapper = _currentWrapper.getParent(); 				// System.out.println(" START_ELEMENT ("+localName+") not matching '"+_localName+"'; add extra XML-END-ELEMENT!"); 				// Important! We also need to restore the START_ELEMENT, so: 				_nextLocalName = localName; 				_nextNamespaceURI = ns; 				_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_START_DELAYED; 				return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_END_ELEMENT;}} 		_localName = localName; 		_namespaceURI = ns; 		return _currentState = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.XML_START_ELEMENT;} 	/**
		                               			                                                     				                                                       ^, XmlTokenStream.java:506: error: illegal start of expression
	 * Method called to handle details of repeating "virtual"
	 ^, XmlTokenStream.java:506: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	         ^, XmlTokenStream.java:506: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                   ^, XmlTokenStream.java:506: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                  ^, XmlTokenStream.java:506: error: ';' expected
	 * Method called to handle details of repeating "virtual"
	                                               ^, XmlTokenStream.java:507: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	        ^, XmlTokenStream.java:507: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	            ^, XmlTokenStream.java:507: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	             ^, XmlTokenStream.java:507: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                     ^, XmlTokenStream.java:507: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                       ^, XmlTokenStream.java:507: error: ';' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                             ^, XmlTokenStream.java:507: error: '(' expected
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                 ^, XmlTokenStream.java:507: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                           ^, XmlTokenStream.java:507: error: not a statement
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                  ^, XmlTokenStream.java:507: error: unclosed character literal
	 * start/end elements, needed for handling 'unwrapped' lists.
	                                                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(204): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalStateException((("Current state not XML_START_ELEMENT (" +  com.fasterxml[...] ` -topatch--> `_repeatElement = com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.REPLAY_END` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (407(f=1.7976931348623157E308), 408(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (407(f=1.7976931348623157E308), )
----------Running generation: 205, population size: 1

***** Generation 205 : 0
**Parent Variant: [Variant id: 409, #gens: 26, #ops: 0, parent:-]

--Child created id: 410
--Creating new operations for variant [Variant id: 410, #gens: 26, #ops: 0, parent:409]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [PackageVersion.VERSION]
--> var from patch: PackageVersion.VERSION spoon.support.reflect.code.CtFieldReadImpl
Error at generation 205
java.lang.NullPointerException
Time Repair Loop (s): 42.134
generationsexecuted: 205
----SUMMARY_EXECUTION---
End Repair Search: NOT Found solution
All variants:
f 1.7976931348623157E308, [Variant id: 409, #gens: 26, #ops: 0, parent:-]
Number suspicious:1
Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=42.134
NR_GENERATIONS=205
NR_RIGHT_COMPILATIONS=99
NR_FAILLING_COMPILATIONS=105
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=ERROR
FAULT_LOCALIZATION=fr.inria.astor.core.faultlocalization.flacoco.FlacocoFaultLocalization

Patch stats:

Storing ing JSON at /astor/./output_astor/AstorMain-jackson-dataformat-xml//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":99,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"fr.inria.astor.core.faultlocalization.flacoco.FlacocoFaultLocalization","OUTPUT_STATUS":"ERROR","NR_FAILLING_COMPILATIONS":105,"NR_GENERATIONS":205,"TOTAL_TIME":42.134,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
Time Total(s): 68.533
